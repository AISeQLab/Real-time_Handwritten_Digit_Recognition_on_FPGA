// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv2d_V_address0,
        conv2d_V_ce0,
        conv2d_V_q0,
        conv2d_V_address1,
        conv2d_V_ce1,
        conv2d_V_q1,
        conv2d_V_address2,
        conv2d_V_ce2,
        conv2d_V_q2,
        conv2d_V_address3,
        conv2d_V_ce3,
        conv2d_V_q3,
        max_pooling2d_V_address0,
        max_pooling2d_V_ce0,
        max_pooling2d_V_we0,
        max_pooling2d_V_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv2d_V_address0;
output   conv2d_V_ce0;
input  [31:0] conv2d_V_q0;
output  [11:0] conv2d_V_address1;
output   conv2d_V_ce1;
input  [31:0] conv2d_V_q1;
output  [11:0] conv2d_V_address2;
output   conv2d_V_ce2;
input  [31:0] conv2d_V_q2;
output  [11:0] conv2d_V_address3;
output   conv2d_V_ce3;
input  [31:0] conv2d_V_q3;
output  [9:0] max_pooling2d_V_address0;
output   max_pooling2d_V_ce0;
output   max_pooling2d_V_we0;
output  [31:0] max_pooling2d_V_d0;

reg ap_idle;
reg conv2d_V_ce0;
reg conv2d_V_ce1;
reg conv2d_V_ce2;
reg conv2d_V_ce3;
reg max_pooling2d_V_ce0;
reg max_pooling2d_V_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln7_fu_266_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln9_fu_284_p2;
reg   [0:0] icmp_ln9_reg_777;
reg   [0:0] icmp_ln9_reg_777_pp0_iter1_reg;
wire   [1:0] trunc_ln7_fu_336_p1;
reg   [1:0] trunc_ln7_reg_783;
reg   [1:0] trunc_ln7_reg_783_pp0_iter1_reg;
wire   [0:0] and_ln7_fu_364_p2;
reg   [0:0] and_ln7_reg_789;
reg   [0:0] and_ln7_reg_789_pp0_iter1_reg;
wire   [31:0] select_ln16_3_fu_617_p3;
reg   [31:0] select_ln16_3_reg_815;
wire   [63:0] zext_ln15_fu_468_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln15_1_fu_479_p1;
wire   [63:0] zext_ln15_2_fu_490_p1;
wire   [63:0] zext_ln15_3_fu_501_p1;
wire   [63:0] zext_ln20_fu_703_p1;
reg   [3:0] y_fu_80;
wire   [3:0] add_ln10_fu_506_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_y_load;
reg   [7:0] index_1_fu_84;
wire   [7:0] add_ln21_1_fu_708_p2;
reg   [3:0] z_fu_88;
wire   [3:0] select_ln9_4_fu_438_p3;
reg   [3:0] ap_sig_allocacmp_z_1;
reg   [7:0] index_fu_92;
wire   [7:0] select_ln9_3_fu_680_p3;
reg   [7:0] indvar_flatten151_fu_96;
wire   [7:0] select_ln9_5_fu_518_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten151_load;
reg   [2:0] i_fu_100;
wire   [2:0] select_ln7_4_fu_328_p3;
reg   [2:0] ap_sig_allocacmp_i_3;
reg   [9:0] indvar_flatten183_fu_104;
wire   [9:0] add_ln7_fu_272_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten183_load;
wire   [1:0] empty_fu_214_p1;
wire   [7:0] p_shl9_fu_218_p3;
wire   [9:0] p_shl_fu_230_p3;
wire   [7:0] p_shl1_fu_242_p3;
wire   [10:0] p_shl10_cast_fu_238_p1;
wire   [10:0] p_shl11_cast_fu_250_p1;
wire   [10:0] p_shl9_cast_fu_226_p1;
wire   [10:0] empty_72_fu_254_p2;
wire   [2:0] add_ln7_2_fu_298_p2;
wire   [1:0] empty_74_fu_304_p1;
wire   [7:0] p_shl9_mid1_fu_308_p3;
wire   [7:0] select_ln7_3_fu_316_p3;
wire   [10:0] zext_ln7_3_fu_340_p1;
wire   [10:0] add_ln14_3_fu_260_p2;
wire   [0:0] icmp_ln10_fu_358_p2;
wire   [0:0] xor_ln7_fu_352_p2;
wire   [3:0] select_ln7_1_fu_290_p3;
wire   [0:0] or_ln9_fu_376_p2;
wire   [3:0] add_ln9_fu_370_p2;
wire   [9:0] p_shl10_mid1_fu_390_p3;
wire   [7:0] p_shl11_mid1_fu_402_p3;
wire   [10:0] p_shl10_cast_mid1_fu_398_p1;
wire   [10:0] p_shl11_cast_mid1_fu_410_p1;
wire   [10:0] zext_ln7_fu_324_p1;
wire   [10:0] p_mid1149_fu_414_p2;
wire   [10:0] add_ln14_4_fu_420_p2;
wire   [10:0] select_ln7_5_fu_344_p3;
wire   [10:0] select_ln9_2_fu_426_p3;
wire   [3:0] select_ln9_1_fu_382_p3;
wire   [10:0] tmp5_fu_446_p5;
wire   [11:0] zext_ln14_fu_458_p1;
wire  signed [11:0] select_ln9_2_cast_fu_434_p1;
wire   [11:0] add_ln14_fu_462_p2;
wire   [11:0] or_ln14_fu_473_p2;
wire   [11:0] add_ln14_1_fu_484_p2;
wire   [11:0] add_ln14_2_fu_495_p2;
wire   [7:0] add_ln9_2_fu_512_p2;
wire   [0:0] icmp_ln1651_fu_551_p2;
wire   [31:0] select_ln16_fu_557_p3;
wire   [0:0] icmp_ln1651_1_fu_565_p2;
wire   [0:0] xor_ln1651_fu_571_p2;
wire   [31:0] select_ln16_1_fu_577_p3;
wire   [0:0] icmp_ln1651_2_fu_585_p2;
wire   [0:0] xor_ln1651_1_fu_591_p2;
wire   [31:0] select_ln16_2_fu_597_p3;
wire   [0:0] icmp_ln1651_3_fu_605_p2;
wire   [0:0] xor_ln1651_2_fu_611_p2;
wire   [8:0] p_shl6_cast_mid2_v_fu_645_p3;
wire   [5:0] zext_ln9_mid2_v_fu_656_p3;
wire   [7:0] select_ln7_fu_631_p3;
wire   [7:0] add_ln9_1_fu_667_p2;
wire   [7:0] select_ln7_2_fu_638_p3;
wire   [7:0] zext_ln7_2_fu_663_p1;
wire   [7:0] select_ln9_fu_673_p3;
wire   [7:0] add_ln19_1_fu_687_p2;
wire   [9:0] zext_ln19_fu_693_p1;
wire   [9:0] zext_ln7_1_fu_652_p1;
wire   [9:0] add_ln19_fu_697_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln7_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_100 <= select_ln7_4_fu_328_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_100 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            index_1_fu_84 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            index_1_fu_84 <= add_ln21_1_fu_708_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            index_fu_92 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            index_fu_92 <= select_ln9_3_fu_680_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln7_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten151_fu_96 <= select_ln9_5_fu_518_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten151_fu_96 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln7_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten183_fu_104 <= add_ln7_fu_272_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten183_fu_104 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln7_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            y_fu_80 <= add_ln10_fu_506_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_80 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln7_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            z_fu_88 <= select_ln9_4_fu_438_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            z_fu_88 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln7_fu_266_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln7_reg_789 <= and_ln7_fu_364_p2;
        icmp_ln9_reg_777 <= icmp_ln9_fu_284_p2;
        trunc_ln7_reg_783 <= trunc_ln7_fu_336_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln7_reg_789_pp0_iter1_reg <= and_ln7_reg_789;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln9_reg_777_pp0_iter1_reg <= icmp_ln9_reg_777;
        select_ln16_3_reg_815 <= select_ln16_3_fu_617_p3;
        trunc_ln7_reg_783_pp0_iter1_reg <= trunc_ln7_reg_783;
    end
end

always @ (*) begin
    if (((icmp_ln7_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_3 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten151_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten151_load = indvar_flatten151_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten183_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten183_load = indvar_flatten183_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_y_load = 4'd0;
    end else begin
        ap_sig_allocacmp_y_load = y_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_z_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_z_1 = z_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2d_V_ce0 = 1'b1;
    end else begin
        conv2d_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2d_V_ce1 = 1'b1;
    end else begin
        conv2d_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2d_V_ce2 = 1'b1;
    end else begin
        conv2d_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2d_V_ce3 = 1'b1;
    end else begin
        conv2d_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pooling2d_V_ce0 = 1'b1;
    end else begin
        max_pooling2d_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pooling2d_V_we0 = 1'b1;
    end else begin
        max_pooling2d_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_506_p2 = (select_ln9_1_fu_382_p3 + 4'd1);

assign add_ln14_1_fu_484_p2 = (add_ln14_fu_462_p2 + 12'd24);

assign add_ln14_2_fu_495_p2 = (add_ln14_fu_462_p2 + 12'd25);

assign add_ln14_3_fu_260_p2 = (p_shl9_cast_fu_226_p1 + empty_72_fu_254_p2);

assign add_ln14_4_fu_420_p2 = (zext_ln7_fu_324_p1 + p_mid1149_fu_414_p2);

assign add_ln14_fu_462_p2 = ($signed(zext_ln14_fu_458_p1) + $signed(select_ln9_2_cast_fu_434_p1));

assign add_ln19_1_fu_687_p2 = (zext_ln7_2_fu_663_p1 + select_ln9_fu_673_p3);

assign add_ln19_fu_697_p2 = (zext_ln19_fu_693_p1 + zext_ln7_1_fu_652_p1);

assign add_ln21_1_fu_708_p2 = (select_ln9_fu_673_p3 + 8'd1);

assign add_ln7_2_fu_298_p2 = (ap_sig_allocacmp_i_3 + 3'd1);

assign add_ln7_fu_272_p2 = (ap_sig_allocacmp_indvar_flatten183_load + 10'd1);

assign add_ln9_1_fu_667_p2 = (select_ln7_fu_631_p3 + 8'd12);

assign add_ln9_2_fu_512_p2 = (ap_sig_allocacmp_indvar_flatten151_load + 8'd1);

assign add_ln9_fu_370_p2 = (select_ln7_1_fu_290_p3 + 4'd1);

assign and_ln7_fu_364_p2 = (xor_ln7_fu_352_p2 & icmp_ln10_fu_358_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv2d_V_address0 = zext_ln15_3_fu_501_p1;

assign conv2d_V_address1 = zext_ln15_2_fu_490_p1;

assign conv2d_V_address2 = zext_ln15_1_fu_479_p1;

assign conv2d_V_address3 = zext_ln15_fu_468_p1;

assign empty_72_fu_254_p2 = (p_shl10_cast_fu_238_p1 - p_shl11_cast_fu_250_p1);

assign empty_74_fu_304_p1 = add_ln7_2_fu_298_p2[1:0];

assign empty_fu_214_p1 = ap_sig_allocacmp_i_3[1:0];

assign icmp_ln10_fu_358_p2 = ((ap_sig_allocacmp_y_load == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln1651_1_fu_565_p2 = (($signed(conv2d_V_q2) < $signed(select_ln16_fu_557_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_2_fu_585_p2 = (($signed(conv2d_V_q1) < $signed(select_ln16_1_fu_577_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_3_fu_605_p2 = (($signed(conv2d_V_q0) < $signed(select_ln16_2_fu_597_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_fu_551_p2 = (($signed(conv2d_V_q3) < $signed(32'd4294311936)) ? 1'b1 : 1'b0);

assign icmp_ln7_fu_266_p2 = ((ap_sig_allocacmp_indvar_flatten183_load == 10'd576) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_284_p2 = ((ap_sig_allocacmp_indvar_flatten151_load == 8'd144) ? 1'b1 : 1'b0);

assign max_pooling2d_V_address0 = zext_ln20_fu_703_p1;

assign max_pooling2d_V_d0 = select_ln16_3_reg_815;

assign or_ln14_fu_473_p2 = (12'd1 | add_ln14_fu_462_p2);

assign or_ln9_fu_376_p2 = (icmp_ln9_fu_284_p2 | and_ln7_fu_364_p2);

assign p_mid1149_fu_414_p2 = (p_shl10_cast_mid1_fu_398_p1 - p_shl11_cast_mid1_fu_410_p1);

assign p_shl10_cast_fu_238_p1 = p_shl_fu_230_p3;

assign p_shl10_cast_mid1_fu_398_p1 = p_shl10_mid1_fu_390_p3;

assign p_shl10_mid1_fu_390_p3 = {{add_ln9_fu_370_p2}, {6'd0}};

assign p_shl11_cast_fu_250_p1 = p_shl1_fu_242_p3;

assign p_shl11_cast_mid1_fu_410_p1 = p_shl11_mid1_fu_402_p3;

assign p_shl11_mid1_fu_402_p3 = {{add_ln9_fu_370_p2}, {4'd0}};

assign p_shl1_fu_242_p3 = {{ap_sig_allocacmp_z_1}, {4'd0}};

assign p_shl6_cast_mid2_v_fu_645_p3 = {{trunc_ln7_reg_783_pp0_iter1_reg}, {7'd0}};

assign p_shl9_cast_fu_226_p1 = p_shl9_fu_218_p3;

assign p_shl9_fu_218_p3 = {{empty_fu_214_p1}, {6'd0}};

assign p_shl9_mid1_fu_308_p3 = {{empty_74_fu_304_p1}, {6'd0}};

assign p_shl_fu_230_p3 = {{ap_sig_allocacmp_z_1}, {6'd0}};

assign select_ln16_1_fu_577_p3 = ((xor_ln1651_fu_571_p2[0:0] == 1'b1) ? conv2d_V_q2 : select_ln16_fu_557_p3);

assign select_ln16_2_fu_597_p3 = ((xor_ln1651_1_fu_591_p2[0:0] == 1'b1) ? conv2d_V_q1 : select_ln16_1_fu_577_p3);

assign select_ln16_3_fu_617_p3 = ((xor_ln1651_2_fu_611_p2[0:0] == 1'b1) ? conv2d_V_q0 : select_ln16_2_fu_597_p3);

assign select_ln16_fu_557_p3 = ((icmp_ln1651_fu_551_p2[0:0] == 1'b1) ? 32'd4294311936 : conv2d_V_q3);

assign select_ln7_1_fu_290_p3 = ((icmp_ln9_fu_284_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_z_1);

assign select_ln7_2_fu_638_p3 = ((icmp_ln9_reg_777_pp0_iter1_reg[0:0] == 1'b1) ? 8'd0 : index_1_fu_84);

assign select_ln7_3_fu_316_p3 = ((icmp_ln9_fu_284_p2[0:0] == 1'b1) ? p_shl9_mid1_fu_308_p3 : p_shl9_fu_218_p3);

assign select_ln7_4_fu_328_p3 = ((icmp_ln9_fu_284_p2[0:0] == 1'b1) ? add_ln7_2_fu_298_p2 : ap_sig_allocacmp_i_3);

assign select_ln7_5_fu_344_p3 = ((icmp_ln9_fu_284_p2[0:0] == 1'b1) ? zext_ln7_3_fu_340_p1 : add_ln14_3_fu_260_p2);

assign select_ln7_fu_631_p3 = ((icmp_ln9_reg_777_pp0_iter1_reg[0:0] == 1'b1) ? 8'd0 : index_fu_92);

assign select_ln9_1_fu_382_p3 = ((or_ln9_fu_376_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_y_load);

assign select_ln9_2_cast_fu_434_p1 = $signed(select_ln9_2_fu_426_p3);

assign select_ln9_2_fu_426_p3 = ((and_ln7_fu_364_p2[0:0] == 1'b1) ? add_ln14_4_fu_420_p2 : select_ln7_5_fu_344_p3);

assign select_ln9_3_fu_680_p3 = ((and_ln7_reg_789_pp0_iter1_reg[0:0] == 1'b1) ? add_ln9_1_fu_667_p2 : select_ln7_fu_631_p3);

assign select_ln9_4_fu_438_p3 = ((and_ln7_fu_364_p2[0:0] == 1'b1) ? add_ln9_fu_370_p2 : select_ln7_1_fu_290_p3);

assign select_ln9_5_fu_518_p3 = ((icmp_ln9_fu_284_p2[0:0] == 1'b1) ? 8'd1 : add_ln9_2_fu_512_p2);

assign select_ln9_fu_673_p3 = ((and_ln7_reg_789_pp0_iter1_reg[0:0] == 1'b1) ? add_ln9_1_fu_667_p2 : select_ln7_2_fu_638_p3);

assign tmp5_fu_446_p5 = {{{{trunc_ln7_fu_336_p1}, {4'd0}}, {select_ln9_1_fu_382_p3}}, {1'd0}};

assign trunc_ln7_fu_336_p1 = select_ln7_4_fu_328_p3[1:0];

assign xor_ln1651_1_fu_591_p2 = (icmp_ln1651_2_fu_585_p2 ^ 1'd1);

assign xor_ln1651_2_fu_611_p2 = (icmp_ln1651_3_fu_605_p2 ^ 1'd1);

assign xor_ln1651_fu_571_p2 = (icmp_ln1651_1_fu_565_p2 ^ 1'd1);

assign xor_ln7_fu_352_p2 = (icmp_ln9_fu_284_p2 ^ 1'd1);

assign zext_ln14_fu_458_p1 = tmp5_fu_446_p5;

assign zext_ln15_1_fu_479_p1 = or_ln14_fu_473_p2;

assign zext_ln15_2_fu_490_p1 = add_ln14_1_fu_484_p2;

assign zext_ln15_3_fu_501_p1 = add_ln14_2_fu_495_p2;

assign zext_ln15_fu_468_p1 = add_ln14_fu_462_p2;

assign zext_ln19_fu_693_p1 = add_ln19_1_fu_687_p2;

assign zext_ln20_fu_703_p1 = add_ln19_fu_697_p2;

assign zext_ln7_1_fu_652_p1 = p_shl6_cast_mid2_v_fu_645_p3;

assign zext_ln7_2_fu_663_p1 = zext_ln9_mid2_v_fu_656_p3;

assign zext_ln7_3_fu_340_p1 = p_shl9_mid1_fu_308_p3;

assign zext_ln7_fu_324_p1 = select_ln7_3_fu_316_p3;

assign zext_ln9_mid2_v_fu_656_p3 = {{trunc_ln7_reg_783_pp0_iter1_reg}, {4'd0}};

endmodule //cnn_top_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3
