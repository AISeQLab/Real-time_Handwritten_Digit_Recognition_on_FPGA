// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_exp_33_17_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [32:0] x;
output  [32:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [4:0] f_x_msb_3_table_V_address0;
reg    f_x_msb_3_table_V_ce0;
wire   [31:0] f_x_msb_3_table_V_q0;
wire   [7:0] f_x_msb_2_table_V_address0;
reg    f_x_msb_2_table_V_ce0;
wire   [45:0] f_x_msb_2_table_V_q0;
wire   [7:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [49:0] exp_x_msb_1_table_V_q0;
wire   [0:0] p_Result_s_fu_207_p3;
reg   [0:0] p_Result_s_reg_774;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] p_Result_s_reg_774_pp0_iter1_reg;
wire   [7:0] tmp_20_fu_419_p4;
reg   [7:0] tmp_20_reg_779;
wire   [4:0] x_msb_ind_3_V_fu_429_p1;
reg   [4:0] x_msb_ind_3_V_reg_784;
wire   [0:0] or_ln300_8_fu_496_p2;
reg   [0:0] or_ln300_8_reg_804;
reg   [0:0] or_ln300_8_reg_804_pp0_iter1_reg;
wire   [0:0] or_ln300_10_fu_508_p2;
reg   [0:0] or_ln300_10_reg_809;
reg   [0:0] or_ln300_10_reg_809_pp0_iter1_reg;
reg   [49:0] exp_x_msb_2_3_4_lsb_m_1_V_reg_814;
reg   [49:0] exp_x_msb_1_V_reg_819;
wire   [63:0] zext_ln541_fu_433_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln541_1_fu_438_p1;
wire   [63:0] zext_ln541_2_fu_443_p1;
wire   [15:0] trunc_ln594_fu_195_p1;
wire   [0:0] p_Result_1_fu_215_p3;
wire   [0:0] p_Result_2_fu_229_p3;
wire   [0:0] p_Result_3_fu_243_p3;
wire   [0:0] p_Result_4_fu_257_p3;
wire   [0:0] p_Result_5_fu_271_p3;
wire   [0:0] p_Result_6_fu_285_p3;
wire   [0:0] p_Result_7_fu_299_p3;
wire   [0:0] p_Result_8_fu_313_p3;
wire   [0:0] p_Result_9_fu_327_p3;
wire   [0:0] p_Result_10_fu_341_p3;
wire   [0:0] p_Result_11_fu_355_p3;
wire   [0:0] p_Result_12_fu_369_p3;
wire   [4:0] x_l_int_fu_185_p4;
wire   [22:0] x_l_fract_fu_199_p3;
wire   [0:0] icmp_ln1653_fu_383_p2;
wire   [0:0] icmp_ln1651_fu_389_p2;
wire   [6:0] tmp_fu_401_p4;
wire   [7:0] p_Result_21_fu_411_p3;
wire   [0:0] xor_ln176_fu_237_p2;
wire   [0:0] overf_fu_223_p2;
wire   [0:0] xor_ln176_2_fu_265_p2;
wire   [0:0] xor_ln176_3_fu_279_p2;
wire   [0:0] or_ln300_1_fu_454_p2;
wire   [0:0] xor_ln176_1_fu_251_p2;
wire   [0:0] or_ln300_2_fu_460_p2;
wire   [0:0] or_ln300_fu_448_p2;
wire   [0:0] xor_ln176_4_fu_293_p2;
wire   [0:0] xor_ln176_5_fu_307_p2;
wire   [0:0] xor_ln176_7_fu_335_p2;
wire   [0:0] xor_ln176_8_fu_349_p2;
wire   [0:0] or_ln300_5_fu_478_p2;
wire   [0:0] xor_ln176_6_fu_321_p2;
wire   [0:0] or_ln300_6_fu_484_p2;
wire   [0:0] or_ln300_4_fu_472_p2;
wire   [0:0] or_ln300_7_fu_490_p2;
wire   [0:0] or_ln300_3_fu_466_p2;
wire   [0:0] xor_ln176_9_fu_363_p2;
wire   [0:0] xor_ln176_10_fu_377_p2;
wire   [0:0] and_ln300_fu_395_p2;
wire   [0:0] or_ln300_9_fu_502_p2;
wire   [4:0] f_x_msb_2_h_V_fu_525_p4;
wire   [8:0] zext_ln813_2_fu_539_p1;
wire   [8:0] zext_ln813_1_fu_535_p1;
wire   [8:0] ret_V_4_fu_542_p2;
wire   [40:0] trunc_ln594_2_fu_548_p1;
wire   [49:0] p_Result_22_fu_552_p3;
wire   [46:0] rhs_2_fu_514_p5;
wire   [49:0] r_V_3_fu_568_p0;
wire   [46:0] r_V_3_fu_568_p1;
wire   [96:0] r_V_3_fu_568_p2;
wire   [44:0] trunc_ln1_fu_574_p4;
wire   [55:0] rhs_1_fu_588_p4;
wire   [55:0] zext_ln1347_fu_584_p1;
wire   [55:0] ret_V_5_fu_598_p2;
wire   [55:0] zext_ln1347_1_fu_604_p1;
wire   [55:0] ret_V_fu_608_p2;
wire   [0:0] y_V_fu_624_p2;
wire   [49:0] r_V_fu_643_p0;
wire   [49:0] r_V_fu_643_p1;
wire   [99:0] r_V_fu_643_p2;
wire   [47:0] trunc_ln813_1_fu_649_p4;
wire   [49:0] zext_ln813_fu_659_p1;
wire   [49:0] y_l_V_fu_663_p2;
wire   [0:0] or_ln300_11_fu_678_p2;
wire   [45:0] select_ln288_fu_629_p3;
wire   [45:0] y_V_1_fu_668_p4;
wire   [45:0] y_V_3_fu_682_p3;
wire   [1:0] tmp_15_fu_690_p4;
wire   [0:0] overf_1_fu_700_p2;
wire   [0:0] p_Result_20_fu_714_p3;
wire   [0:0] or_ln533_fu_722_p2;
wire   [0:0] p_Result_19_fu_706_p3;
wire   [2:0] tmp_19_fu_734_p4;
wire   [0:0] icmp_ln533_fu_744_p2;
wire   [0:0] or_ln533_1_fu_728_p2;
wire   [0:0] overf_2_fu_750_p2;
wire   [32:0] tmp_s_fu_756_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [96:0] r_V_3_fu_568_p00;
wire   [96:0] r_V_3_fu_568_p10;
wire   [99:0] r_V_fu_643_p00;
wire   [99:0] r_V_fu_643_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

cnn_top_exp_33_17_s_f_x_msb_3_table_V_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_x_msb_3_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_3_table_V_address0),
    .ce0(f_x_msb_3_table_V_ce0),
    .q0(f_x_msb_3_table_V_q0)
);

cnn_top_exp_33_17_s_f_x_msb_2_table_V_ROM_AUTO_1R #(
    .DataWidth( 46 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_2_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_2_table_V_address0),
    .ce0(f_x_msb_2_table_V_ce0),
    .q0(f_x_msb_2_table_V_q0)
);

cnn_top_exp_33_17_s_exp_x_msb_1_table_V_ROM_AUTO_1R #(
    .DataWidth( 50 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

cnn_top_mul_50ns_47ns_97_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 47 ),
    .dout_WIDTH( 97 ))
mul_50ns_47ns_97_1_1_U166(
    .din0(r_V_3_fu_568_p0),
    .din1(r_V_3_fu_568_p1),
    .dout(r_V_3_fu_568_p2)
);

cnn_top_mul_50ns_50ns_100_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 100 ))
mul_50ns_50ns_100_1_1_U167(
    .din0(r_V_fu_643_p0),
    .din1(r_V_fu_643_p1),
    .dout(r_V_fu_643_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_1_V_reg_819 <= exp_x_msb_1_table_V_q0;
        exp_x_msb_2_3_4_lsb_m_1_V_reg_814 <= {{ret_V_fu_608_p2[55:6]}};
        or_ln300_10_reg_809 <= or_ln300_10_fu_508_p2;
        or_ln300_10_reg_809_pp0_iter1_reg <= or_ln300_10_reg_809;
        or_ln300_8_reg_804 <= or_ln300_8_fu_496_p2;
        or_ln300_8_reg_804_pp0_iter1_reg <= or_ln300_8_reg_804;
        p_Result_s_reg_774 <= x[32'd32];
        p_Result_s_reg_774_pp0_iter1_reg <= p_Result_s_reg_774;
        tmp_20_reg_779 <= {{x[12:5]}};
        x_msb_ind_3_V_reg_784 <= x_msb_ind_3_V_fu_429_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_2_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_2_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_3_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln300_fu_395_p2 = (icmp_ln1653_fu_383_p2 & icmp_ln1651_fu_389_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((overf_2_fu_750_p2[0:0] == 1'b1) ? 33'd4294967295 : tmp_s_fu_756_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln541_2_fu_443_p1;

assign f_x_msb_2_h_V_fu_525_p4 = {{f_x_msb_2_table_V_q0[45:41]}};

assign f_x_msb_2_table_V_address0 = zext_ln541_1_fu_438_p1;

assign f_x_msb_3_table_V_address0 = zext_ln541_fu_433_p1;

assign icmp_ln1651_fu_389_p2 = ((x_l_fract_fu_199_p3 > 23'd7905299) ? 1'b1 : 1'b0);

assign icmp_ln1653_fu_383_p2 = ((x_l_int_fu_185_p4 == 5'd15) ? 1'b1 : 1'b0);

assign icmp_ln533_fu_744_p2 = ((tmp_19_fu_734_p4 != 3'd0) ? 1'b1 : 1'b0);

assign or_ln300_10_fu_508_p2 = (or_ln300_9_fu_502_p2 | and_ln300_fu_395_p2);

assign or_ln300_11_fu_678_p2 = (or_ln300_8_reg_804_pp0_iter1_reg | or_ln300_10_reg_809_pp0_iter1_reg);

assign or_ln300_1_fu_454_p2 = (xor_ln176_3_fu_279_p2 | xor_ln176_2_fu_265_p2);

assign or_ln300_2_fu_460_p2 = (xor_ln176_1_fu_251_p2 | or_ln300_1_fu_454_p2);

assign or_ln300_3_fu_466_p2 = (or_ln300_fu_448_p2 | or_ln300_2_fu_460_p2);

assign or_ln300_4_fu_472_p2 = (xor_ln176_5_fu_307_p2 | xor_ln176_4_fu_293_p2);

assign or_ln300_5_fu_478_p2 = (xor_ln176_8_fu_349_p2 | xor_ln176_7_fu_335_p2);

assign or_ln300_6_fu_484_p2 = (xor_ln176_6_fu_321_p2 | or_ln300_5_fu_478_p2);

assign or_ln300_7_fu_490_p2 = (or_ln300_6_fu_484_p2 | or_ln300_4_fu_472_p2);

assign or_ln300_8_fu_496_p2 = (or_ln300_7_fu_490_p2 | or_ln300_3_fu_466_p2);

assign or_ln300_9_fu_502_p2 = (xor_ln176_9_fu_363_p2 | xor_ln176_10_fu_377_p2);

assign or_ln300_fu_448_p2 = (xor_ln176_fu_237_p2 | overf_fu_223_p2);

assign or_ln533_1_fu_728_p2 = (p_Result_19_fu_706_p3 | or_ln533_fu_722_p2);

assign or_ln533_fu_722_p2 = (p_Result_20_fu_714_p3 | overf_1_fu_700_p2);

assign overf_1_fu_700_p2 = ((tmp_15_fu_690_p4 != 2'd0) ? 1'b1 : 1'b0);

assign overf_2_fu_750_p2 = (or_ln533_1_fu_728_p2 | icmp_ln533_fu_744_p2);

assign overf_fu_223_p2 = (p_Result_s_fu_207_p3 ^ p_Result_1_fu_215_p3);

assign p_Result_10_fu_341_p3 = x[32'd29];

assign p_Result_11_fu_355_p3 = x[32'd30];

assign p_Result_12_fu_369_p3 = x[32'd31];

assign p_Result_19_fu_706_p3 = y_V_3_fu_682_p3[32'd43];

assign p_Result_1_fu_215_p3 = x[32'd20];

assign p_Result_20_fu_714_p3 = y_V_3_fu_682_p3[32'd42];

assign p_Result_21_fu_411_p3 = {{p_Result_s_fu_207_p3}, {tmp_fu_401_p4}};

assign p_Result_22_fu_552_p3 = {{ret_V_4_fu_542_p2}, {trunc_ln594_2_fu_548_p1}};

assign p_Result_2_fu_229_p3 = x[32'd21];

assign p_Result_3_fu_243_p3 = x[32'd22];

assign p_Result_4_fu_257_p3 = x[32'd23];

assign p_Result_5_fu_271_p3 = x[32'd24];

assign p_Result_6_fu_285_p3 = x[32'd25];

assign p_Result_7_fu_299_p3 = x[32'd26];

assign p_Result_8_fu_313_p3 = x[32'd27];

assign p_Result_9_fu_327_p3 = x[32'd28];

assign p_Result_s_fu_207_p3 = x[32'd32];

assign r_V_3_fu_568_p0 = r_V_3_fu_568_p00;

assign r_V_3_fu_568_p00 = p_Result_22_fu_552_p3;

assign r_V_3_fu_568_p1 = r_V_3_fu_568_p10;

assign r_V_3_fu_568_p10 = rhs_2_fu_514_p5;

assign r_V_fu_643_p0 = r_V_fu_643_p00;

assign r_V_fu_643_p00 = exp_x_msb_2_3_4_lsb_m_1_V_reg_814;

assign r_V_fu_643_p1 = r_V_fu_643_p10;

assign r_V_fu_643_p10 = exp_x_msb_1_V_reg_819;

assign ret_V_4_fu_542_p2 = (zext_ln813_2_fu_539_p1 + zext_ln813_1_fu_535_p1);

assign ret_V_5_fu_598_p2 = (rhs_1_fu_588_p4 + zext_ln1347_fu_584_p1);

assign ret_V_fu_608_p2 = (ret_V_5_fu_598_p2 + zext_ln1347_1_fu_604_p1);

assign rhs_1_fu_588_p4 = {{{ret_V_4_fu_542_p2}, {trunc_ln594_2_fu_548_p1}}, {6'd0}};

assign rhs_2_fu_514_p5 = {{{{x_msb_ind_3_V_reg_784}, {7'd0}}, {f_x_msb_3_table_V_q0}}, {3'd0}};

assign select_ln288_fu_629_p3 = ((y_V_fu_624_p2[0:0] == 1'b1) ? 46'd70368744177663 : 46'd0);

assign tmp_15_fu_690_p4 = {{y_V_3_fu_682_p3[45:44]}};

assign tmp_19_fu_734_p4 = {{y_V_3_fu_682_p3[41:39]}};

assign tmp_20_fu_419_p4 = {{x[12:5]}};

assign tmp_fu_401_p4 = {{x[19:13]}};

assign tmp_s_fu_756_p4 = {{y_V_3_fu_682_p3[39:7]}};

assign trunc_ln1_fu_574_p4 = {{r_V_3_fu_568_p2[96:52]}};

assign trunc_ln594_2_fu_548_p1 = f_x_msb_2_table_V_q0[40:0];

assign trunc_ln594_fu_195_p1 = x[15:0];

assign trunc_ln813_1_fu_649_p4 = {{r_V_fu_643_p2[99:52]}};

assign x_l_fract_fu_199_p3 = {{trunc_ln594_fu_195_p1}, {7'd0}};

assign x_l_int_fu_185_p4 = {{x[20:16]}};

assign x_msb_ind_3_V_fu_429_p1 = x[4:0];

assign xor_ln176_10_fu_377_p2 = (p_Result_s_fu_207_p3 ^ p_Result_12_fu_369_p3);

assign xor_ln176_1_fu_251_p2 = (p_Result_s_fu_207_p3 ^ p_Result_3_fu_243_p3);

assign xor_ln176_2_fu_265_p2 = (p_Result_s_fu_207_p3 ^ p_Result_4_fu_257_p3);

assign xor_ln176_3_fu_279_p2 = (p_Result_s_fu_207_p3 ^ p_Result_5_fu_271_p3);

assign xor_ln176_4_fu_293_p2 = (p_Result_s_fu_207_p3 ^ p_Result_6_fu_285_p3);

assign xor_ln176_5_fu_307_p2 = (p_Result_s_fu_207_p3 ^ p_Result_7_fu_299_p3);

assign xor_ln176_6_fu_321_p2 = (p_Result_s_fu_207_p3 ^ p_Result_8_fu_313_p3);

assign xor_ln176_7_fu_335_p2 = (p_Result_s_fu_207_p3 ^ p_Result_9_fu_327_p3);

assign xor_ln176_8_fu_349_p2 = (p_Result_s_fu_207_p3 ^ p_Result_10_fu_341_p3);

assign xor_ln176_9_fu_363_p2 = (p_Result_s_fu_207_p3 ^ p_Result_11_fu_355_p3);

assign xor_ln176_fu_237_p2 = (p_Result_s_fu_207_p3 ^ p_Result_2_fu_229_p3);

assign y_V_1_fu_668_p4 = {{y_l_V_fu_663_p2[49:4]}};

assign y_V_3_fu_682_p3 = ((or_ln300_11_fu_678_p2[0:0] == 1'b1) ? select_ln288_fu_629_p3 : y_V_1_fu_668_p4);

assign y_V_fu_624_p2 = (p_Result_s_reg_774_pp0_iter1_reg ^ 1'd1);

assign y_l_V_fu_663_p2 = (exp_x_msb_1_V_reg_819 + zext_ln813_fu_659_p1);

assign zext_ln1347_1_fu_604_p1 = rhs_2_fu_514_p5;

assign zext_ln1347_fu_584_p1 = trunc_ln1_fu_574_p4;

assign zext_ln541_1_fu_438_p1 = tmp_20_fu_419_p4;

assign zext_ln541_2_fu_443_p1 = p_Result_21_fu_411_p3;

assign zext_ln541_fu_433_p1 = x_msb_ind_3_V_fu_429_p1;

assign zext_ln813_1_fu_535_p1 = f_x_msb_2_h_V_fu_525_p4;

assign zext_ln813_2_fu_539_p1 = tmp_20_reg_779;

assign zext_ln813_fu_659_p1 = trunc_ln813_1_fu_649_p4;

endmodule //cnn_top_exp_33_17_s
