// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        Weights,
        InModel,
        conv2d_V_address0,
        conv2d_V_ce0,
        conv2d_V_we0,
        conv2d_V_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 35'd1;
parameter    ap_ST_fsm_pp0_stage1 = 35'd2;
parameter    ap_ST_fsm_pp0_stage2 = 35'd4;
parameter    ap_ST_fsm_pp0_stage3 = 35'd8;
parameter    ap_ST_fsm_pp0_stage4 = 35'd16;
parameter    ap_ST_fsm_pp0_stage5 = 35'd32;
parameter    ap_ST_fsm_pp0_stage6 = 35'd64;
parameter    ap_ST_fsm_pp0_stage7 = 35'd128;
parameter    ap_ST_fsm_pp0_stage8 = 35'd256;
parameter    ap_ST_fsm_pp0_stage9 = 35'd512;
parameter    ap_ST_fsm_pp0_stage10 = 35'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 35'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 35'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 35'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 35'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 35'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 35'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 35'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 35'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 35'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 35'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 35'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 35'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 35'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 35'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 35'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 35'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 35'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 35'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 35'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 35'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 35'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 35'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 35'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [31:0] m_axi_gmem1_WDATA;
output  [3:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [31:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [63:0] Weights;
input  [63:0] InModel;
output  [11:0] conv2d_V_address0;
output   conv2d_V_ce0;
output   conv2d_V_we0;
output  [31:0] conv2d_V_d0;

reg ap_idle;
reg m_axi_gmem1_ARVALID;
reg[63:0] m_axi_gmem1_ARADDR;
reg[31:0] m_axi_gmem1_ARLEN;
reg m_axi_gmem1_RREADY;
reg m_axi_gmem0_ARVALID;
reg[63:0] m_axi_gmem0_ARADDR;
reg m_axi_gmem0_RREADY;
reg conv2d_V_ce0;
reg conv2d_V_we0;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage11;
reg   [0:0] icmp_ln6_reg_2353;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_subdone;
reg    ap_condition_exit_pp0_iter0_stage11;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage34;
reg    ap_block_state35_pp0_stage34_iter0;
reg    ap_block_pp0_stage34_subdone;
reg    gmem1_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    gmem1_blk_n_R;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_reg_2584;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [0:0] icmp_ln6_reg_2353_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_pp0_stage32;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_pp0_stage33;
wire    ap_block_pp0_stage34;
reg    gmem0_blk_n_AR;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg  signed [31:0] reg_292;
reg    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state45_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_11001;
wire    ap_block_state9_pp0_stage8_iter0;
reg    ap_predicate_op499_read_state44;
reg    ap_block_state44_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
reg  signed [31:0] reg_296;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg  signed [31:0] reg_300;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_state23_io;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_state27_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
reg    ap_block_state28_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
reg    ap_block_state29_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_state30_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_11001;
reg    ap_block_state31_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_11001;
reg    ap_block_state32_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_11001;
reg    ap_block_state33_pp0_stage32_iter0;
reg    ap_block_pp0_stage32_11001;
reg    ap_block_state34_pp0_stage33_iter0;
reg    ap_block_pp0_stage33_11001;
reg    ap_block_pp0_stage34_11001;
reg  signed [31:0] reg_304;
reg  signed [31:0] reg_308;
reg  signed [31:0] reg_312;
reg  signed [31:0] reg_316;
reg  signed [31:0] reg_320;
reg  signed [31:0] reg_324;
reg  signed [31:0] reg_328;
reg  signed [31:0] reg_332;
reg  signed [31:0] reg_336;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state36_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] x_1_reg_2340;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state37_pp0_stage1_iter1;
reg    ap_predicate_op492_readreq_state37;
reg    ap_block_state37_io;
reg    ap_block_pp0_stage1_11001;
reg   [9:0] indvar_flatten_load_reg_2348;
wire   [0:0] icmp_ln6_fu_462_p2;
wire   [11:0] add_ln6_fu_468_p2;
reg   [11:0] add_ln6_reg_2357;
wire   [0:0] icmp_ln8_fu_477_p2;
reg   [0:0] icmp_ln8_reg_2362;
wire   [4:0] select_ln6_fu_483_p3;
reg   [4:0] select_ln6_reg_2371;
wire   [2:0] select_ln6_1_fu_524_p3;
reg   [2:0] select_ln6_1_reg_2380;
reg   [63:0] gmem1_addr_reg_2385;
wire   [0:0] and_ln6_fu_625_p2;
reg   [0:0] and_ln6_reg_2391;
wire   [4:0] tmp_1_dup_fu_631_p2;
reg   [4:0] tmp_1_dup_reg_2400;
wire   [4:0] select_ln8_fu_673_p3;
reg   [4:0] select_ln8_reg_2405;
wire   [10:0] y_cast40_fu_715_p1;
reg   [10:0] y_cast40_reg_2411;
reg   [63:0] gmem1_addr_1_reg_2418;
reg   [63:0] gmem0_addr_reg_2424;
wire   [11:0] add_ln21_fu_794_p2;
reg   [11:0] add_ln21_reg_2430;
reg   [63:0] gmem0_addr_1_reg_2435;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state42_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] tmp_5_reg_2441;
reg   [63:0] gmem0_addr_2_reg_2446;
reg   [63:0] gmem0_addr_3_reg_2452;
reg   [63:0] gmem0_addr_4_reg_2458;
reg   [31:0] tmp_6_reg_2464;
reg   [31:0] tmp_7_reg_2469;
reg   [31:0] tmp_8_reg_2474;
reg   [31:0] tmp_10_reg_2479;
reg   [31:0] tmp_11_reg_2484;
reg   [31:0] tmp_12_reg_2489;
reg   [31:0] tmp_13_reg_2494;
reg   [31:0] tmp_14_reg_2499;
reg   [31:0] tmp_16_reg_2504;
reg   [31:0] tmp_17_reg_2509;
reg   [31:0] tmp_18_reg_2514;
reg   [31:0] tmp_19_reg_2519;
reg   [31:0] tmp_20_reg_2524;
reg   [31:0] tmp_22_reg_2529;
reg   [31:0] tmp_23_reg_2534;
reg   [31:0] tmp_24_reg_2539;
reg   [31:0] tmp_25_reg_2544;
reg   [31:0] tmp_26_reg_2549;
reg   [31:0] tmp_28_reg_2554;
reg   [31:0] tmp_29_reg_2559;
reg   [31:0] tmp_30_reg_2564;
reg   [31:0] tmp_31_reg_2569;
reg   [31:0] tmp_32_reg_2574;
wire  signed [31:0] lhs_fu_2211_p4;
reg  signed [31:0] lhs_reg_2579;
wire   [0:0] tmp_fu_2231_p3;
reg   [11:0] conv2d_V_addr_reg_2588;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage9_subdone;
reg   [31:0] ap_phi_mux_storemerge15_phi_fu_284_p4;
wire   [31:0] add_ln813_fu_2283_p2;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge15_reg_280;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge15_reg_280;
wire   [63:0] zext_ln21_1_fu_2239_p1;
wire    ap_block_pp0_stage0;
wire  signed [63:0] sext_ln6_fu_554_p1;
wire  signed [63:0] sext_ln6_2_fu_593_p1;
wire  signed [63:0] sext_ln17_fu_758_p1;
wire  signed [63:0] sext_ln17_1_fu_916_p1;
wire    ap_block_pp0_stage6;
wire  signed [63:0] sext_ln17_2_fu_1229_p1;
wire  signed [63:0] sext_ln17_3_fu_1271_p1;
wire  signed [63:0] sext_ln17_4_fu_1314_p1;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
wire    ap_block_state38_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
wire    ap_block_state39_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
wire    ap_block_state43_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg   [4:0] y_fu_152;
wire   [4:0] add_ln10_fu_2243_p2;
wire    ap_loop_init;
reg   [4:0] x_fu_156;
wire   [4:0] select_ln8_7_fu_2179_p3;
reg   [9:0] indvar_flatten_fu_160;
wire   [9:0] select_ln8_8_fu_2253_p3;
reg   [2:0] n_fu_164;
reg   [11:0] indvar_flatten141_fu_168;
wire   [1:0] empty_fu_377_p1;
wire   [7:0] tmp20_fu_381_p4;
wire  signed [8:0] tmp_cast_cast_cast_fu_391_p1;
wire   [63:0] tmp_cast_cast_cast_cast_fu_395_p1;
wire   [63:0] empty_52_fu_399_p2;
wire   [9:0] p_shl2_fu_414_p3;
wire   [7:0] p_shl3_fu_426_p3;
wire   [10:0] p_shl2_cast_fu_422_p1;
wire   [10:0] p_shl3_cast_fu_434_p1;
wire   [6:0] p_shl5_fu_444_p3;
wire   [10:0] p_shl5_0_cast_fu_452_p1;
wire   [2:0] add_ln6_2_fu_491_p2;
wire   [1:0] empty_55_fu_497_p1;
wire   [7:0] tmp439_mid1_fu_501_p4;
wire  signed [8:0] tmp_cast_cast_mid1_cast_fu_511_p1;
wire   [63:0] tmp_cast_cast_mid1_cast_cast_fu_515_p1;
wire   [63:0] p_mid151_fu_519_p2;
wire   [61:0] p_cast_mid1_fu_536_p4;
wire   [61:0] p_cast_fu_404_p4;
wire   [61:0] select_ln6_2_fu_546_p3;
wire   [2:0] mul_ln6_fu_568_p0;
wire   [7:0] mul_ln6_fu_568_p1;
wire   [9:0] mul_ln6_fu_568_p2;
wire   [63:0] zext_ln6_1_fu_574_p1;
wire   [63:0] add_ln6_1_fu_578_p2;
wire   [61:0] sext_ln15_mid2_v_fu_583_p4;
wire   [10:0] empty_53_fu_438_p2;
wire   [10:0] tmp18_0_fu_456_p2;
wire   [0:0] icmp_ln10_fu_619_p2;
wire   [0:0] xor_ln6_fu_613_p2;
wire   [9:0] p_shl4_1_dup_fu_637_p3;
wire   [6:0] p_shl5_1_dup_fu_649_p3;
wire   [10:0] p_shl4_1_cast_dup_fu_645_p1;
wire   [10:0] p_shl5_1_cast_dup_fu_657_p1;
wire   [0:0] or_ln8_fu_667_p2;
wire   [7:0] p_shl3_mid1_fu_681_p3;
wire   [10:0] p_shl3_cast_mid1_fu_689_p1;
wire   [10:0] p_mid1_fu_693_p2;
wire   [10:0] select_ln6_3_fu_597_p3;
wire   [10:0] tmp18_1_dup_fu_661_p2;
wire   [10:0] select_ln6_4_fu_605_p3;
wire   [10:0] select_ln8_2_fu_707_p3;
wire   [10:0] empty_57_fu_725_p2;
wire   [12:0] tmp_s_fu_731_p3;
wire  signed [63:0] tmp_23_cast_fu_739_p1;
wire   [63:0] empty_58_fu_743_p2;
wire   [61:0] trunc_ln_fu_748_p4;
wire   [1:0] trunc_ln6_fu_532_p1;
wire   [10:0] tmp1_fu_768_p5;
wire   [10:0] select_ln8_1_fu_699_p3;
wire   [10:0] add_ln21_1_fu_784_p2;
wire  signed [11:0] sext_ln21_fu_790_p1;
wire   [11:0] zext_ln21_fu_780_p1;
wire   [4:0] tmp_1_fu_800_p2;
wire   [9:0] p_shl4_1_fu_805_p3;
wire   [6:0] p_shl5_1_fu_817_p3;
wire   [10:0] p_shl4_1_cast_fu_813_p1;
wire   [10:0] p_shl5_1_cast_fu_825_p1;
wire   [10:0] tmp18_1_fu_829_p2;
wire   [4:0] tmp_1_mid1_fu_842_p2;
wire   [9:0] p_shl4_1_mid1_fu_847_p3;
wire   [6:0] p_shl5_1_mid1_fu_859_p3;
wire   [10:0] p_shl4_1_cast_mid1_fu_855_p1;
wire   [10:0] p_shl5_1_cast_mid1_fu_867_p1;
wire   [10:0] tmp18_1_mid1_fu_871_p2;
wire   [10:0] select_ln6_5_fu_835_p3;
wire   [10:0] select_ln8_3_fu_877_p3;
wire   [10:0] empty_60_fu_884_p2;
wire   [12:0] tmp_9_fu_889_p3;
wire  signed [63:0] tmp_28_cast_fu_897_p1;
wire   [63:0] empty_61_fu_901_p2;
wire   [61:0] trunc_ln17_1_fu_906_p4;
wire   [4:0] tmp_2_fu_926_p2;
wire   [9:0] p_shl4_2_fu_931_p3;
wire   [6:0] p_shl5_2_fu_943_p3;
wire   [10:0] p_shl4_2_cast_fu_939_p1;
wire   [10:0] p_shl5_2_cast_fu_951_p1;
wire   [4:0] tmp_3_fu_961_p2;
wire   [9:0] p_shl4_3_fu_966_p3;
wire   [6:0] p_shl5_3_fu_978_p3;
wire   [10:0] p_shl4_3_cast_fu_974_p1;
wire   [10:0] p_shl5_3_cast_fu_986_p1;
wire   [4:0] tmp_4_fu_996_p2;
wire   [6:0] p_shl5_4_fu_1009_p3;
wire   [9:0] p_shl4_4_fu_1001_p3;
wire   [9:0] p_shl5_4_cast_fu_1017_p1;
wire   [10:0] tmp18_2_fu_955_p2;
wire   [10:0] tmp18_3_fu_990_p2;
wire   [9:0] tmp18_4_fu_1021_p2;
wire   [4:0] tmp_2_mid1_fu_1048_p2;
wire   [9:0] p_shl4_2_mid1_fu_1053_p3;
wire   [6:0] p_shl5_2_mid1_fu_1065_p3;
wire   [10:0] p_shl4_2_cast_mid1_fu_1061_p1;
wire   [10:0] p_shl5_2_cast_mid1_fu_1073_p1;
wire   [10:0] tmp18_2_mid1_fu_1077_p2;
wire   [10:0] select_ln6_6_fu_1027_p3;
wire   [4:0] tmp_3_mid1_fu_1090_p2;
wire   [9:0] p_shl4_3_mid1_fu_1095_p3;
wire   [6:0] p_shl5_3_mid1_fu_1107_p3;
wire   [10:0] p_shl4_3_cast_mid1_fu_1103_p1;
wire   [10:0] p_shl5_3_cast_mid1_fu_1115_p1;
wire   [10:0] tmp18_3_mid1_fu_1119_p2;
wire   [10:0] select_ln6_7_fu_1034_p3;
wire   [4:0] tmp_4_mid1_fu_1132_p2;
wire   [6:0] p_shl5_4_mid1_fu_1145_p3;
wire   [9:0] p_shl4_4_mid1_fu_1137_p3;
wire   [9:0] p_shl5_4_cast_mid1_fu_1153_p1;
wire   [9:0] tmp18_4_mid1_fu_1157_p2;
wire   [9:0] select_ln6_8_fu_1041_p3;
wire   [47:0] mul_ln1273_fu_1181_p2;
wire   [10:0] select_ln8_4_fu_1083_p3;
wire   [10:0] empty_63_fu_1197_p2;
wire   [12:0] tmp_15_fu_1202_p3;
wire  signed [63:0] tmp_34_cast_fu_1210_p1;
wire   [63:0] empty_64_fu_1214_p2;
wire   [61:0] trunc_ln17_2_fu_1219_p4;
wire   [10:0] select_ln8_5_fu_1125_p3;
wire   [10:0] empty_66_fu_1239_p2;
wire   [12:0] tmp_21_fu_1244_p3;
wire  signed [63:0] tmp_40_cast_fu_1252_p1;
wire   [63:0] empty_67_fu_1256_p2;
wire   [61:0] trunc_ln17_3_fu_1261_p4;
wire   [9:0] select_ln8_6_fu_1163_p3;
wire   [9:0] y_cast38_fu_1170_p1;
wire   [9:0] empty_69_fu_1281_p2;
wire   [11:0] tmp_27_fu_1287_p3;
wire   [63:0] p_cast55_fu_1295_p1;
wire   [63:0] empty_70_fu_1299_p2;
wire   [61:0] trunc_ln17_4_fu_1304_p4;
wire   [47:0] shl_ln_fu_1338_p3;
wire   [47:0] mul_ln1273_1_fu_1332_p2;
wire   [47:0] add_ln1347_fu_1345_p2;
wire   [47:0] shl_ln838_1_fu_1375_p3;
wire   [47:0] mul_ln1273_2_fu_1369_p2;
wire   [47:0] add_ln1347_1_fu_1382_p2;
wire   [47:0] shl_ln838_2_fu_1412_p3;
wire   [47:0] mul_ln1273_3_fu_1406_p2;
wire   [47:0] add_ln1347_2_fu_1419_p2;
wire   [47:0] shl_ln838_3_fu_1449_p3;
wire   [47:0] mul_ln1273_4_fu_1443_p2;
wire   [47:0] add_ln1347_3_fu_1456_p2;
wire   [47:0] shl_ln838_4_fu_1486_p3;
wire   [47:0] mul_ln1273_5_fu_1480_p2;
wire   [47:0] add_ln1347_4_fu_1493_p2;
wire   [47:0] shl_ln838_5_fu_1523_p3;
wire   [47:0] mul_ln1273_6_fu_1517_p2;
wire   [47:0] add_ln1347_5_fu_1530_p2;
wire   [47:0] shl_ln838_6_fu_1560_p3;
wire   [47:0] mul_ln1273_7_fu_1554_p2;
wire   [47:0] add_ln1347_6_fu_1567_p2;
wire   [47:0] shl_ln838_7_fu_1597_p3;
wire   [47:0] mul_ln1273_8_fu_1591_p2;
wire   [47:0] add_ln1347_7_fu_1604_p2;
wire   [47:0] shl_ln838_8_fu_1634_p3;
wire   [47:0] mul_ln1273_9_fu_1628_p2;
wire   [47:0] add_ln1347_8_fu_1641_p2;
wire   [47:0] shl_ln838_9_fu_1671_p3;
wire   [47:0] mul_ln1273_10_fu_1665_p2;
wire   [47:0] add_ln1347_9_fu_1678_p2;
wire   [47:0] shl_ln838_s_fu_1708_p3;
wire   [47:0] mul_ln1273_11_fu_1702_p2;
wire   [47:0] add_ln1347_10_fu_1715_p2;
wire   [47:0] shl_ln838_10_fu_1745_p3;
wire   [47:0] mul_ln1273_12_fu_1739_p2;
wire   [47:0] add_ln1347_11_fu_1752_p2;
wire   [47:0] shl_ln838_11_fu_1782_p3;
wire   [47:0] mul_ln1273_13_fu_1776_p2;
wire   [47:0] add_ln1347_12_fu_1789_p2;
wire   [47:0] shl_ln838_12_fu_1819_p3;
wire   [47:0] mul_ln1273_14_fu_1813_p2;
wire   [47:0] add_ln1347_13_fu_1826_p2;
wire   [47:0] shl_ln838_13_fu_1856_p3;
wire   [47:0] mul_ln1273_15_fu_1850_p2;
wire   [47:0] add_ln1347_14_fu_1863_p2;
wire   [47:0] shl_ln838_14_fu_1893_p3;
wire   [47:0] mul_ln1273_16_fu_1887_p2;
wire   [47:0] add_ln1347_15_fu_1900_p2;
wire   [47:0] shl_ln838_15_fu_1930_p3;
wire   [47:0] mul_ln1273_17_fu_1924_p2;
wire   [47:0] add_ln1347_16_fu_1937_p2;
wire   [47:0] shl_ln838_16_fu_1967_p3;
wire   [47:0] mul_ln1273_18_fu_1961_p2;
wire   [47:0] add_ln1347_17_fu_1974_p2;
wire   [47:0] shl_ln838_17_fu_2004_p3;
wire   [47:0] mul_ln1273_19_fu_1998_p2;
wire   [47:0] add_ln1347_18_fu_2011_p2;
wire   [47:0] shl_ln838_18_fu_2041_p3;
wire   [47:0] mul_ln1273_20_fu_2035_p2;
wire   [47:0] add_ln1347_19_fu_2048_p2;
wire   [47:0] shl_ln838_19_fu_2078_p3;
wire   [47:0] mul_ln1273_21_fu_2072_p2;
wire   [47:0] add_ln1347_20_fu_2085_p2;
wire   [47:0] shl_ln838_20_fu_2115_p3;
wire   [47:0] mul_ln1273_22_fu_2109_p2;
wire   [47:0] add_ln1347_21_fu_2122_p2;
wire   [47:0] shl_ln838_21_fu_2152_p3;
wire   [47:0] mul_ln1273_23_fu_2146_p2;
wire   [47:0] add_ln1347_22_fu_2159_p2;
wire   [47:0] shl_ln838_22_fu_2198_p3;
wire   [47:0] mul_ln1273_24_fu_2192_p2;
wire   [47:0] add_ln1347_23_fu_2205_p2;
wire  signed [32:0] sext_ln813_fu_2221_p1;
wire  signed [32:0] sext_ln6_1_fu_2175_p1;
wire   [32:0] ret_V_fu_2225_p2;
wire   [9:0] add_ln8_fu_2248_p2;
wire   [31:0] add_ln813_fu_2283_p0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [34:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state40_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state41_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
reg    ap_block_pp0_stage31_subdone;
reg    ap_block_pp0_stage32_subdone;
reg    ap_block_pp0_stage33_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [9:0] mul_ln6_fu_568_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_mul_3ns_8ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mul_3ns_8ns_10_1_1_U1(
    .din0(mul_ln6_fu_568_p0),
    .din1(mul_ln6_fu_568_p1),
    .dout(mul_ln6_fu_568_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U2(
    .din0(reg_296),
    .din1(reg_300),
    .dout(mul_ln1273_fu_1181_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U3(
    .din0(reg_304),
    .din1(reg_300),
    .dout(mul_ln1273_1_fu_1332_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U4(
    .din0(reg_296),
    .din1(reg_300),
    .dout(mul_ln1273_2_fu_1369_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U5(
    .din0(reg_304),
    .din1(reg_300),
    .dout(mul_ln1273_3_fu_1406_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U6(
    .din0(reg_296),
    .din1(reg_300),
    .dout(mul_ln1273_4_fu_1443_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U7(
    .din0(reg_308),
    .din1(reg_300),
    .dout(mul_ln1273_5_fu_1480_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U8(
    .din0(reg_312),
    .din1(reg_300),
    .dout(mul_ln1273_6_fu_1517_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U9(
    .din0(reg_308),
    .din1(reg_300),
    .dout(mul_ln1273_7_fu_1554_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U10(
    .din0(reg_312),
    .din1(reg_300),
    .dout(mul_ln1273_8_fu_1591_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U11(
    .din0(reg_308),
    .din1(reg_300),
    .dout(mul_ln1273_9_fu_1628_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U12(
    .din0(reg_316),
    .din1(reg_300),
    .dout(mul_ln1273_10_fu_1665_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U13(
    .din0(reg_320),
    .din1(reg_300),
    .dout(mul_ln1273_11_fu_1702_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U14(
    .din0(reg_316),
    .din1(reg_300),
    .dout(mul_ln1273_12_fu_1739_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U15(
    .din0(reg_320),
    .din1(reg_300),
    .dout(mul_ln1273_13_fu_1776_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U16(
    .din0(reg_316),
    .din1(reg_300),
    .dout(mul_ln1273_14_fu_1813_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U17(
    .din0(reg_324),
    .din1(reg_300),
    .dout(mul_ln1273_15_fu_1850_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U18(
    .din0(reg_328),
    .din1(reg_300),
    .dout(mul_ln1273_16_fu_1887_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U19(
    .din0(reg_324),
    .din1(reg_300),
    .dout(mul_ln1273_17_fu_1924_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U20(
    .din0(reg_328),
    .din1(reg_300),
    .dout(mul_ln1273_18_fu_1961_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U21(
    .din0(reg_324),
    .din1(reg_300),
    .dout(mul_ln1273_19_fu_1998_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U22(
    .din0(reg_332),
    .din1(reg_300),
    .dout(mul_ln1273_20_fu_2035_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U23(
    .din0(reg_336),
    .din1(reg_300),
    .dout(mul_ln1273_21_fu_2072_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U24(
    .din0(reg_332),
    .din1(reg_300),
    .dout(mul_ln1273_22_fu_2109_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U25(
    .din0(reg_336),
    .din1(reg_300),
    .dout(mul_ln1273_23_fu_2146_p2)
);

cnn_top_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U26(
    .din0(reg_332),
    .din1(reg_300),
    .dout(mul_ln1273_24_fu_2192_p2)
);

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage11),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage11)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_2353 == 1'd0) & (tmp_fu_2231_p3 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_storemerge15_reg_280 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001))) begin
        ap_phi_reg_pp0_iter1_storemerge15_reg_280 <= ap_phi_reg_pp0_iter0_storemerge15_reg_280;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten141_fu_168 <= 12'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0))) begin
            indvar_flatten141_fu_168 <= add_ln6_reg_2357;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_160 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0))) begin
            indvar_flatten_fu_160 <= select_ln8_8_fu_2253_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            n_fu_164 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0))) begin
            n_fu_164 <= select_ln6_1_reg_2380;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_156 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0))) begin
            x_fu_156 <= select_ln8_7_fu_2179_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            y_fu_152 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0))) begin
            y_fu_152 <= add_ln10_fu_2243_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_fu_462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln21_reg_2430 <= add_ln21_fu_794_p2;
        and_ln6_reg_2391 <= and_ln6_fu_625_p2;
        gmem0_addr_reg_2424 <= sext_ln17_fu_758_p1;
        gmem1_addr_1_reg_2418 <= sext_ln6_2_fu_593_p1;
        gmem1_addr_reg_2385 <= sext_ln6_fu_554_p1;
        icmp_ln8_reg_2362 <= icmp_ln8_fu_477_p2;
        select_ln6_1_reg_2380 <= select_ln6_1_fu_524_p3;
        select_ln6_reg_2371 <= select_ln6_fu_483_p3;
        select_ln8_reg_2405 <= select_ln8_fu_673_p3;
        tmp_1_dup_reg_2400 <= tmp_1_dup_fu_631_p2;
        y_cast40_reg_2411[4 : 0] <= y_cast40_fu_715_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln6_reg_2357 <= add_ln6_fu_468_p2;
        icmp_ln6_reg_2353 <= icmp_ln6_fu_462_p2;
        icmp_ln6_reg_2353_pp0_iter1_reg <= icmp_ln6_reg_2353;
        indvar_flatten_load_reg_2348 <= indvar_flatten_fu_160;
        x_1_reg_2340 <= x_fu_156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        conv2d_V_addr_reg_2588 <= zext_ln21_1_fu_2239_p1;
        lhs_reg_2579 <= {{add_ln1347_23_fu_2205_p2[47:16]}};
        tmp_reg_2584 <= ret_V_fu_2225_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        gmem0_addr_1_reg_2435 <= sext_ln17_1_fu_916_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        gmem0_addr_2_reg_2446 <= sext_ln17_2_fu_1229_p1;
        gmem0_addr_3_reg_2452 <= sext_ln17_3_fu_1271_p1;
        gmem0_addr_4_reg_2458 <= sext_ln17_4_fu_1314_p1;
        tmp_5_reg_2441 <= {{mul_ln1273_fu_1181_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op499_read_state44 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_292 <= m_axi_gmem1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_296 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_300 <= m_axi_gmem1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_304 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_308 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_312 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_316 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_320 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_324 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_328 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_332 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        reg_336 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_10_reg_2479 <= {{add_ln1347_3_fu_1456_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_11_reg_2484 <= {{add_ln1347_4_fu_1493_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_12_reg_2489 <= {{add_ln1347_5_fu_1530_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_13_reg_2494 <= {{add_ln1347_6_fu_1567_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_14_reg_2499 <= {{add_ln1347_7_fu_1604_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_16_reg_2504 <= {{add_ln1347_8_fu_1641_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_17_reg_2509 <= {{add_ln1347_9_fu_1678_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_18_reg_2514 <= {{add_ln1347_10_fu_1715_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_19_reg_2519 <= {{add_ln1347_11_fu_1752_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_20_reg_2524 <= {{add_ln1347_12_fu_1789_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_22_reg_2529 <= {{add_ln1347_13_fu_1826_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_23_reg_2534 <= {{add_ln1347_14_fu_1863_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_24_reg_2539 <= {{add_ln1347_15_fu_1900_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_25_reg_2544 <= {{add_ln1347_16_fu_1937_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_26_reg_2549 <= {{add_ln1347_17_fu_1974_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_28_reg_2554 <= {{add_ln1347_18_fu_2011_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_29_reg_2559 <= {{add_ln1347_19_fu_2048_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_30_reg_2564 <= {{add_ln1347_20_fu_2085_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_31_reg_2569 <= {{add_ln1347_21_fu_2122_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_32_reg_2574 <= {{add_ln1347_22_fu_2159_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_6_reg_2464 <= {{add_ln1347_fu_1345_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_7_reg_2469 <= {{add_ln1347_1_fu_1382_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        tmp_8_reg_2474 <= {{add_ln1347_2_fu_1419_p2[47:16]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone) & (icmp_ln6_reg_2353 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage11 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_2353_pp0_iter1_reg == 1'd0) & (tmp_reg_2584 == 1'd0))) begin
        ap_phi_mux_storemerge15_phi_fu_284_p4 = add_ln813_fu_2283_p2;
    end else begin
        ap_phi_mux_storemerge15_phi_fu_284_p4 = ap_phi_reg_pp0_iter1_storemerge15_reg_280;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        conv2d_V_ce0 = 1'b1;
    end else begin
        conv2d_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        conv2d_V_we0 = 1'b1;
    end else begin
        conv2d_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_reg_2584 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        gmem1_blk_n_AR = m_axi_gmem1_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln6_reg_2353_pp0_iter1_reg == 1'd0) & (tmp_reg_2584 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
            m_axi_gmem0_ARADDR = gmem0_addr_4_reg_2458;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
            m_axi_gmem0_ARADDR = gmem0_addr_3_reg_2452;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
            m_axi_gmem0_ARADDR = gmem0_addr_2_reg_2446;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
            m_axi_gmem0_ARADDR = gmem0_addr_1_reg_2435;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            m_axi_gmem0_ARADDR = gmem0_addr_reg_2424;
        end else begin
            m_axi_gmem0_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        m_axi_gmem0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        m_axi_gmem1_ARADDR = gmem1_addr_1_reg_2418;
    end else if ((((ap_predicate_op492_readreq_state37 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        m_axi_gmem1_ARADDR = gmem1_addr_reg_2385;
    end else begin
        m_axi_gmem1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln6_reg_2353 == 1'd0))) begin
        m_axi_gmem1_ARLEN = 32'd25;
    end else if ((((ap_predicate_op492_readreq_state37 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        m_axi_gmem1_ARLEN = 32'd1;
    end else begin
        m_axi_gmem1_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op492_readreq_state37 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        m_axi_gmem1_ARVALID = 1'b1;
    end else begin
        m_axi_gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op499_read_state44 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln6_reg_2353 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001) & (icmp_ln6_reg_2353 == 1'd0)))) begin
        m_axi_gmem1_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage11)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_2243_p2 = (select_ln8_reg_2405 + 5'd1);

assign add_ln1347_10_fu_1715_p2 = (shl_ln838_s_fu_1708_p3 + mul_ln1273_11_fu_1702_p2);

assign add_ln1347_11_fu_1752_p2 = (shl_ln838_10_fu_1745_p3 + mul_ln1273_12_fu_1739_p2);

assign add_ln1347_12_fu_1789_p2 = (shl_ln838_11_fu_1782_p3 + mul_ln1273_13_fu_1776_p2);

assign add_ln1347_13_fu_1826_p2 = (shl_ln838_12_fu_1819_p3 + mul_ln1273_14_fu_1813_p2);

assign add_ln1347_14_fu_1863_p2 = (shl_ln838_13_fu_1856_p3 + mul_ln1273_15_fu_1850_p2);

assign add_ln1347_15_fu_1900_p2 = (shl_ln838_14_fu_1893_p3 + mul_ln1273_16_fu_1887_p2);

assign add_ln1347_16_fu_1937_p2 = (shl_ln838_15_fu_1930_p3 + mul_ln1273_17_fu_1924_p2);

assign add_ln1347_17_fu_1974_p2 = (shl_ln838_16_fu_1967_p3 + mul_ln1273_18_fu_1961_p2);

assign add_ln1347_18_fu_2011_p2 = (shl_ln838_17_fu_2004_p3 + mul_ln1273_19_fu_1998_p2);

assign add_ln1347_19_fu_2048_p2 = (shl_ln838_18_fu_2041_p3 + mul_ln1273_20_fu_2035_p2);

assign add_ln1347_1_fu_1382_p2 = (shl_ln838_1_fu_1375_p3 + mul_ln1273_2_fu_1369_p2);

assign add_ln1347_20_fu_2085_p2 = (shl_ln838_19_fu_2078_p3 + mul_ln1273_21_fu_2072_p2);

assign add_ln1347_21_fu_2122_p2 = (shl_ln838_20_fu_2115_p3 + mul_ln1273_22_fu_2109_p2);

assign add_ln1347_22_fu_2159_p2 = (shl_ln838_21_fu_2152_p3 + mul_ln1273_23_fu_2146_p2);

assign add_ln1347_23_fu_2205_p2 = (shl_ln838_22_fu_2198_p3 + mul_ln1273_24_fu_2192_p2);

assign add_ln1347_2_fu_1419_p2 = (shl_ln838_2_fu_1412_p3 + mul_ln1273_3_fu_1406_p2);

assign add_ln1347_3_fu_1456_p2 = (shl_ln838_3_fu_1449_p3 + mul_ln1273_4_fu_1443_p2);

assign add_ln1347_4_fu_1493_p2 = (shl_ln838_4_fu_1486_p3 + mul_ln1273_5_fu_1480_p2);

assign add_ln1347_5_fu_1530_p2 = (shl_ln838_5_fu_1523_p3 + mul_ln1273_6_fu_1517_p2);

assign add_ln1347_6_fu_1567_p2 = (shl_ln838_6_fu_1560_p3 + mul_ln1273_7_fu_1554_p2);

assign add_ln1347_7_fu_1604_p2 = (shl_ln838_7_fu_1597_p3 + mul_ln1273_8_fu_1591_p2);

assign add_ln1347_8_fu_1641_p2 = (shl_ln838_8_fu_1634_p3 + mul_ln1273_9_fu_1628_p2);

assign add_ln1347_9_fu_1678_p2 = (shl_ln838_9_fu_1671_p3 + mul_ln1273_10_fu_1665_p2);

assign add_ln1347_fu_1345_p2 = (shl_ln_fu_1338_p3 + mul_ln1273_1_fu_1332_p2);

assign add_ln21_1_fu_784_p2 = (select_ln8_1_fu_699_p3 + y_cast40_fu_715_p1);

assign add_ln21_fu_794_p2 = ($signed(sext_ln21_fu_790_p1) + $signed(zext_ln21_fu_780_p1));

assign add_ln6_1_fu_578_p2 = (zext_ln6_1_fu_574_p1 + Weights);

assign add_ln6_2_fu_491_p2 = (n_fu_164 + 3'd1);

assign add_ln6_fu_468_p2 = (indvar_flatten141_fu_168 + 12'd1);

assign add_ln813_fu_2283_p0 = reg_292;

assign add_ln813_fu_2283_p2 = ($signed(add_ln813_fu_2283_p0) + $signed(lhs_reg_2579));

assign add_ln8_fu_2248_p2 = (indvar_flatten_load_reg_2348 + 10'd1);

assign and_ln6_fu_625_p2 = (xor_ln6_fu_613_p2 & icmp_ln10_fu_619_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state37_io));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state37_io));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage32_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage32_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage33 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage33_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage33_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage34_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage34_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_predicate_op499_read_state44 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_predicate_op499_read_state44 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem0_ARREADY == 1'b0) & (icmp_ln6_reg_2353 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state18_io = ((m_axi_gmem0_ARREADY == 1'b0) & (icmp_ln6_reg_2353 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state23_io = ((m_axi_gmem0_ARREADY == 1'b0) & (icmp_ln6_reg_2353 == 1'd0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state27_pp0_stage26_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state28_pp0_stage27_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state29_pp0_stage28_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage29_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state31_pp0_stage30_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state32_pp0_stage31_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state33_pp0_stage32_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state34_pp0_stage33_iter0 = (((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state35_pp0_stage34_iter0 = ((icmp_ln6_reg_2353 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0));
end

assign ap_block_state36_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_io = ((m_axi_gmem1_ARREADY == 1'b0) & (ap_predicate_op492_readreq_state37 == 1'b1));
end

assign ap_block_state37_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((m_axi_gmem1_ARREADY == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)) | ((m_axi_gmem0_ARREADY == 1'b0) & (icmp_ln6_reg_2353 == 1'd0)));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_pp0_stage8_iter1 = ((ap_predicate_op499_read_state44 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0));
end

assign ap_block_state45_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem1_ARREADY == 1'b0) & (icmp_ln6_reg_2353 == 1'd0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem0_ARREADY == 1'b0) & (icmp_ln6_reg_2353 == 1'd0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage11;

assign ap_phi_reg_pp0_iter0_storemerge15_reg_280 = 'bx;

always @ (*) begin
    ap_predicate_op492_readreq_state37 = ((tmp_reg_2584 == 1'd0) & (icmp_ln6_reg_2353 == 1'd0));
end

always @ (*) begin
    ap_predicate_op499_read_state44 = ((icmp_ln6_reg_2353_pp0_iter1_reg == 1'd0) & (tmp_reg_2584 == 1'd0));
end

assign conv2d_V_address0 = conv2d_V_addr_reg_2588;

assign conv2d_V_d0 = ap_phi_mux_storemerge15_phi_fu_284_p4;

assign empty_52_fu_399_p2 = (tmp_cast_cast_cast_cast_fu_395_p1 + Weights);

assign empty_53_fu_438_p2 = (p_shl2_cast_fu_422_p1 - p_shl3_cast_fu_434_p1);

assign empty_55_fu_497_p1 = add_ln6_2_fu_491_p2[1:0];

assign empty_57_fu_725_p2 = (select_ln8_2_fu_707_p3 + y_cast40_fu_715_p1);

assign empty_58_fu_743_p2 = ($signed(tmp_23_cast_fu_739_p1) + $signed(InModel));

assign empty_60_fu_884_p2 = (select_ln8_3_fu_877_p3 + y_cast40_reg_2411);

assign empty_61_fu_901_p2 = ($signed(tmp_28_cast_fu_897_p1) + $signed(InModel));

assign empty_63_fu_1197_p2 = (select_ln8_4_fu_1083_p3 + y_cast40_reg_2411);

assign empty_64_fu_1214_p2 = ($signed(tmp_34_cast_fu_1210_p1) + $signed(InModel));

assign empty_66_fu_1239_p2 = (select_ln8_5_fu_1125_p3 + y_cast40_reg_2411);

assign empty_67_fu_1256_p2 = ($signed(tmp_40_cast_fu_1252_p1) + $signed(InModel));

assign empty_69_fu_1281_p2 = (select_ln8_6_fu_1163_p3 + y_cast38_fu_1170_p1);

assign empty_70_fu_1299_p2 = (p_cast55_fu_1295_p1 + InModel);

assign empty_fu_377_p1 = n_fu_164[1:0];

assign icmp_ln10_fu_619_p2 = ((y_fu_152 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln6_fu_462_p2 = ((indvar_flatten141_fu_168 == 12'd2304) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_477_p2 = ((indvar_flatten_fu_160 == 10'd576) ? 1'b1 : 1'b0);

assign lhs_fu_2211_p4 = {{add_ln1347_23_fu_2205_p2[47:16]}};

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd5;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 32'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_WDATA = 32'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 4'd0;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem1_WVALID = 1'b0;

assign mul_ln6_fu_568_p0 = mul_ln6_fu_568_p00;

assign mul_ln6_fu_568_p00 = select_ln6_1_fu_524_p3;

assign mul_ln6_fu_568_p1 = 10'd100;

assign or_ln8_fu_667_p2 = (icmp_ln8_fu_477_p2 | and_ln6_fu_625_p2);

assign p_cast55_fu_1295_p1 = tmp_27_fu_1287_p3;

assign p_cast_fu_404_p4 = {{empty_52_fu_399_p2[63:2]}};

assign p_cast_mid1_fu_536_p4 = {{p_mid151_fu_519_p2[63:2]}};

assign p_mid151_fu_519_p2 = (tmp_cast_cast_mid1_cast_cast_fu_515_p1 + Weights);

assign p_mid1_fu_693_p2 = (p_shl4_1_cast_dup_fu_645_p1 - p_shl3_cast_mid1_fu_689_p1);

assign p_shl2_cast_fu_422_p1 = p_shl2_fu_414_p3;

assign p_shl2_fu_414_p3 = {{x_fu_156}, {5'd0}};

assign p_shl3_cast_fu_434_p1 = p_shl3_fu_426_p3;

assign p_shl3_cast_mid1_fu_689_p1 = p_shl3_mid1_fu_681_p3;

assign p_shl3_fu_426_p3 = {{x_fu_156}, {3'd0}};

assign p_shl3_mid1_fu_681_p3 = {{tmp_1_dup_fu_631_p2}, {3'd0}};

assign p_shl4_1_cast_dup_fu_645_p1 = p_shl4_1_dup_fu_637_p3;

assign p_shl4_1_cast_fu_813_p1 = p_shl4_1_fu_805_p3;

assign p_shl4_1_cast_mid1_fu_855_p1 = p_shl4_1_mid1_fu_847_p3;

assign p_shl4_1_dup_fu_637_p3 = {{tmp_1_dup_fu_631_p2}, {5'd0}};

assign p_shl4_1_fu_805_p3 = {{tmp_1_fu_800_p2}, {5'd0}};

assign p_shl4_1_mid1_fu_847_p3 = {{tmp_1_mid1_fu_842_p2}, {5'd0}};

assign p_shl4_2_cast_fu_939_p1 = p_shl4_2_fu_931_p3;

assign p_shl4_2_cast_mid1_fu_1061_p1 = p_shl4_2_mid1_fu_1053_p3;

assign p_shl4_2_fu_931_p3 = {{tmp_2_fu_926_p2}, {5'd0}};

assign p_shl4_2_mid1_fu_1053_p3 = {{tmp_2_mid1_fu_1048_p2}, {5'd0}};

assign p_shl4_3_cast_fu_974_p1 = p_shl4_3_fu_966_p3;

assign p_shl4_3_cast_mid1_fu_1103_p1 = p_shl4_3_mid1_fu_1095_p3;

assign p_shl4_3_fu_966_p3 = {{tmp_3_fu_961_p2}, {5'd0}};

assign p_shl4_3_mid1_fu_1095_p3 = {{tmp_3_mid1_fu_1090_p2}, {5'd0}};

assign p_shl4_4_fu_1001_p3 = {{tmp_4_fu_996_p2}, {5'd0}};

assign p_shl4_4_mid1_fu_1137_p3 = {{tmp_4_mid1_fu_1132_p2}, {5'd0}};

assign p_shl5_0_cast_fu_452_p1 = p_shl5_fu_444_p3;

assign p_shl5_1_cast_dup_fu_657_p1 = p_shl5_1_dup_fu_649_p3;

assign p_shl5_1_cast_fu_825_p1 = p_shl5_1_fu_817_p3;

assign p_shl5_1_cast_mid1_fu_867_p1 = p_shl5_1_mid1_fu_859_p3;

assign p_shl5_1_dup_fu_649_p3 = {{tmp_1_dup_fu_631_p2}, {2'd0}};

assign p_shl5_1_fu_817_p3 = {{tmp_1_fu_800_p2}, {2'd0}};

assign p_shl5_1_mid1_fu_859_p3 = {{tmp_1_mid1_fu_842_p2}, {2'd0}};

assign p_shl5_2_cast_fu_951_p1 = p_shl5_2_fu_943_p3;

assign p_shl5_2_cast_mid1_fu_1073_p1 = p_shl5_2_mid1_fu_1065_p3;

assign p_shl5_2_fu_943_p3 = {{tmp_2_fu_926_p2}, {2'd0}};

assign p_shl5_2_mid1_fu_1065_p3 = {{tmp_2_mid1_fu_1048_p2}, {2'd0}};

assign p_shl5_3_cast_fu_986_p1 = p_shl5_3_fu_978_p3;

assign p_shl5_3_cast_mid1_fu_1115_p1 = p_shl5_3_mid1_fu_1107_p3;

assign p_shl5_3_fu_978_p3 = {{tmp_3_fu_961_p2}, {2'd0}};

assign p_shl5_3_mid1_fu_1107_p3 = {{tmp_3_mid1_fu_1090_p2}, {2'd0}};

assign p_shl5_4_cast_fu_1017_p1 = p_shl5_4_fu_1009_p3;

assign p_shl5_4_cast_mid1_fu_1153_p1 = p_shl5_4_mid1_fu_1145_p3;

assign p_shl5_4_fu_1009_p3 = {{tmp_4_fu_996_p2}, {2'd0}};

assign p_shl5_4_mid1_fu_1145_p3 = {{tmp_4_mid1_fu_1132_p2}, {2'd0}};

assign p_shl5_fu_444_p3 = {{x_fu_156}, {2'd0}};

assign ret_V_fu_2225_p2 = ($signed(sext_ln813_fu_2221_p1) + $signed(sext_ln6_1_fu_2175_p1));

assign select_ln6_1_fu_524_p3 = ((icmp_ln8_fu_477_p2[0:0] == 1'b1) ? add_ln6_2_fu_491_p2 : n_fu_164);

assign select_ln6_2_fu_546_p3 = ((icmp_ln8_fu_477_p2[0:0] == 1'b1) ? p_cast_mid1_fu_536_p4 : p_cast_fu_404_p4);

assign select_ln6_3_fu_597_p3 = ((icmp_ln8_fu_477_p2[0:0] == 1'b1) ? 11'd0 : empty_53_fu_438_p2);

assign select_ln6_4_fu_605_p3 = ((icmp_ln8_fu_477_p2[0:0] == 1'b1) ? 11'd0 : tmp18_0_fu_456_p2);

assign select_ln6_5_fu_835_p3 = ((icmp_ln8_reg_2362[0:0] == 1'b1) ? 11'd28 : tmp18_1_fu_829_p2);

assign select_ln6_6_fu_1027_p3 = ((icmp_ln8_reg_2362[0:0] == 1'b1) ? 11'd56 : tmp18_2_fu_955_p2);

assign select_ln6_7_fu_1034_p3 = ((icmp_ln8_reg_2362[0:0] == 1'b1) ? 11'd84 : tmp18_3_fu_990_p2);

assign select_ln6_8_fu_1041_p3 = ((icmp_ln8_reg_2362[0:0] == 1'b1) ? 10'd112 : tmp18_4_fu_1021_p2);

assign select_ln6_fu_483_p3 = ((icmp_ln8_fu_477_p2[0:0] == 1'b1) ? 5'd0 : x_fu_156);

assign select_ln8_1_fu_699_p3 = ((and_ln6_fu_625_p2[0:0] == 1'b1) ? p_mid1_fu_693_p2 : select_ln6_3_fu_597_p3);

assign select_ln8_2_fu_707_p3 = ((and_ln6_fu_625_p2[0:0] == 1'b1) ? tmp18_1_dup_fu_661_p2 : select_ln6_4_fu_605_p3);

assign select_ln8_3_fu_877_p3 = ((and_ln6_reg_2391[0:0] == 1'b1) ? tmp18_1_mid1_fu_871_p2 : select_ln6_5_fu_835_p3);

assign select_ln8_4_fu_1083_p3 = ((and_ln6_reg_2391[0:0] == 1'b1) ? tmp18_2_mid1_fu_1077_p2 : select_ln6_6_fu_1027_p3);

assign select_ln8_5_fu_1125_p3 = ((and_ln6_reg_2391[0:0] == 1'b1) ? tmp18_3_mid1_fu_1119_p2 : select_ln6_7_fu_1034_p3);

assign select_ln8_6_fu_1163_p3 = ((and_ln6_reg_2391[0:0] == 1'b1) ? tmp18_4_mid1_fu_1157_p2 : select_ln6_8_fu_1041_p3);

assign select_ln8_7_fu_2179_p3 = ((and_ln6_reg_2391[0:0] == 1'b1) ? tmp_1_dup_reg_2400 : select_ln6_reg_2371);

assign select_ln8_8_fu_2253_p3 = ((icmp_ln8_reg_2362[0:0] == 1'b1) ? 10'd1 : add_ln8_fu_2248_p2);

assign select_ln8_fu_673_p3 = ((or_ln8_fu_667_p2[0:0] == 1'b1) ? 5'd0 : y_fu_152);

assign sext_ln15_mid2_v_fu_583_p4 = {{add_ln6_1_fu_578_p2[63:2]}};

assign sext_ln17_1_fu_916_p1 = $signed(trunc_ln17_1_fu_906_p4);

assign sext_ln17_2_fu_1229_p1 = $signed(trunc_ln17_2_fu_1219_p4);

assign sext_ln17_3_fu_1271_p1 = $signed(trunc_ln17_3_fu_1261_p4);

assign sext_ln17_4_fu_1314_p1 = $signed(trunc_ln17_4_fu_1304_p4);

assign sext_ln17_fu_758_p1 = $signed(trunc_ln_fu_748_p4);

assign sext_ln21_fu_790_p1 = $signed(add_ln21_1_fu_784_p2);

assign sext_ln6_1_fu_2175_p1 = reg_292;

assign sext_ln6_2_fu_593_p1 = $signed(sext_ln15_mid2_v_fu_583_p4);

assign sext_ln6_fu_554_p1 = $signed(select_ln6_2_fu_546_p3);

assign sext_ln813_fu_2221_p1 = lhs_fu_2211_p4;

assign shl_ln838_10_fu_1745_p3 = {{tmp_18_reg_2514}, {16'd0}};

assign shl_ln838_11_fu_1782_p3 = {{tmp_19_reg_2519}, {16'd0}};

assign shl_ln838_12_fu_1819_p3 = {{tmp_20_reg_2524}, {16'd0}};

assign shl_ln838_13_fu_1856_p3 = {{tmp_22_reg_2529}, {16'd0}};

assign shl_ln838_14_fu_1893_p3 = {{tmp_23_reg_2534}, {16'd0}};

assign shl_ln838_15_fu_1930_p3 = {{tmp_24_reg_2539}, {16'd0}};

assign shl_ln838_16_fu_1967_p3 = {{tmp_25_reg_2544}, {16'd0}};

assign shl_ln838_17_fu_2004_p3 = {{tmp_26_reg_2549}, {16'd0}};

assign shl_ln838_18_fu_2041_p3 = {{tmp_28_reg_2554}, {16'd0}};

assign shl_ln838_19_fu_2078_p3 = {{tmp_29_reg_2559}, {16'd0}};

assign shl_ln838_1_fu_1375_p3 = {{tmp_6_reg_2464}, {16'd0}};

assign shl_ln838_20_fu_2115_p3 = {{tmp_30_reg_2564}, {16'd0}};

assign shl_ln838_21_fu_2152_p3 = {{tmp_31_reg_2569}, {16'd0}};

assign shl_ln838_22_fu_2198_p3 = {{tmp_32_reg_2574}, {16'd0}};

assign shl_ln838_2_fu_1412_p3 = {{tmp_7_reg_2469}, {16'd0}};

assign shl_ln838_3_fu_1449_p3 = {{tmp_8_reg_2474}, {16'd0}};

assign shl_ln838_4_fu_1486_p3 = {{tmp_10_reg_2479}, {16'd0}};

assign shl_ln838_5_fu_1523_p3 = {{tmp_11_reg_2484}, {16'd0}};

assign shl_ln838_6_fu_1560_p3 = {{tmp_12_reg_2489}, {16'd0}};

assign shl_ln838_7_fu_1597_p3 = {{tmp_13_reg_2494}, {16'd0}};

assign shl_ln838_8_fu_1634_p3 = {{tmp_14_reg_2499}, {16'd0}};

assign shl_ln838_9_fu_1671_p3 = {{tmp_16_reg_2504}, {16'd0}};

assign shl_ln838_s_fu_1708_p3 = {{tmp_17_reg_2509}, {16'd0}};

assign shl_ln_fu_1338_p3 = {{tmp_5_reg_2441}, {16'd0}};

assign tmp18_0_fu_456_p2 = (p_shl2_cast_fu_422_p1 - p_shl5_0_cast_fu_452_p1);

assign tmp18_1_dup_fu_661_p2 = (p_shl4_1_cast_dup_fu_645_p1 - p_shl5_1_cast_dup_fu_657_p1);

assign tmp18_1_fu_829_p2 = (p_shl4_1_cast_fu_813_p1 - p_shl5_1_cast_fu_825_p1);

assign tmp18_1_mid1_fu_871_p2 = (p_shl4_1_cast_mid1_fu_855_p1 - p_shl5_1_cast_mid1_fu_867_p1);

assign tmp18_2_fu_955_p2 = (p_shl4_2_cast_fu_939_p1 - p_shl5_2_cast_fu_951_p1);

assign tmp18_2_mid1_fu_1077_p2 = (p_shl4_2_cast_mid1_fu_1061_p1 - p_shl5_2_cast_mid1_fu_1073_p1);

assign tmp18_3_fu_990_p2 = (p_shl4_3_cast_fu_974_p1 - p_shl5_3_cast_fu_986_p1);

assign tmp18_3_mid1_fu_1119_p2 = (p_shl4_3_cast_mid1_fu_1103_p1 - p_shl5_3_cast_mid1_fu_1115_p1);

assign tmp18_4_fu_1021_p2 = (p_shl4_4_fu_1001_p3 - p_shl5_4_cast_fu_1017_p1);

assign tmp18_4_mid1_fu_1157_p2 = (p_shl4_4_mid1_fu_1137_p3 - p_shl5_4_cast_mid1_fu_1153_p1);

assign tmp1_fu_768_p5 = {{{{trunc_ln6_fu_532_p1}, {1'd0}}, {trunc_ln6_fu_532_p1}}, {6'd0}};

assign tmp20_fu_381_p4 = {{{{4'd9}, {empty_fu_377_p1}}}, {2'd0}};

assign tmp439_mid1_fu_501_p4 = {{{{4'd9}, {empty_55_fu_497_p1}}}, {2'd0}};

assign tmp_15_fu_1202_p3 = {{empty_63_fu_1197_p2}, {2'd0}};

assign tmp_1_dup_fu_631_p2 = (select_ln6_fu_483_p3 + 5'd1);

assign tmp_1_fu_800_p2 = (x_1_reg_2340 + 5'd1);

assign tmp_1_mid1_fu_842_p2 = (select_ln6_reg_2371 + 5'd2);

assign tmp_21_fu_1244_p3 = {{empty_66_fu_1239_p2}, {2'd0}};

assign tmp_23_cast_fu_739_p1 = $signed(tmp_s_fu_731_p3);

assign tmp_27_fu_1287_p3 = {{empty_69_fu_1281_p2}, {2'd0}};

assign tmp_28_cast_fu_897_p1 = $signed(tmp_9_fu_889_p3);

assign tmp_2_fu_926_p2 = (x_1_reg_2340 + 5'd2);

assign tmp_2_mid1_fu_1048_p2 = (select_ln6_reg_2371 + 5'd3);

assign tmp_34_cast_fu_1210_p1 = $signed(tmp_15_fu_1202_p3);

assign tmp_3_fu_961_p2 = (x_1_reg_2340 + 5'd3);

assign tmp_3_mid1_fu_1090_p2 = (select_ln6_reg_2371 + 5'd4);

assign tmp_40_cast_fu_1252_p1 = $signed(tmp_21_fu_1244_p3);

assign tmp_4_fu_996_p2 = (x_1_reg_2340 + 5'd4);

assign tmp_4_mid1_fu_1132_p2 = (select_ln6_reg_2371 + 5'd5);

assign tmp_9_fu_889_p3 = {{empty_60_fu_884_p2}, {2'd0}};

assign tmp_cast_cast_cast_cast_fu_395_p1 = $unsigned(tmp_cast_cast_cast_fu_391_p1);

assign tmp_cast_cast_cast_fu_391_p1 = $signed(tmp20_fu_381_p4);

assign tmp_cast_cast_mid1_cast_cast_fu_515_p1 = $unsigned(tmp_cast_cast_mid1_cast_fu_511_p1);

assign tmp_cast_cast_mid1_cast_fu_511_p1 = $signed(tmp439_mid1_fu_501_p4);

assign tmp_fu_2231_p3 = ret_V_fu_2225_p2[32'd32];

assign tmp_s_fu_731_p3 = {{empty_57_fu_725_p2}, {2'd0}};

assign trunc_ln17_1_fu_906_p4 = {{empty_61_fu_901_p2[63:2]}};

assign trunc_ln17_2_fu_1219_p4 = {{empty_64_fu_1214_p2[63:2]}};

assign trunc_ln17_3_fu_1261_p4 = {{empty_67_fu_1256_p2[63:2]}};

assign trunc_ln17_4_fu_1304_p4 = {{empty_70_fu_1299_p2[63:2]}};

assign trunc_ln6_fu_532_p1 = select_ln6_1_fu_524_p3[1:0];

assign trunc_ln_fu_748_p4 = {{empty_58_fu_743_p2[63:2]}};

assign xor_ln6_fu_613_p2 = (icmp_ln8_fu_477_p2 ^ 1'd1);

assign y_cast38_fu_1170_p1 = select_ln8_reg_2405;

assign y_cast40_fu_715_p1 = select_ln8_fu_673_p3;

assign zext_ln21_1_fu_2239_p1 = add_ln21_reg_2430;

assign zext_ln21_fu_780_p1 = tmp1_fu_768_p5;

assign zext_ln6_1_fu_574_p1 = mul_ln6_fu_568_p2;

always @ (posedge ap_clk) begin
    y_cast40_reg_2411[10:5] <= 6'b000000;
end

endmodule //cnn_top_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0
