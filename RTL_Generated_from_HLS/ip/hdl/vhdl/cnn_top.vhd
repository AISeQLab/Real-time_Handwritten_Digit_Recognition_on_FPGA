-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_CONTROL_R_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_R_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_control_r_AWVALID : IN STD_LOGIC;
    s_axi_control_r_AWREADY : OUT STD_LOGIC;
    s_axi_control_r_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_WVALID : IN STD_LOGIC;
    s_axi_control_r_WREADY : OUT STD_LOGIC;
    s_axi_control_r_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH/8-1 downto 0);
    s_axi_control_r_ARVALID : IN STD_LOGIC;
    s_axi_control_r_ARREADY : OUT STD_LOGIC;
    s_axi_control_r_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_RVALID : OUT STD_LOGIC;
    s_axi_control_r_RREADY : IN STD_LOGIC;
    s_axi_control_r_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_r_BVALID : OUT STD_LOGIC;
    s_axi_control_r_BREADY : IN STD_LOGIC;
    s_axi_control_r_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of cnn_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn_top_cnn_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=153636,HLS_SYN_TPT=none,HLS_SYN_MEM=40,HLS_SYN_DSP=0,HLS_SYN_FF=20997,HLS_SYN_LUT=25004,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (56 downto 0) := "000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (56 downto 0) := "000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (56 downto 0) := "000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (56 downto 0) := "000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (56 downto 0) := "000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (56 downto 0) := "000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (56 downto 0) := "000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (56 downto 0) := "000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (56 downto 0) := "000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (56 downto 0) := "001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (56 downto 0) := "010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (56 downto 0) := "100000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv64_4E40 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000100111001000000";
    constant ap_const_lv64_56C0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000101011011000000";
    constant ap_const_lv64_4EC0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000100111011000000";
    constant ap_const_lv64_5980 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000101100110000000";
    constant ap_const_lv64_5700 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000101011100000000";
    constant ap_const_lv12_190 : STD_LOGIC_VECTOR (11 downto 0) := "000110010000";
    constant ap_const_lv12_1A0 : STD_LOGIC_VECTOR (11 downto 0) := "000110100000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal InModel : STD_LOGIC_VECTOR (63 downto 0);
    signal Weights : STD_LOGIC_VECTOR (63 downto 0);
    signal OutModel0_ap_vld : STD_LOGIC;
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal gmem1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal Weights_read_reg_1250 : STD_LOGIC_VECTOR (63 downto 0);
    signal InModel_read_reg_1264 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln29_fu_833_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_reg_1278 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln31_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1283 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_addr_3_reg_1288 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln29_2_fu_917_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln29_2_reg_1294 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_fu_967_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_reg_1304 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_2_fu_999_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_2_reg_1310 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln44_fu_1021_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln44_reg_1318 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln36_mid2_v_reg_1323 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal gmem1_addr_3_read_reg_1334 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_mid1224_fu_1077_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid1224_reg_1339 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_21_fu_1100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal conv2d_1_V_addr_reg_1351 : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_addr_3_read_1_reg_1356 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln813_1_fu_1112_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal trunc_ln7_reg_1366 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal dense_V_q1 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_reg_1381 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal dense_V_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_1_reg_1386 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_2_reg_1401 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal input_Dense_V_1_load_3_reg_1406 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_4_reg_1421 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal input_Dense_V_1_load_5_reg_1426 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_6_reg_1441 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal input_Dense_V_1_load_7_reg_1446 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_8_reg_1461 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal input_Dense_V_1_load_9_reg_1466 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_10_reg_1481 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal input_Dense_V_1_load_11_reg_1486 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_12_reg_1501 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal input_Dense_V_1_load_13_reg_1506 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_14_reg_1521 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal input_Dense_V_1_load_15_reg_1526 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_16_reg_1541 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal input_Dense_V_1_load_17_reg_1546 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_18_reg_1561 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal input_Dense_V_1_load_19_reg_1566 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_20_reg_1581 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal input_Dense_V_1_load_21_reg_1586 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_22_reg_1601 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal input_Dense_V_1_load_23_reg_1606 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_24_reg_1621 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal input_Dense_V_1_load_25_reg_1626 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_26_reg_1641 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal input_Dense_V_1_load_27_reg_1646 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_28_reg_1661 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal input_Dense_V_1_load_29_reg_1666 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln4_reg_1681 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal add_ln1273_fu_1188_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_reg_1686 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_Dense_V_1_load_30_reg_1691 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_V_1_load_31_reg_1696 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln34_fu_1194_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln34_reg_1701 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal add_ln34_1_fu_1200_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln34_1_reg_1706 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_Dense_V_ce0 : STD_LOGIC;
    signal out_Dense_V_we0 : STD_LOGIC;
    signal out_Dense_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_Dense_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal out_Dense_V_1_ce0 : STD_LOGIC;
    signal out_Dense_V_1_we0 : STD_LOGIC;
    signal out_Dense_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv2d_V_ce0 : STD_LOGIC;
    signal conv2d_V_we0 : STD_LOGIC;
    signal conv2d_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_V_ce1 : STD_LOGIC;
    signal conv2d_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_V_ce2 : STD_LOGIC;
    signal conv2d_V_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_V_ce3 : STD_LOGIC;
    signal conv2d_V_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pooling2d_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal max_pooling2d_V_ce0 : STD_LOGIC;
    signal max_pooling2d_V_we0 : STD_LOGIC;
    signal max_pooling2d_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv2d_1_V_ce0 : STD_LOGIC;
    signal conv2d_1_V_we0 : STD_LOGIC;
    signal conv2d_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_1_V_ce1 : STD_LOGIC;
    signal conv2d_1_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_1_V_ce2 : STD_LOGIC;
    signal conv2d_1_V_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2d_1_V_ce3 : STD_LOGIC;
    signal conv2d_1_V_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pooling2d_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal max_pooling2d_1_V_ce0 : STD_LOGIC;
    signal max_pooling2d_1_V_we0 : STD_LOGIC;
    signal max_pooling2d_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flatten_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal flatten_V_ce0 : STD_LOGIC;
    signal flatten_V_we0 : STD_LOGIC;
    signal flatten_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_V_ce0 : STD_LOGIC;
    signal dense_V_we0 : STD_LOGIC;
    signal dense_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_V_ce1 : STD_LOGIC;
    signal dense_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_1_V_ce0 : STD_LOGIC;
    signal dense_1_V_we0 : STD_LOGIC;
    signal dense_1_V_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal dense_1_V_ce1 : STD_LOGIC;
    signal dense_1_V_q1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce1 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce2 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce3 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce1 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce2 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce3 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_s_V_4_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_s_V_4_out_ap_vld : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_d0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_done : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_idle : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_ready : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_ce0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_we0 : STD_LOGIC;
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_d0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_Dense_2_fu_725_ap_start : STD_LOGIC;
    signal grp_Dense_2_fu_725_ap_done : STD_LOGIC;
    signal grp_Dense_2_fu_725_ap_idle : STD_LOGIC;
    signal grp_Dense_2_fu_725_ap_ready : STD_LOGIC;
    signal grp_Dense_2_fu_725_input_Dense_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_input_Dense_ce0 : STD_LOGIC;
    signal grp_Dense_2_fu_725_input_Dense_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_input_Dense_ce1 : STD_LOGIC;
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_Dense_2_fu_725_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_Dense_2_fu_725_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_fu_725_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_Dense_2_fu_725_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_Dense_2_fu_725_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal storemerge11_reg_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_Dense_2_fu_725_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal zext_ln44_fu_1108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln29_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln29_2_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_fu_230 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln33_fu_1116_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_1_fu_234 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten238_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln31_3_fu_1127_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_1_fu_242 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten272_fu_246 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal empty_fu_778_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_782_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp8_cast_cast_cast_fu_792_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp8_cast_cast_cast_cast_fu_796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_78_fu_800_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_79_fu_815_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln29_2_fu_856_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_81_fu_862_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp8464_mid1_fu_866_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp8_cast_cast_mid1_cast_fu_876_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp8_cast_cast_mid1_cast_cast_fu_880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_mid1260_fu_884_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast31_mid1_fu_889_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast1_fu_805_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln29_1_fu_899_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_59_fu_819_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln33_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln29_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_fu_848_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln29_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln31_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln31_fu_955_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_82_fu_975_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_mid_fu_979_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln29_3_fu_929_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_1_fu_987_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln44_fu_1007_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp12_fu_1011_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln31_fu_995_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1206_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln29_1_fu_1027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln29_4_fu_1030_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl16_mid_fu_1055_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl17_mid_fu_1066_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl16_cast_mid1218_fu_1062_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl17_cast_mid1222_fu_1073_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln813_fu_1090_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln813_fu_1090_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln29_1_fu_1084_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_fu_1094_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln813_1_fu_1112_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln31_1_fu_1121_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln7_1_fu_1156_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln29_1_fu_1172_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1206_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1206_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1206_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_1206_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (56 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal grp_fu_1206_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Weights : IN STD_LOGIC_VECTOR (63 downto 0);
        InModel : IN STD_LOGIC_VECTOR (63 downto 0);
        conv2d_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv2d_V_ce0 : OUT STD_LOGIC;
        conv2d_V_we0 : OUT STD_LOGIC;
        conv2d_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv2d_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv2d_V_ce0 : OUT STD_LOGIC;
        conv2d_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2d_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv2d_V_ce1 : OUT STD_LOGIC;
        conv2d_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2d_V_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv2d_V_ce2 : OUT STD_LOGIC;
        conv2d_V_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2d_V_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv2d_V_ce3 : OUT STD_LOGIC;
        conv2d_V_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pooling2d_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        max_pooling2d_V_ce0 : OUT STD_LOGIC;
        max_pooling2d_V_we0 : OUT STD_LOGIC;
        max_pooling2d_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv2d_1_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2d_1_V_ce0 : OUT STD_LOGIC;
        conv2d_1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2d_1_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2d_1_V_ce1 : OUT STD_LOGIC;
        conv2d_1_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2d_1_V_address2 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2d_1_V_ce2 : OUT STD_LOGIC;
        conv2d_1_V_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2d_1_V_address3 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2d_1_V_ce3 : OUT STD_LOGIC;
        conv2d_1_V_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pooling2d_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        max_pooling2d_1_V_ce0 : OUT STD_LOGIC;
        max_pooling2d_1_V_we0 : OUT STD_LOGIC;
        max_pooling2d_1_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln29_3 : IN STD_LOGIC_VECTOR (61 downto 0);
        select_ln31_2 : IN STD_LOGIC_VECTOR (3 downto 0);
        p_mid1224 : IN STD_LOGIC_VECTOR (8 downto 0);
        zext_ln33_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        max_pooling2d_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        max_pooling2d_V_ce0 : OUT STD_LOGIC;
        max_pooling2d_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        s_V_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        s_V_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component cnn_top_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pooling2d_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        max_pooling2d_1_V_ce0 : OUT STD_LOGIC;
        max_pooling2d_1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flatten_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        flatten_V_ce0 : OUT STD_LOGIC;
        flatten_V_we0 : OUT STD_LOGIC;
        flatten_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        flatten_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        flatten_V_ce0 : OUT STD_LOGIC;
        flatten_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Weights : IN STD_LOGIC_VECTOR (63 downto 0);
        sext_ln7 : IN STD_LOGIC_VECTOR (61 downto 0);
        out_Dense_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        out_Dense_V_1_ce0 : OUT STD_LOGIC;
        out_Dense_V_1_we0 : OUT STD_LOGIC;
        out_Dense_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_cnn_top_Pipeline_VITIS_LOOP_17_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_Dense_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        out_Dense_V_1_ce0 : OUT STD_LOGIC;
        out_Dense_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_V_ce0 : OUT STD_LOGIC;
        dense_V_we0 : OUT STD_LOGIC;
        dense_V_d0 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component cnn_top_cnn_top_Pipeline_loop_for_a_Dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        add_ln1273 : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln1273 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_2 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_3 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_4 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_5 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_6 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_7 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_8 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_9 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_10 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_11 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_12 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_13 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_14 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_15 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_16 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_17 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_18 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_19 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_20 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_21 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_22 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_23 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_24 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_25 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_26 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_27 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_28 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_29 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln29_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        sext_ln1271 : IN STD_LOGIC_VECTOR (61 downto 0);
        out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce0 : OUT STD_LOGIC;
        out_Dense_V_we0 : OUT STD_LOGIC;
        out_Dense_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_cnn_top_Pipeline_VITIS_LOOP_39_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce0 : OUT STD_LOGIC;
        out_Dense_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dense_1_V_ce0 : OUT STD_LOGIC;
        dense_1_V_we0 : OUT STD_LOGIC;
        dense_1_V_d0 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component cnn_top_Dense_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_Dense_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_Dense_ce0 : OUT STD_LOGIC;
        input_Dense_q0 : IN STD_LOGIC_VECTOR (30 downto 0);
        input_Dense_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_Dense_ce1 : OUT STD_LOGIC;
        input_Dense_q1 : IN STD_LOGIC_VECTOR (30 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        bias : IN STD_LOGIC_VECTOR (63 downto 0);
        weight : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_mac_muladd_4ns_9ns_9ns_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component cnn_top_out_Dense_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_out_Dense_V_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_conv2d_V_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_max_pooling2d_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_conv2d_1_V_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_max_pooling2d_1_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_dense_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (30 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (30 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component cnn_top_dense_1_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (30 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (30 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component cnn_top_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        OutModel0 : IN STD_LOGIC_VECTOR (31 downto 0);
        OutModel0_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component cnn_top_control_r_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        InModel : OUT STD_LOGIC_VECTOR (63 downto 0);
        Weights : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component cnn_top_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component cnn_top_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    out_Dense_V_U : component cnn_top_out_Dense_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => out_Dense_V_address0,
        ce0 => out_Dense_V_ce0,
        we0 => out_Dense_V_we0,
        d0 => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_d0,
        q0 => out_Dense_V_q0);

    out_Dense_V_1_U : component cnn_top_out_Dense_V_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => out_Dense_V_1_address0,
        ce0 => out_Dense_V_1_ce0,
        we0 => out_Dense_V_1_we0,
        d0 => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_d0,
        q0 => out_Dense_V_1_q0);

    conv2d_V_U : component cnn_top_conv2d_V_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv2d_V_address0,
        ce0 => conv2d_V_ce0,
        we0 => conv2d_V_we0,
        d0 => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_d0,
        q0 => conv2d_V_q0,
        address1 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address1,
        ce1 => conv2d_V_ce1,
        q1 => conv2d_V_q1,
        address2 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address2,
        ce2 => conv2d_V_ce2,
        q2 => conv2d_V_q2,
        address3 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address3,
        ce3 => conv2d_V_ce3,
        q3 => conv2d_V_q3);

    max_pooling2d_V_U : component cnn_top_max_pooling2d_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pooling2d_V_address0,
        ce0 => max_pooling2d_V_ce0,
        we0 => max_pooling2d_V_we0,
        d0 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_d0,
        q0 => max_pooling2d_V_q0);

    conv2d_1_V_U : component cnn_top_conv2d_1_V_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv2d_1_V_address0,
        ce0 => conv2d_1_V_ce0,
        we0 => conv2d_1_V_we0,
        d0 => storemerge11_reg_604,
        q0 => conv2d_1_V_q0,
        address1 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address1,
        ce1 => conv2d_1_V_ce1,
        q1 => conv2d_1_V_q1,
        address2 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address2,
        ce2 => conv2d_1_V_ce2,
        q2 => conv2d_1_V_q2,
        address3 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address3,
        ce3 => conv2d_1_V_ce3,
        q3 => conv2d_1_V_q3);

    max_pooling2d_1_V_U : component cnn_top_max_pooling2d_1_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pooling2d_1_V_address0,
        ce0 => max_pooling2d_1_V_ce0,
        we0 => max_pooling2d_1_V_we0,
        d0 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_d0,
        q0 => max_pooling2d_1_V_q0);

    flatten_V_U : component cnn_top_max_pooling2d_1_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flatten_V_address0,
        ce0 => flatten_V_ce0,
        we0 => flatten_V_we0,
        d0 => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_d0,
        q0 => flatten_V_q0);

    dense_V_U : component cnn_top_dense_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 31,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dense_V_address0,
        ce0 => dense_V_ce0,
        we0 => dense_V_we0,
        d0 => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_d0,
        q0 => dense_V_q0,
        address1 => dense_V_address1,
        ce1 => dense_V_ce1,
        q1 => dense_V_q1);

    dense_1_V_U : component cnn_top_dense_1_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 31,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dense_1_V_address0,
        ce0 => dense_1_V_ce0,
        we0 => dense_1_V_we0,
        d0 => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_d0,
        q0 => dense_1_V_q0,
        address1 => grp_Dense_2_fu_725_input_Dense_address1,
        ce1 => dense_1_V_ce1,
        q1 => dense_1_V_q1);

    grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616 : component cnn_top_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start,
        ap_done => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_done,
        ap_idle => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_ready,
        m_axi_gmem1_AWVALID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        m_axi_gmem0_AWVALID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        Weights => Weights_read_reg_1250,
        InModel => InModel_read_reg_1264,
        conv2d_V_address0 => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_address0,
        conv2d_V_ce0 => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_ce0,
        conv2d_V_we0 => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_we0,
        conv2d_V_d0 => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_d0);

    grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630 : component cnn_top_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start,
        ap_done => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_done,
        ap_idle => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_ready,
        conv2d_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address0,
        conv2d_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce0,
        conv2d_V_q0 => conv2d_V_q0,
        conv2d_V_address1 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address1,
        conv2d_V_ce1 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce1,
        conv2d_V_q1 => conv2d_V_q1,
        conv2d_V_address2 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address2,
        conv2d_V_ce2 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce2,
        conv2d_V_q2 => conv2d_V_q2,
        conv2d_V_address3 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address3,
        conv2d_V_ce3 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce3,
        conv2d_V_q3 => conv2d_V_q3,
        max_pooling2d_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_address0,
        max_pooling2d_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_ce0,
        max_pooling2d_V_we0 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_we0,
        max_pooling2d_V_d0 => grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_d0);

    grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636 : component cnn_top_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start,
        ap_done => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_done,
        ap_idle => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_ready,
        conv2d_1_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address0,
        conv2d_1_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce0,
        conv2d_1_V_q0 => conv2d_1_V_q0,
        conv2d_1_V_address1 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address1,
        conv2d_1_V_ce1 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce1,
        conv2d_1_V_q1 => conv2d_1_V_q1,
        conv2d_1_V_address2 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address2,
        conv2d_1_V_ce2 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce2,
        conv2d_1_V_q2 => conv2d_1_V_q2,
        conv2d_1_V_address3 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address3,
        conv2d_1_V_ce3 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce3,
        conv2d_1_V_q3 => conv2d_1_V_q3,
        max_pooling2d_1_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_address0,
        max_pooling2d_1_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_ce0,
        max_pooling2d_1_V_we0 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_we0,
        max_pooling2d_1_V_d0 => grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_d0);

    grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642 : component cnn_top_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start,
        ap_done => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_done,
        ap_idle => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_ready,
        m_axi_gmem1_AWVALID => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        sext_ln29_3 => sext_ln36_mid2_v_reg_1323,
        select_ln31_2 => select_ln31_2_reg_1310,
        p_mid1224 => p_mid1224_reg_1339,
        zext_ln33_1 => select_ln31_reg_1304,
        max_pooling2d_V_address0 => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_address0,
        max_pooling2d_V_ce0 => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_ce0,
        max_pooling2d_V_q0 => max_pooling2d_V_q0,
        s_V_4_out => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_s_V_4_out,
        s_V_4_out_ap_vld => grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_s_V_4_out_ap_vld);

    grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654 : component cnn_top_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start,
        ap_done => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_done,
        ap_idle => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_ready,
        max_pooling2d_1_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_address0,
        max_pooling2d_1_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_ce0,
        max_pooling2d_1_V_q0 => max_pooling2d_1_V_q0,
        flatten_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_address0,
        flatten_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_ce0,
        flatten_V_we0 => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_we0,
        flatten_V_d0 => grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_d0);

    grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660 : component cnn_top_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start,
        ap_done => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_done,
        ap_idle => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_ready,
        m_axi_gmem1_AWVALID => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        flatten_V_address0 => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_address0,
        flatten_V_ce0 => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_ce0,
        flatten_V_q0 => flatten_V_q0,
        Weights => Weights_read_reg_1250,
        sext_ln7 => trunc_ln7_reg_1366,
        out_Dense_V_1_address0 => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_address0,
        out_Dense_V_1_ce0 => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_ce0,
        out_Dense_V_1_we0 => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_we0,
        out_Dense_V_1_d0 => grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_d0);

    grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670 : component cnn_top_cnn_top_Pipeline_VITIS_LOOP_17_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start,
        ap_done => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_done,
        ap_idle => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_ready,
        out_Dense_V_1_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_address0,
        out_Dense_V_1_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_ce0,
        out_Dense_V_1_q0 => out_Dense_V_1_q0,
        dense_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_address0,
        dense_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_ce0,
        dense_V_we0 => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_we0,
        dense_V_d0 => grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_d0);

    grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676 : component cnn_top_cnn_top_Pipeline_loop_for_a_Dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start,
        ap_done => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_done,
        ap_idle => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_ready,
        m_axi_gmem1_AWVALID => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        add_ln1273 => add_ln1273_reg_1686,
        zext_ln1273 => input_Dense_V_1_load_reg_1381,
        zext_ln1271 => input_Dense_V_1_load_1_reg_1386,
        zext_ln1271_1 => input_Dense_V_1_load_2_reg_1401,
        zext_ln1271_2 => input_Dense_V_1_load_3_reg_1406,
        zext_ln1271_3 => input_Dense_V_1_load_4_reg_1421,
        zext_ln1271_4 => input_Dense_V_1_load_5_reg_1426,
        zext_ln1271_5 => input_Dense_V_1_load_6_reg_1441,
        zext_ln1271_6 => input_Dense_V_1_load_7_reg_1446,
        zext_ln1271_7 => input_Dense_V_1_load_8_reg_1461,
        zext_ln1271_8 => input_Dense_V_1_load_9_reg_1466,
        zext_ln1271_9 => input_Dense_V_1_load_10_reg_1481,
        zext_ln1271_10 => input_Dense_V_1_load_11_reg_1486,
        zext_ln1271_11 => input_Dense_V_1_load_12_reg_1501,
        zext_ln1271_12 => input_Dense_V_1_load_13_reg_1506,
        zext_ln1271_13 => input_Dense_V_1_load_14_reg_1521,
        zext_ln1271_14 => input_Dense_V_1_load_15_reg_1526,
        zext_ln1271_15 => input_Dense_V_1_load_16_reg_1541,
        zext_ln1271_16 => input_Dense_V_1_load_17_reg_1546,
        zext_ln1271_17 => input_Dense_V_1_load_18_reg_1561,
        zext_ln1271_18 => input_Dense_V_1_load_19_reg_1566,
        zext_ln1271_19 => input_Dense_V_1_load_20_reg_1581,
        zext_ln1271_20 => input_Dense_V_1_load_21_reg_1586,
        zext_ln1271_21 => input_Dense_V_1_load_22_reg_1601,
        zext_ln1271_22 => input_Dense_V_1_load_23_reg_1606,
        zext_ln1271_23 => input_Dense_V_1_load_24_reg_1621,
        zext_ln1271_24 => input_Dense_V_1_load_25_reg_1626,
        zext_ln1271_25 => input_Dense_V_1_load_26_reg_1641,
        zext_ln1271_26 => input_Dense_V_1_load_27_reg_1646,
        zext_ln1271_27 => input_Dense_V_1_load_28_reg_1661,
        zext_ln1271_28 => input_Dense_V_1_load_29_reg_1666,
        zext_ln1271_29 => input_Dense_V_1_load_30_reg_1691,
        zext_ln29_1 => input_Dense_V_1_load_31_reg_1696,
        sext_ln1271 => trunc_ln4_reg_1681,
        out_Dense_V_address0 => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_address0,
        out_Dense_V_ce0 => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_ce0,
        out_Dense_V_we0 => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_we0,
        out_Dense_V_d0 => grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_d0);

    grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719 : component cnn_top_cnn_top_Pipeline_VITIS_LOOP_39_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start,
        ap_done => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_done,
        ap_idle => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_idle,
        ap_ready => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_ready,
        out_Dense_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_address0,
        out_Dense_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_ce0,
        out_Dense_V_q0 => out_Dense_V_q0,
        dense_1_V_address0 => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_address0,
        dense_1_V_ce0 => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_ce0,
        dense_1_V_we0 => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_we0,
        dense_1_V_d0 => grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_d0);

    grp_Dense_2_fu_725 : component cnn_top_Dense_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Dense_2_fu_725_ap_start,
        ap_done => grp_Dense_2_fu_725_ap_done,
        ap_idle => grp_Dense_2_fu_725_ap_idle,
        ap_ready => grp_Dense_2_fu_725_ap_ready,
        input_Dense_address0 => grp_Dense_2_fu_725_input_Dense_address0,
        input_Dense_ce0 => grp_Dense_2_fu_725_input_Dense_ce0,
        input_Dense_q0 => dense_1_V_q0,
        input_Dense_address1 => grp_Dense_2_fu_725_input_Dense_address1,
        input_Dense_ce1 => grp_Dense_2_fu_725_input_Dense_ce1,
        input_Dense_q1 => dense_1_V_q1,
        m_axi_gmem1_AWVALID => grp_Dense_2_fu_725_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_Dense_2_fu_725_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_Dense_2_fu_725_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_Dense_2_fu_725_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_Dense_2_fu_725_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_Dense_2_fu_725_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_Dense_2_fu_725_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_Dense_2_fu_725_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_Dense_2_fu_725_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_Dense_2_fu_725_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_Dense_2_fu_725_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_Dense_2_fu_725_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_Dense_2_fu_725_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_Dense_2_fu_725_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_Dense_2_fu_725_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_Dense_2_fu_725_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_Dense_2_fu_725_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_Dense_2_fu_725_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_Dense_2_fu_725_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_Dense_2_fu_725_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_Dense_2_fu_725_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_Dense_2_fu_725_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_Dense_2_fu_725_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_Dense_2_fu_725_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_Dense_2_fu_725_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_Dense_2_fu_725_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_Dense_2_fu_725_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_Dense_2_fu_725_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_Dense_2_fu_725_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_Dense_2_fu_725_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_Dense_2_fu_725_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_Dense_2_fu_725_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        bias => add_ln34_reg_1701,
        weight => add_ln34_1_reg_1706,
        ap_return => grp_Dense_2_fu_725_ap_return);

    control_s_axi_U : component cnn_top_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        OutModel0 => grp_Dense_2_fu_725_ap_return,
        OutModel0_ap_vld => OutModel0_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    control_r_s_axi_U : component cnn_top_control_r_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_R_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_R_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_r_AWVALID,
        AWREADY => s_axi_control_r_AWREADY,
        AWADDR => s_axi_control_r_AWADDR,
        WVALID => s_axi_control_r_WVALID,
        WREADY => s_axi_control_r_WREADY,
        WDATA => s_axi_control_r_WDATA,
        WSTRB => s_axi_control_r_WSTRB,
        ARVALID => s_axi_control_r_ARVALID,
        ARREADY => s_axi_control_r_ARREADY,
        ARADDR => s_axi_control_r_ARADDR,
        RVALID => s_axi_control_r_RVALID,
        RREADY => s_axi_control_r_RREADY,
        RDATA => s_axi_control_r_RDATA,
        RRESP => s_axi_control_r_RRESP,
        BVALID => s_axi_control_r_BVALID,
        BREADY => s_axi_control_r_BREADY,
        BRESP => s_axi_control_r_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        InModel => InModel,
        Weights => Weights);

    gmem0_m_axi_U : component cnn_top_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARADDR,
        I_ARLEN => grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem0_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem0_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem1_m_axi_U : component cnn_top_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => gmem1_ARADDR,
        I_ARLEN => gmem1_ARLEN,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RFIFONUM => gmem1_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem1_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem1_BVALID,
        I_BREADY => ap_const_logic_0);

    mac_muladd_4ns_9ns_9ns_12_4_1_U190 : component cnn_top_mac_muladd_4ns_9ns_9ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1206_p0,
        din1 => grp_fu_1206_p1,
        din2 => grp_fu_1206_p2,
        ce => grp_fu_1206_ce,
        dout => grp_fu_1206_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Dense_2_fu_725_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Dense_2_fu_725_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    grp_Dense_2_fu_725_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Dense_2_fu_725_ap_ready = ap_const_logic_1)) then 
                    grp_Dense_2_fu_725_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln29_fu_827_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                    grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten238_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten238_fu_238 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                indvar_flatten238_fu_238 <= select_ln31_3_fu_1127_p3;
            end if; 
        end if;
    end process;

    indvar_flatten272_fu_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten272_fu_246 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                indvar_flatten272_fu_246 <= add_ln29_reg_1278;
            end if; 
        end if;
    end process;

    n_1_fu_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_1_fu_242 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                n_1_fu_242 <= select_ln29_2_reg_1294;
            end if; 
        end if;
    end process;

    storemerge11_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_21_fu_1100_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                storemerge11_reg_604 <= ap_const_lv32_0;
            elsif (((tmp_21_reg_1347 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                storemerge11_reg_604 <= add_ln813_1_fu_1112_p2;
            end if; 
        end if;
    end process;

    x_1_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_1_fu_234 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                x_1_fu_234 <= select_ln31_2_reg_1310;
            end if; 
        end if;
    end process;

    y_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_fu_230 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                y_fu_230 <= add_ln33_fu_1116_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                InModel_read_reg_1264 <= InModel;
                Weights_read_reg_1250 <= Weights;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                add_ln1273_reg_1686 <= add_ln1273_fu_1188_p2;
                input_Dense_V_1_load_30_reg_1691 <= dense_V_q1;
                input_Dense_V_1_load_31_reg_1696 <= dense_V_q0;
                trunc_ln4_reg_1681 <= add_ln29_1_fu_1172_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln29_reg_1278 <= add_ln29_fu_833_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                add_ln34_1_reg_1706 <= add_ln34_1_fu_1200_p2;
                add_ln34_reg_1701 <= add_ln34_fu_1194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln29_fu_827_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln44_reg_1318 <= add_ln44_fu_1021_p2;
                gmem1_addr_3_reg_1288 <= sext_ln29_fu_907_p1;
                icmp_ln31_reg_1283 <= icmp_ln31_fu_842_p2;
                select_ln29_2_reg_1294 <= select_ln29_2_fu_917_p3;
                select_ln31_2_reg_1310 <= select_ln31_2_fu_999_p3;
                select_ln31_reg_1304 <= select_ln31_fu_967_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                conv2d_1_V_addr_reg_1351 <= zext_ln44_fu_1108_p1(9 - 1 downto 0);
                tmp_21_reg_1347 <= ret_V_fu_1094_p2(32 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                gmem1_addr_3_read_1_reg_1356 <= gmem1_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                gmem1_addr_3_read_reg_1334 <= gmem1_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                input_Dense_V_1_load_10_reg_1481 <= dense_V_q1;
                input_Dense_V_1_load_11_reg_1486 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                input_Dense_V_1_load_12_reg_1501 <= dense_V_q1;
                input_Dense_V_1_load_13_reg_1506 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                input_Dense_V_1_load_14_reg_1521 <= dense_V_q1;
                input_Dense_V_1_load_15_reg_1526 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                input_Dense_V_1_load_16_reg_1541 <= dense_V_q1;
                input_Dense_V_1_load_17_reg_1546 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                input_Dense_V_1_load_18_reg_1561 <= dense_V_q1;
                input_Dense_V_1_load_19_reg_1566 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                input_Dense_V_1_load_1_reg_1386 <= dense_V_q0;
                input_Dense_V_1_load_reg_1381 <= dense_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                input_Dense_V_1_load_20_reg_1581 <= dense_V_q1;
                input_Dense_V_1_load_21_reg_1586 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                input_Dense_V_1_load_22_reg_1601 <= dense_V_q1;
                input_Dense_V_1_load_23_reg_1606 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                input_Dense_V_1_load_24_reg_1621 <= dense_V_q1;
                input_Dense_V_1_load_25_reg_1626 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                input_Dense_V_1_load_26_reg_1641 <= dense_V_q1;
                input_Dense_V_1_load_27_reg_1646 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                input_Dense_V_1_load_28_reg_1661 <= dense_V_q1;
                input_Dense_V_1_load_29_reg_1666 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                input_Dense_V_1_load_2_reg_1401 <= dense_V_q1;
                input_Dense_V_1_load_3_reg_1406 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                input_Dense_V_1_load_4_reg_1421 <= dense_V_q1;
                input_Dense_V_1_load_5_reg_1426 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                input_Dense_V_1_load_6_reg_1441 <= dense_V_q1;
                input_Dense_V_1_load_7_reg_1446 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                input_Dense_V_1_load_8_reg_1461 <= dense_V_q1;
                input_Dense_V_1_load_9_reg_1466 <= dense_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                    p_mid1224_reg_1339(8 downto 2) <= p_mid1224_fu_1077_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                sext_ln36_mid2_v_reg_1323 <= add_ln29_4_fu_1030_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                trunc_ln7_reg_1366 <= add_ln7_1_fu_1156_p2(63 downto 2);
            end if;
        end if;
    end process;
    p_mid1224_reg_1339(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state26, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state9, ap_CS_fsm_state5, icmp_ln29_fu_827_p2, tmp_21_fu_1100_p3, ap_CS_fsm_state18, grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_done, grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_done, grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_done, grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_done, grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_done, grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_done, grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_done, grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_done, grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_done, grp_Dense_2_fu_725_ap_done, gmem1_ARREADY, gmem1_RVALID, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state29, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state33, ap_CS_fsm_state35, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln29_fu_827_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (gmem1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (gmem1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (gmem1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((tmp_21_fu_1100_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (gmem1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (gmem1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state29 => 
                if (((grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state55) and (grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (grp_Dense_2_fu_725_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    OutModel0_ap_vld_assign_proc : process(grp_Dense_2_fu_725_ap_done, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) and (grp_Dense_2_fu_725_ap_done = ap_const_logic_1))) then 
            OutModel0_ap_vld <= ap_const_logic_1;
        else 
            OutModel0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1273_fu_1188_p2 <= std_logic_vector(unsigned(Weights_read_reg_1250) + unsigned(ap_const_lv64_4EC0));
    add_ln29_1_fu_1172_p2 <= std_logic_vector(unsigned(Weights_read_reg_1250) + unsigned(ap_const_lv64_56C0));
    add_ln29_2_fu_856_p2 <= std_logic_vector(unsigned(n_1_fu_242) + unsigned(ap_const_lv4_1));
    add_ln29_4_fu_1030_p2 <= std_logic_vector(unsigned(zext_ln29_1_fu_1027_p1) + unsigned(Weights_read_reg_1250));
    add_ln29_fu_833_p2 <= std_logic_vector(unsigned(indvar_flatten272_fu_246) + unsigned(ap_const_lv10_1));
    add_ln31_1_fu_1121_p2 <= std_logic_vector(unsigned(indvar_flatten238_fu_238) + unsigned(ap_const_lv8_1));
    add_ln31_fu_955_p2 <= std_logic_vector(unsigned(select_ln29_fu_848_p3) + unsigned(ap_const_lv4_1));
    add_ln33_fu_1116_p2 <= std_logic_vector(unsigned(select_ln31_reg_1304) + unsigned(ap_const_lv4_1));
    add_ln34_1_fu_1200_p2 <= std_logic_vector(unsigned(Weights_read_reg_1250) + unsigned(ap_const_lv64_5700));
    add_ln34_fu_1194_p2 <= std_logic_vector(unsigned(Weights_read_reg_1250) + unsigned(ap_const_lv64_5980));
    add_ln44_fu_1021_p2 <= std_logic_vector(unsigned(tmp12_fu_1011_p4) + unsigned(zext_ln31_fu_995_p1));
    add_ln7_1_fu_1156_p2 <= std_logic_vector(unsigned(Weights_read_reg_1250) + unsigned(ap_const_lv64_4E40));
    add_ln813_1_fu_1112_p1 <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_s_V_4_out;
    add_ln813_1_fu_1112_p2 <= std_logic_vector(unsigned(gmem1_addr_3_read_1_reg_1356) + unsigned(add_ln813_1_fu_1112_p1));
    and_ln29_fu_949_p2 <= (xor_ln29_fu_937_p2 and icmp_ln33_fu_943_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(gmem1_RVALID)
    begin
        if ((gmem1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(gmem1_ARREADY)
    begin
        if ((gmem1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(gmem1_RVALID)
    begin
        if ((gmem1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;

    ap_ST_fsm_state31_blk_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state34_blk <= ap_const_logic_0;

    ap_ST_fsm_state35_blk_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;

    ap_ST_fsm_state53_blk_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state53_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state53_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state54_blk <= ap_const_logic_0;

    ap_ST_fsm_state55_blk_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_done)
    begin
        if ((grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state55_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state55_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state56_blk <= ap_const_logic_0;

    ap_ST_fsm_state57_blk_assign_proc : process(grp_Dense_2_fu_725_ap_done)
    begin
        if ((grp_Dense_2_fu_725_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state57_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state57_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(gmem1_ARREADY)
    begin
        if ((gmem1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(gmem1_ARREADY)
    begin
        if ((gmem1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_Dense_2_fu_725_ap_done, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) and (grp_Dense_2_fu_725_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_Dense_2_fu_725_ap_done, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) and (grp_Dense_2_fu_725_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    conv2d_1_V_address0_assign_proc : process(conv2d_1_V_addr_reg_1351, grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address0, ap_CS_fsm_state29, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv2d_1_V_address0 <= conv2d_1_V_addr_reg_1351;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2d_1_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_address0;
        else 
            conv2d_1_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    conv2d_1_V_ce0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce0, ap_CS_fsm_state29, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv2d_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2d_1_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce0;
        else 
            conv2d_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_1_V_ce1_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2d_1_V_ce1 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce1;
        else 
            conv2d_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_1_V_ce2_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce2, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2d_1_V_ce2 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce2;
        else 
            conv2d_1_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_1_V_ce3_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce3, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2d_1_V_ce3 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_conv2d_1_V_ce3;
        else 
            conv2d_1_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_1_V_we0_assign_proc : process(ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv2d_1_V_we0 <= ap_const_logic_1;
        else 
            conv2d_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_V_address0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_address0, grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv2d_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv2d_V_address0 <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_address0;
        else 
            conv2d_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv2d_V_ce0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_ce0, grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv2d_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv2d_V_ce0 <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_ce0;
        else 
            conv2d_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_V_ce1_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv2d_V_ce1 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce1;
        else 
            conv2d_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_V_ce2_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv2d_V_ce2 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce2;
        else 
            conv2d_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_V_ce3_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv2d_V_ce3 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_conv2d_V_ce3;
        else 
            conv2d_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv2d_V_we0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv2d_V_we0 <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_conv2d_V_we0;
        else 
            conv2d_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_V_address0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_address0, grp_Dense_2_fu_725_input_Dense_address0, ap_CS_fsm_state55, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            dense_1_V_address0 <= grp_Dense_2_fu_725_input_Dense_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            dense_1_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_address0;
        else 
            dense_1_V_address0 <= "XXXX";
        end if; 
    end process;


    dense_1_V_ce0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_ce0, grp_Dense_2_fu_725_input_Dense_ce0, ap_CS_fsm_state55, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            dense_1_V_ce0 <= grp_Dense_2_fu_725_input_Dense_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            dense_1_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_ce0;
        else 
            dense_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_V_ce1_assign_proc : process(grp_Dense_2_fu_725_input_Dense_ce1, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            dense_1_V_ce1 <= grp_Dense_2_fu_725_input_Dense_ce1;
        else 
            dense_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_V_we0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_we0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            dense_1_V_we0 <= grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_dense_1_V_we0;
        else 
            dense_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_V_address0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_address0, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            dense_V_address0 <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            dense_V_address0 <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            dense_V_address0 <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            dense_V_address0 <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            dense_V_address0 <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            dense_V_address0 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            dense_V_address0 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            dense_V_address0 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            dense_V_address0 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            dense_V_address0 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_V_address0 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            dense_V_address0 <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_V_address0 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            dense_V_address0 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_V_address0 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            dense_V_address0 <= ap_const_lv64_1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_address0;
        else 
            dense_V_address0 <= "XXXXX";
        end if; 
    end process;


    dense_V_address1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            dense_V_address1 <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            dense_V_address1 <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            dense_V_address1 <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            dense_V_address1 <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            dense_V_address1 <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            dense_V_address1 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            dense_V_address1 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            dense_V_address1 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            dense_V_address1 <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            dense_V_address1 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_V_address1 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            dense_V_address1 <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_V_address1 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            dense_V_address1 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_V_address1 <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            dense_V_address1 <= ap_const_lv64_0(5 - 1 downto 0);
        else 
            dense_V_address1 <= "XXXXX";
        end if; 
    end process;


    dense_V_ce0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_ce0, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            dense_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_ce0;
        else 
            dense_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_V_ce1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            dense_V_ce1 <= ap_const_logic_1;
        else 
            dense_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_V_we0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_we0, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_V_we0 <= grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_dense_V_we0;
        else 
            dense_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_78_fu_800_p2 <= std_logic_vector(unsigned(tmp8_cast_cast_cast_cast_fu_796_p1) + unsigned(Weights_read_reg_1250));
    empty_79_fu_815_p1 <= x_1_fu_234(3 - 1 downto 0);
    empty_81_fu_862_p1 <= add_ln29_2_fu_856_p2(3 - 1 downto 0);
    empty_82_fu_975_p1 <= add_ln31_fu_955_p2(3 - 1 downto 0);
    empty_fu_778_p1 <= n_1_fu_242(3 - 1 downto 0);

    flatten_V_address0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_address0, grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_address0, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            flatten_V_address0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            flatten_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_address0;
        else 
            flatten_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    flatten_V_ce0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_ce0, grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_ce0, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            flatten_V_ce0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_flatten_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            flatten_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_ce0;
        else 
            flatten_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flatten_V_we0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_we0, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            flatten_V_we0 <= grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_flatten_V_we0;
        else 
            flatten_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_ARVALID <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_RREADY <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_ARADDR_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state6, ap_CS_fsm_state9, gmem1_addr_3_reg_1288, ap_CS_fsm_state16, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state56, grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARADDR, grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARADDR, grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARADDR, grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARADDR, grp_Dense_2_fu_725_m_axi_gmem1_ARADDR, gmem1_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state17, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state57, sext_ln29_2_fu_1045_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (gmem1_ARREADY = ap_const_logic_1))) then 
            gmem1_ARADDR <= sext_ln29_2_fu_1045_p1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (gmem1_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (gmem1_ARREADY = ap_const_logic_1)))) then 
            gmem1_ARADDR <= gmem1_addr_3_reg_1288;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem1_ARADDR <= grp_Dense_2_fu_725_m_axi_gmem1_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem1_ARADDR <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            gmem1_ARADDR <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem1_ARADDR <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_ARADDR <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARADDR;
        else 
            gmem1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARLEN_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state56, grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARLEN, grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARLEN, grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARLEN, grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARLEN, grp_Dense_2_fu_725_m_axi_gmem1_ARLEN, gmem1_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state17, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (gmem1_ARREADY = ap_const_logic_1))) then 
            gmem1_ARLEN <= ap_const_lv32_64;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (gmem1_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (gmem1_ARREADY = ap_const_logic_1)))) then 
            gmem1_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem1_ARLEN <= grp_Dense_2_fu_725_m_axi_gmem1_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem1_ARLEN <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            gmem1_ARLEN <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem1_ARLEN <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_ARLEN <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARLEN;
        else 
            gmem1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state56, grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARVALID, grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARVALID, grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARVALID, grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARVALID, grp_Dense_2_fu_725_m_axi_gmem1_ARVALID, gmem1_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state17, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state57)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (gmem1_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (gmem1_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (gmem1_ARREADY = ap_const_logic_1)))) then 
            gmem1_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem1_ARVALID <= grp_Dense_2_fu_725_m_axi_gmem1_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem1_ARVALID <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            gmem1_ARVALID <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem1_ARVALID <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_ARVALID <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_ARVALID;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state26, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state56, grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_RREADY, grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_RREADY, grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_RREADY, grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_RREADY, grp_Dense_2_fu_725_m_axi_gmem1_RREADY, gmem1_RVALID, ap_CS_fsm_state2, ap_CS_fsm_state17, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state57)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state15) and (gmem1_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (gmem1_RVALID = ap_const_logic_1)))) then 
            gmem1_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem1_RREADY <= grp_Dense_2_fu_725_m_axi_gmem1_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem1_RREADY <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_m_axi_gmem1_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            gmem1_RREADY <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_m_axi_gmem1_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem1_RREADY <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_m_axi_gmem1_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_RREADY <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_m_axi_gmem1_RREADY;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AR_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state19, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(m_axi_gmem1_RVALID, ap_CS_fsm_state26, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_Dense_2_fu_725_ap_start <= grp_Dense_2_fu_725_ap_start_reg;
    grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start <= grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_ap_start_reg;
    grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_ap_start_reg;
    grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start <= grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_ap_start_reg;
    grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start <= grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_ap_start_reg;
    grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_ap_start_reg;
    grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_ap_start_reg;
    grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_ap_start_reg;
    grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start <= grp_cnn_top_Pipeline_loop_for_channel2D_0_loop_for_bp2D_0_loop_for_ap2D_0_fu_616_ap_start_reg;
    grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_ap_start_reg;

    grp_fu_1206_ce_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state5, ap_CS_fsm_state8, gmem1_ARREADY, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (gmem1_ARREADY = ap_const_logic_1)))) then 
            grp_fu_1206_ce <= ap_const_logic_1;
        else 
            grp_fu_1206_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1206_p0 <= grp_fu_1206_p00(4 - 1 downto 0);
    grp_fu_1206_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_2_fu_917_p3),12));
    grp_fu_1206_p1 <= ap_const_lv12_190(9 - 1 downto 0);
    grp_fu_1206_p2 <= ap_const_lv12_1A0(9 - 1 downto 0);
    icmp_ln29_fu_827_p2 <= "1" when (indvar_flatten272_fu_246 = ap_const_lv10_200) else "0";
    icmp_ln31_fu_842_p2 <= "1" when (indvar_flatten238_fu_238 = ap_const_lv8_40) else "0";
    icmp_ln33_fu_943_p2 <= "1" when (y_fu_230 = ap_const_lv4_8) else "0";

    max_pooling2d_1_V_address0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_address0, grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_address0, ap_CS_fsm_state29, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            max_pooling2d_1_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            max_pooling2d_1_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_address0;
        else 
            max_pooling2d_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    max_pooling2d_1_V_ce0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_ce0, grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_ce0, ap_CS_fsm_state29, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            max_pooling2d_1_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_51_1_VITIS_LOOP_52_2_VITIS_LOOP_53_3_fu_654_max_pooling2d_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            max_pooling2d_1_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_ce0;
        else 
            max_pooling2d_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pooling2d_1_V_we0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_we0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            max_pooling2d_1_V_we0 <= grp_cnn_top_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_32_2_VITIS_LOOP_33_3_fu_636_max_pooling2d_1_V_we0;
        else 
            max_pooling2d_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pooling2d_V_address0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_address0, grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_address0, ap_CS_fsm_state4, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            max_pooling2d_V_address0 <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            max_pooling2d_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_address0;
        else 
            max_pooling2d_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    max_pooling2d_V_ce0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_ce0, grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_ce0, ap_CS_fsm_state4, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            max_pooling2d_V_ce0 <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_max_pooling2d_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            max_pooling2d_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_ce0;
        else 
            max_pooling2d_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pooling2d_V_we0_assign_proc : process(grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            max_pooling2d_V_we0 <= grp_cnn_top_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_9_2_VITIS_LOOP_10_3_fu_630_max_pooling2d_V_we0;
        else 
            max_pooling2d_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln31_fu_961_p2 <= (icmp_ln31_fu_842_p2 or and_ln29_fu_949_p2);

    out_Dense_V_1_address0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_address0, grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_address0, ap_CS_fsm_state33, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            out_Dense_V_1_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            out_Dense_V_1_address0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_address0;
        else 
            out_Dense_V_1_address0 <= "XXXXX";
        end if; 
    end process;


    out_Dense_V_1_ce0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_ce0, grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_ce0, ap_CS_fsm_state33, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            out_Dense_V_1_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_17_1_fu_670_out_Dense_V_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            out_Dense_V_1_ce0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_ce0;
        else 
            out_Dense_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_Dense_V_1_we0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_we0, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            out_Dense_V_1_we0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_0_loop_for_b_Dense_0_fu_660_out_Dense_V_1_we0;
        else 
            out_Dense_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_Dense_V_address0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_address0, grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_address0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            out_Dense_V_address0 <= grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            out_Dense_V_address0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_address0;
        else 
            out_Dense_V_address0 <= "XXXX";
        end if; 
    end process;


    out_Dense_V_ce0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_ce0, grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_ce0, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            out_Dense_V_ce0 <= grp_cnn_top_Pipeline_VITIS_LOOP_39_1_fu_719_out_Dense_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            out_Dense_V_ce0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_ce0;
        else 
            out_Dense_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_Dense_V_we0_assign_proc : process(grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_we0, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            out_Dense_V_we0 <= grp_cnn_top_Pipeline_loop_for_a_Dense_1_fu_676_out_Dense_V_we0;
        else 
            out_Dense_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast1_fu_805_p4 <= empty_78_fu_800_p2(63 downto 2);
    p_cast31_mid1_fu_889_p4 <= p_mid1260_fu_884_p2(63 downto 2);
    p_mid1224_fu_1077_p2 <= std_logic_vector(unsigned(p_shl16_cast_mid1218_fu_1062_p1) - unsigned(p_shl17_cast_mid1222_fu_1073_p1));
    p_mid1260_fu_884_p2 <= std_logic_vector(unsigned(tmp8_cast_cast_mid1_cast_cast_fu_880_p1) + unsigned(Weights_read_reg_1250));
    p_mid_fu_979_p3 <= (empty_82_fu_975_p1 & ap_const_lv3_0);
    p_shl16_cast_mid1218_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl16_mid_fu_1055_p3),9));
    p_shl16_mid_fu_1055_p3 <= (select_ln31_2_reg_1310 & ap_const_lv4_0);
    p_shl17_cast_mid1222_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl17_mid_fu_1066_p3),9));
    p_shl17_mid_fu_1066_p3 <= (select_ln31_2_reg_1310 & ap_const_lv2_0);
    ret_V_fu_1094_p2 <= std_logic_vector(signed(sext_ln813_fu_1090_p1) + signed(sext_ln29_1_fu_1084_p1));
    select_ln29_1_fu_899_p3 <= 
        p_cast31_mid1_fu_889_p4 when (icmp_ln31_fu_842_p2(0) = '1') else 
        p_cast1_fu_805_p4;
    select_ln29_2_fu_917_p3 <= 
        add_ln29_2_fu_856_p2 when (icmp_ln31_fu_842_p2(0) = '1') else 
        n_1_fu_242;
    select_ln29_3_fu_929_p3 <= 
        ap_const_lv6_0 when (icmp_ln31_fu_842_p2(0) = '1') else 
        tmp_59_fu_819_p3;
    select_ln29_fu_848_p3 <= 
        ap_const_lv4_0 when (icmp_ln31_fu_842_p2(0) = '1') else 
        x_1_fu_234;
    select_ln31_1_fu_987_p3 <= 
        p_mid_fu_979_p3 when (and_ln29_fu_949_p2(0) = '1') else 
        select_ln29_3_fu_929_p3;
    select_ln31_2_fu_999_p3 <= 
        add_ln31_fu_955_p2 when (and_ln29_fu_949_p2(0) = '1') else 
        select_ln29_fu_848_p3;
    select_ln31_3_fu_1127_p3 <= 
        ap_const_lv8_1 when (icmp_ln31_reg_1283(0) = '1') else 
        add_ln31_1_fu_1121_p2;
    select_ln31_fu_967_p3 <= 
        ap_const_lv4_0 when (or_ln31_fu_961_p2(0) = '1') else 
        y_fu_230;
        sext_ln29_1_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(gmem1_addr_3_read_reg_1334),33));

        sext_ln29_2_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln36_mid2_v_reg_1323),64));

        sext_ln29_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln29_1_fu_899_p3),64));

    sext_ln813_fu_1090_p0 <= grp_cnn_top_Pipeline_loop_for_fc_1_loop_for_fb_1_loop_for_fa_1_fu_642_s_V_4_out;
        sext_ln813_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln813_fu_1090_p0),33));

    tmp12_fu_1011_p4 <= ((trunc_ln44_fu_1007_p1 & ap_const_lv2_0) & select_ln31_fu_967_p3);
    tmp8464_mid1_fu_866_p4 <= ((ap_const_lv5_11 & empty_81_fu_862_p1) & ap_const_lv2_0);
    tmp8_cast_cast_cast_cast_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_cast_cast_cast_fu_792_p1),64));
        tmp8_cast_cast_cast_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_782_p4),12));

    tmp8_cast_cast_mid1_cast_cast_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_cast_cast_mid1_cast_fu_876_p1),64));
        tmp8_cast_cast_mid1_cast_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp8464_mid1_fu_866_p4),12));

    tmp_21_fu_1100_p3 <= ret_V_fu_1094_p2(32 downto 32);
    tmp_59_fu_819_p3 <= (empty_79_fu_815_p1 & ap_const_lv3_0);
    tmp_fu_782_p4 <= ((ap_const_lv5_11 & empty_fu_778_p1) & ap_const_lv2_0);
    trunc_ln44_fu_1007_p1 <= select_ln29_2_fu_917_p3(3 - 1 downto 0);
    xor_ln29_fu_937_p2 <= (icmp_ln31_fu_842_p2 xor ap_const_lv1_1);
    zext_ln29_1_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1206_p3),64));
    zext_ln31_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_1_fu_987_p3),9));
    zext_ln44_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_reg_1318),64));
end behav;
