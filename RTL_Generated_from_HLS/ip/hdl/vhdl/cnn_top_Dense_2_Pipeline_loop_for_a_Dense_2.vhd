-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_Dense_2_Pipeline_loop_for_a_Dense_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    weight : IN STD_LOGIC_VECTOR (63 downto 0);
    zext_ln1271 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_31 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_32 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_33 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_34 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_35 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_36 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_37 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_38 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_39 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_40 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_41 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_42 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_43 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln1271_44 : IN STD_LOGIC_VECTOR (30 downto 0);
    zext_ln52 : IN STD_LOGIC_VECTOR (30 downto 0);
    bias : IN STD_LOGIC_VECTOR (63 downto 0);
    out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_Dense_V_ce0 : OUT STD_LOGIC;
    out_Dense_V_we0 : OUT STD_LOGIC;
    out_Dense_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cnn_top_Dense_2_Pipeline_loop_for_a_Dense_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_82 : STD_LOGIC_VECTOR (7 downto 0) := "10000010";
    constant ap_const_lv8_8C : STD_LOGIC_VECTOR (7 downto 0) := "10001100";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal icmp_ln52_reg_1890 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage16 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal gmem1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln52_cast_fu_475_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln52_cast_reg_1799 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_44_cast_fu_479_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_44_cast_reg_1804 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_43_cast_fu_483_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_43_cast_reg_1809 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_42_cast_fu_487_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_42_cast_reg_1814 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_41_cast_fu_491_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_41_cast_reg_1819 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_40_cast_fu_495_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_40_cast_reg_1824 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_39_cast_fu_499_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_39_cast_reg_1829 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_38_cast_fu_503_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_38_cast_reg_1834 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_37_cast_fu_507_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_37_cast_reg_1839 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_36_cast_fu_511_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_36_cast_reg_1844 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_35_cast_fu_515_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_35_cast_reg_1849 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_34_cast_fu_519_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_34_cast_reg_1854 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_33_cast_fu_523_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_33_cast_reg_1859 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_32_cast_fu_527_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_32_cast_reg_1864 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_31_cast_fu_531_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_31_cast_reg_1869 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_cast_fu_535_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1271_cast_reg_1874 : STD_LOGIC_VECTOR (47 downto 0);
    signal i_5_reg_1879 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_1879_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln52_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_addr_34_reg_1894 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_1900 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1273_35_fu_617_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1273_35_reg_1906 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gmem1_addr_35_reg_1912 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_36_reg_1918 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal trunc_ln58_cast5_fu_705_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln58_cast5_reg_1924 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal gmem1_addr_37_reg_1931 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_38_reg_1937 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal gmem1_addr_39_reg_1943 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal zext_ln1273_34_fu_839_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1273_34_reg_1949 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal gmem1_addr_40_reg_1955 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_41_reg_1961 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal gmem1_addr_34_read_reg_1967 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state26_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal gmem1_addr_42_reg_1972 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_35_read_reg_1978 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal tmp_reg_1983 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_43_reg_1988 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_36_read_reg_1994 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal tmp_s_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_44_reg_2004 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_37_read_reg_2010 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal tmp_63_reg_2015 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_45_reg_2020 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1273_fu_1179_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1273_reg_2026 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal gmem1_addr_38_read_reg_2033 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_reg_2038 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_46_reg_2043 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_39_read_reg_2049 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal tmp_66_reg_2054 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_47_reg_2059 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_40_read_reg_2065 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal tmp_67_reg_2070 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_48_reg_2075 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_49_reg_2081 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_41_read_reg_2087 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal tmp_68_reg_2092 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_42_read_reg_2097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal tmp_69_reg_2102 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_43_read_reg_2107 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_2112 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_44_read_reg_2117 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_reg_2122 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_45_read_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_reg_2132 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_46_read_reg_2137 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_reg_2142 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_47_read_reg_2147 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_reg_2152 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_48_read_reg_2157 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_reg_2162 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_49_read_reg_2167 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_reg_2172 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln818_s_reg_2177 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_read_reg_2182 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal trunc_ln58_cast6_fu_1764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_fu_581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln813_fu_607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_93_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_94_fu_695_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_95_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_96_fu_783_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_97_fu_829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_98_fu_875_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_99_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_100_fu_955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_101_fu_1015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_102_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_103_fu_1169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_104_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_105_fu_1319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_106_fu_1392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1273_107_fu_1434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_146 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln52_fu_1475_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_5 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_553_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1273_36_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_fu_565_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_571_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln813_fu_591_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln813_2_fu_597_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_33_fu_620_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1273_s_fu_626_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1273_37_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_1_fu_638_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_s_fu_643_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_34_fu_663_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1273_1_fu_668_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1273_38_fu_676_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_2_fu_680_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_32_fu_685_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_35_fu_708_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1273_2_fu_714_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1273_39_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_3_fu_726_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_33_fu_731_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_36_fu_751_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1273_3_fu_756_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1273_40_fu_764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_4_fu_768_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_34_fu_773_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_37_fu_793_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_65_fu_798_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1273_122_fu_806_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1273_41_fu_810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_5_fu_814_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_35_fu_819_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_38_fu_842_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1273_4_fu_848_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1273_42_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_6_fu_860_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_36_fu_865_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_39_fu_885_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1273_5_fu_890_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1273_43_fu_898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_7_fu_902_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_37_fu_907_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1273_46_cast_fu_927_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1273_44_fu_936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_8_fu_940_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_38_fu_945_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1273_fu_968_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1273_fu_968_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1273_40_fu_983_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1273_6_fu_988_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1273_45_fu_996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_9_fu_1000_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_39_fu_1005_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1273_56_fu_1028_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln2_fu_1033_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_56_fu_1028_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_fu_1040_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1273_41_fu_1056_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_71_fu_1061_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1273_128_fu_1069_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1273_46_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_10_fu_1077_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_40_fu_1082_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1273_57_fu_1105_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_s_fu_1110_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_57_fu_1105_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_55_fu_1117_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1273_42_fu_1133_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_73_fu_1138_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1273_130_fu_1146_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1273_47_fu_1150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_11_fu_1154_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_41_fu_1159_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1273_58_fu_1185_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_53_fu_1190_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_58_fu_1185_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_56_fu_1197_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1273_43_fu_1213_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1273_7_fu_1219_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1273_48_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_12_fu_1231_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_42_fu_1236_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1273_59_fu_1259_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_54_fu_1264_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_59_fu_1259_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_57_fu_1271_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1273_44_fu_1287_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1273_8_fu_1292_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1273_49_fu_1300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_13_fu_1304_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_43_fu_1309_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1273_60_fu_1332_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_55_fu_1337_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_60_fu_1332_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_58_fu_1344_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1273_45_fu_1360_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1273_9_fu_1365_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1273_50_fu_1373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_14_fu_1377_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_44_fu_1382_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1273_46_fu_1402_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1273_10_fu_1407_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1273_51_fu_1415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1273_15_fu_1419_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1273_45_fu_1424_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1273_61_fu_1447_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_56_fu_1452_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_61_fu_1447_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_59_fu_1459_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_62_fu_1483_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_57_fu_1488_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_62_fu_1483_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_60_fu_1495_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_63_fu_1519_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_58_fu_1524_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_63_fu_1519_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_61_fu_1531_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_64_fu_1550_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_59_fu_1555_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_64_fu_1550_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_62_fu_1562_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_65_fu_1581_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_60_fu_1586_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_65_fu_1581_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_63_fu_1593_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_66_fu_1612_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_61_fu_1617_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_66_fu_1612_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_64_fu_1624_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_67_fu_1643_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_62_fu_1648_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_67_fu_1643_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_65_fu_1655_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_68_fu_1674_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_63_fu_1679_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_68_fu_1674_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_66_fu_1686_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_69_fu_1705_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_64_fu_1710_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_69_fu_1705_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_67_fu_1717_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_70_fu_1736_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln838_65_fu_1741_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1273_70_fu_1736_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1347_68_fu_1748_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_mul_32s_31ns_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component cnn_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32s_31ns_48_1_1_U127 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_34_read_reg_1967,
        din1 => mul_ln1273_fu_968_p1,
        dout => mul_ln1273_fu_968_p2);

    mul_32s_31ns_48_1_1_U128 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_35_read_reg_1978,
        din1 => mul_ln1273_56_fu_1028_p1,
        dout => mul_ln1273_56_fu_1028_p2);

    mul_32s_31ns_48_1_1_U129 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_36_read_reg_1994,
        din1 => mul_ln1273_57_fu_1105_p1,
        dout => mul_ln1273_57_fu_1105_p2);

    mul_32s_31ns_48_1_1_U130 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_37_read_reg_2010,
        din1 => mul_ln1273_58_fu_1185_p1,
        dout => mul_ln1273_58_fu_1185_p2);

    mul_32s_31ns_48_1_1_U131 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_38_read_reg_2033,
        din1 => mul_ln1273_59_fu_1259_p1,
        dout => mul_ln1273_59_fu_1259_p2);

    mul_32s_31ns_48_1_1_U132 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_39_read_reg_2049,
        din1 => mul_ln1273_60_fu_1332_p1,
        dout => mul_ln1273_60_fu_1332_p2);

    mul_32s_31ns_48_1_1_U133 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_40_read_reg_2065,
        din1 => mul_ln1273_61_fu_1447_p1,
        dout => mul_ln1273_61_fu_1447_p2);

    mul_32s_31ns_48_1_1_U134 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_41_read_reg_2087,
        din1 => mul_ln1273_62_fu_1483_p1,
        dout => mul_ln1273_62_fu_1483_p2);

    mul_32s_31ns_48_1_1_U135 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_42_read_reg_2097,
        din1 => mul_ln1273_63_fu_1519_p1,
        dout => mul_ln1273_63_fu_1519_p2);

    mul_32s_31ns_48_1_1_U136 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_43_read_reg_2107,
        din1 => mul_ln1273_64_fu_1550_p1,
        dout => mul_ln1273_64_fu_1550_p2);

    mul_32s_31ns_48_1_1_U137 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_44_read_reg_2117,
        din1 => mul_ln1273_65_fu_1581_p1,
        dout => mul_ln1273_65_fu_1581_p2);

    mul_32s_31ns_48_1_1_U138 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_45_read_reg_2127,
        din1 => mul_ln1273_66_fu_1612_p1,
        dout => mul_ln1273_66_fu_1612_p2);

    mul_32s_31ns_48_1_1_U139 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_46_read_reg_2137,
        din1 => mul_ln1273_67_fu_1643_p1,
        dout => mul_ln1273_67_fu_1643_p2);

    mul_32s_31ns_48_1_1_U140 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_47_read_reg_2147,
        din1 => mul_ln1273_68_fu_1674_p1,
        dout => mul_ln1273_68_fu_1674_p2);

    mul_32s_31ns_48_1_1_U141 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_48_read_reg_2157,
        din1 => mul_ln1273_69_fu_1705_p1,
        dout => mul_ln1273_69_fu_1705_p2);

    mul_32s_31ns_48_1_1_U142 : component cnn_top_mul_32s_31ns_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        din0 => gmem1_addr_49_read_reg_2167,
        din1 => mul_ln1273_70_fu_1736_p1,
        dout => mul_ln1273_70_fu_1736_p2);

    flow_control_loop_pipe_sequential_init_U : component cnn_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage16,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage16) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_fu_146 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
                i_fu_146 <= add_ln52_fu_1475_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_34_read_reg_1967 <= m_axi_gmem1_RDATA;
                gmem1_addr_42_reg_1972 <= sext_ln1273_100_fu_955_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_547_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem1_addr_34_reg_1894 <= sext_ln1273_fu_581_p1;
                gmem1_addr_reg_1900 <= sext_ln813_fu_607_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_35_read_reg_1978 <= m_axi_gmem1_RDATA;
                gmem1_addr_43_reg_1988 <= sext_ln1273_101_fu_1015_p1;
                tmp_reg_1983 <= mul_ln1273_fu_968_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_35_reg_1912 <= sext_ln1273_93_fu_653_p1;
                    zext_ln1273_35_reg_1906(3 downto 0) <= zext_ln1273_35_fu_617_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_36_read_reg_1994 <= m_axi_gmem1_RDATA;
                gmem1_addr_44_reg_2004 <= sext_ln1273_102_fu_1092_p1;
                tmp_s_reg_1999 <= add_ln1347_fu_1040_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_36_reg_1918 <= sext_ln1273_94_fu_695_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_37_read_reg_2010 <= m_axi_gmem1_RDATA;
                gmem1_addr_45_reg_2020 <= sext_ln1273_103_fu_1169_p1;
                tmp_63_reg_2015 <= add_ln1347_55_fu_1117_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_37_reg_1931 <= sext_ln1273_95_fu_741_p1;
                    trunc_ln58_cast5_reg_1924(3 downto 0) <= trunc_ln58_cast5_fu_705_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_38_read_reg_2033 <= m_axi_gmem1_RDATA;
                gmem1_addr_46_reg_2043 <= sext_ln1273_104_fu_1246_p1;
                tmp_64_reg_2038 <= add_ln1347_56_fu_1197_p2(47 downto 16);
                    zext_ln1273_reg_2026(3 downto 0) <= zext_ln1273_fu_1179_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_38_reg_1937 <= sext_ln1273_96_fu_783_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_39_read_reg_2049 <= m_axi_gmem1_RDATA;
                gmem1_addr_47_reg_2059 <= sext_ln1273_105_fu_1319_p1;
                tmp_66_reg_2054 <= add_ln1347_57_fu_1271_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_39_reg_1943 <= sext_ln1273_97_fu_829_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_40_read_reg_2065 <= m_axi_gmem1_RDATA;
                gmem1_addr_48_reg_2075 <= sext_ln1273_106_fu_1392_p1;
                gmem1_addr_49_reg_2081 <= sext_ln1273_107_fu_1434_p1;
                tmp_67_reg_2070 <= add_ln1347_58_fu_1344_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_40_reg_1955 <= sext_ln1273_98_fu_875_p1;
                    zext_ln1273_34_reg_1949(3 downto 0) <= zext_ln1273_34_fu_839_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_41_read_reg_2087 <= m_axi_gmem1_RDATA;
                tmp_68_reg_2092 <= add_ln1347_59_fu_1459_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_41_reg_1961 <= sext_ln1273_99_fu_917_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then
                gmem1_addr_42_read_reg_2097 <= m_axi_gmem1_RDATA;
                tmp_69_reg_2102 <= add_ln1347_60_fu_1495_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem1_addr_43_read_reg_2107 <= m_axi_gmem1_RDATA;
                i_5_reg_1879 <= ap_sig_allocacmp_i_5;
                i_5_reg_1879_pp0_iter1_reg <= i_5_reg_1879;
                icmp_ln52_reg_1890 <= icmp_ln52_fu_547_p2;
                tmp_70_reg_2112 <= add_ln1347_61_fu_1531_p2(47 downto 16);
                    zext_ln1271_31_cast_reg_1869(30 downto 0) <= zext_ln1271_31_cast_fu_531_p1(30 downto 0);
                    zext_ln1271_32_cast_reg_1864(30 downto 0) <= zext_ln1271_32_cast_fu_527_p1(30 downto 0);
                    zext_ln1271_33_cast_reg_1859(30 downto 0) <= zext_ln1271_33_cast_fu_523_p1(30 downto 0);
                    zext_ln1271_34_cast_reg_1854(30 downto 0) <= zext_ln1271_34_cast_fu_519_p1(30 downto 0);
                    zext_ln1271_35_cast_reg_1849(30 downto 0) <= zext_ln1271_35_cast_fu_515_p1(30 downto 0);
                    zext_ln1271_36_cast_reg_1844(30 downto 0) <= zext_ln1271_36_cast_fu_511_p1(30 downto 0);
                    zext_ln1271_37_cast_reg_1839(30 downto 0) <= zext_ln1271_37_cast_fu_507_p1(30 downto 0);
                    zext_ln1271_38_cast_reg_1834(30 downto 0) <= zext_ln1271_38_cast_fu_503_p1(30 downto 0);
                    zext_ln1271_39_cast_reg_1829(30 downto 0) <= zext_ln1271_39_cast_fu_499_p1(30 downto 0);
                    zext_ln1271_40_cast_reg_1824(30 downto 0) <= zext_ln1271_40_cast_fu_495_p1(30 downto 0);
                    zext_ln1271_41_cast_reg_1819(30 downto 0) <= zext_ln1271_41_cast_fu_491_p1(30 downto 0);
                    zext_ln1271_42_cast_reg_1814(30 downto 0) <= zext_ln1271_42_cast_fu_487_p1(30 downto 0);
                    zext_ln1271_43_cast_reg_1809(30 downto 0) <= zext_ln1271_43_cast_fu_483_p1(30 downto 0);
                    zext_ln1271_44_cast_reg_1804(30 downto 0) <= zext_ln1271_44_cast_fu_479_p1(30 downto 0);
                    zext_ln1271_cast_reg_1874(30 downto 0) <= zext_ln1271_cast_fu_535_p1(30 downto 0);
                    zext_ln52_cast_reg_1799(30 downto 0) <= zext_ln52_cast_fu_475_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gmem1_addr_44_read_reg_2117 <= m_axi_gmem1_RDATA;
                tmp_72_reg_2122 <= add_ln1347_62_fu_1562_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                gmem1_addr_45_read_reg_2127 <= m_axi_gmem1_RDATA;
                tmp_74_reg_2132 <= add_ln1347_63_fu_1593_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                gmem1_addr_46_read_reg_2137 <= m_axi_gmem1_RDATA;
                tmp_75_reg_2142 <= add_ln1347_64_fu_1624_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                gmem1_addr_47_read_reg_2147 <= m_axi_gmem1_RDATA;
                tmp_76_reg_2152 <= add_ln1347_65_fu_1655_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                gmem1_addr_48_read_reg_2157 <= m_axi_gmem1_RDATA;
                tmp_77_reg_2162 <= add_ln1347_66_fu_1686_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                gmem1_addr_49_read_reg_2167 <= m_axi_gmem1_RDATA;
                tmp_78_reg_2172 <= add_ln1347_67_fu_1717_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                gmem1_addr_read_reg_2182 <= m_axi_gmem1_RDATA;
                trunc_ln818_s_reg_2177 <= add_ln1347_68_fu_1748_p2(47 downto 16);
            end if;
        end if;
    end process;
    zext_ln52_cast_reg_1799(47 downto 31) <= "00000000000000000";
    zext_ln1271_44_cast_reg_1804(47 downto 31) <= "00000000000000000";
    zext_ln1271_43_cast_reg_1809(47 downto 31) <= "00000000000000000";
    zext_ln1271_42_cast_reg_1814(47 downto 31) <= "00000000000000000";
    zext_ln1271_41_cast_reg_1819(47 downto 31) <= "00000000000000000";
    zext_ln1271_40_cast_reg_1824(47 downto 31) <= "00000000000000000";
    zext_ln1271_39_cast_reg_1829(47 downto 31) <= "00000000000000000";
    zext_ln1271_38_cast_reg_1834(47 downto 31) <= "00000000000000000";
    zext_ln1271_37_cast_reg_1839(47 downto 31) <= "00000000000000000";
    zext_ln1271_36_cast_reg_1844(47 downto 31) <= "00000000000000000";
    zext_ln1271_35_cast_reg_1849(47 downto 31) <= "00000000000000000";
    zext_ln1271_34_cast_reg_1854(47 downto 31) <= "00000000000000000";
    zext_ln1271_33_cast_reg_1859(47 downto 31) <= "00000000000000000";
    zext_ln1271_32_cast_reg_1864(47 downto 31) <= "00000000000000000";
    zext_ln1271_31_cast_reg_1869(47 downto 31) <= "00000000000000000";
    zext_ln1271_cast_reg_1874(47 downto 31) <= "00000000000000000";
    zext_ln1273_35_reg_1906(4) <= '0';
    trunc_ln58_cast5_reg_1924(5 downto 4) <= "00";
    zext_ln1273_34_reg_1949(6 downto 4) <= "000";
    zext_ln1273_reg_2026(7 downto 4) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage16_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1273_10_fu_1077_p2 <= std_logic_vector(unsigned(zext_ln1273_46_fu_1073_p1) + unsigned(weight));
    add_ln1273_11_fu_1154_p2 <= std_logic_vector(unsigned(zext_ln1273_47_fu_1150_p1) + unsigned(weight));
    add_ln1273_12_fu_1231_p2 <= std_logic_vector(unsigned(zext_ln1273_48_fu_1227_p1) + unsigned(weight));
    add_ln1273_13_fu_1304_p2 <= std_logic_vector(unsigned(zext_ln1273_49_fu_1300_p1) + unsigned(weight));
    add_ln1273_14_fu_1377_p2 <= std_logic_vector(unsigned(zext_ln1273_50_fu_1373_p1) + unsigned(weight));
    add_ln1273_15_fu_1419_p2 <= std_logic_vector(unsigned(zext_ln1273_51_fu_1415_p1) + unsigned(weight));
    add_ln1273_1_fu_638_p2 <= std_logic_vector(unsigned(zext_ln1273_37_fu_634_p1) + unsigned(weight));
    add_ln1273_2_fu_680_p2 <= std_logic_vector(unsigned(zext_ln1273_38_fu_676_p1) + unsigned(weight));
    add_ln1273_33_fu_620_p2 <= std_logic_vector(unsigned(zext_ln1273_35_fu_617_p1) + unsigned(ap_const_lv5_A));
    add_ln1273_34_fu_663_p2 <= std_logic_vector(unsigned(zext_ln1273_35_reg_1906) + unsigned(ap_const_lv5_14));
    add_ln1273_35_fu_708_p2 <= std_logic_vector(unsigned(trunc_ln58_cast5_fu_705_p1) + unsigned(ap_const_lv6_1E));
    add_ln1273_36_fu_751_p2 <= std_logic_vector(unsigned(trunc_ln58_cast5_reg_1924) + unsigned(ap_const_lv6_28));
    add_ln1273_37_fu_793_p2 <= std_logic_vector(unsigned(zext_ln1273_35_reg_1906) + unsigned(ap_const_lv5_12));
    add_ln1273_38_fu_842_p2 <= std_logic_vector(unsigned(zext_ln1273_34_fu_839_p1) + unsigned(ap_const_lv7_3C));
    add_ln1273_39_fu_885_p2 <= std_logic_vector(unsigned(zext_ln1273_34_reg_1949) + unsigned(ap_const_lv7_46));
    add_ln1273_3_fu_726_p2 <= std_logic_vector(unsigned(zext_ln1273_39_fu_722_p1) + unsigned(weight));
    add_ln1273_40_fu_983_p2 <= std_logic_vector(unsigned(zext_ln1273_34_reg_1949) + unsigned(ap_const_lv7_5A));
    add_ln1273_41_fu_1056_p2 <= std_logic_vector(unsigned(trunc_ln58_cast5_reg_1924) + unsigned(ap_const_lv6_24));
    add_ln1273_42_fu_1133_p2 <= std_logic_vector(unsigned(trunc_ln58_cast5_reg_1924) + unsigned(ap_const_lv6_2E));
    add_ln1273_43_fu_1213_p2 <= std_logic_vector(unsigned(zext_ln1273_fu_1179_p1) + unsigned(ap_const_lv8_78));
    add_ln1273_44_fu_1287_p2 <= std_logic_vector(unsigned(zext_ln1273_reg_2026) + unsigned(ap_const_lv8_82));
    add_ln1273_45_fu_1360_p2 <= std_logic_vector(unsigned(zext_ln1273_reg_2026) + unsigned(ap_const_lv8_8C));
    add_ln1273_46_fu_1402_p2 <= std_logic_vector(unsigned(zext_ln1273_reg_2026) + unsigned(ap_const_lv8_96));
    add_ln1273_4_fu_768_p2 <= std_logic_vector(unsigned(zext_ln1273_40_fu_764_p1) + unsigned(weight));
    add_ln1273_5_fu_814_p2 <= std_logic_vector(unsigned(zext_ln1273_41_fu_810_p1) + unsigned(weight));
    add_ln1273_6_fu_860_p2 <= std_logic_vector(unsigned(zext_ln1273_42_fu_856_p1) + unsigned(weight));
    add_ln1273_7_fu_902_p2 <= std_logic_vector(unsigned(zext_ln1273_43_fu_898_p1) + unsigned(weight));
    add_ln1273_8_fu_940_p2 <= std_logic_vector(unsigned(zext_ln1273_44_fu_936_p1) + unsigned(weight));
    add_ln1273_9_fu_1000_p2 <= std_logic_vector(unsigned(zext_ln1273_45_fu_996_p1) + unsigned(weight));
    add_ln1273_fu_565_p2 <= std_logic_vector(unsigned(zext_ln1273_36_fu_561_p1) + unsigned(weight));
    add_ln1347_55_fu_1117_p2 <= std_logic_vector(unsigned(shl_ln838_s_fu_1110_p3) + unsigned(mul_ln1273_57_fu_1105_p2));
    add_ln1347_56_fu_1197_p2 <= std_logic_vector(unsigned(shl_ln838_53_fu_1190_p3) + unsigned(mul_ln1273_58_fu_1185_p2));
    add_ln1347_57_fu_1271_p2 <= std_logic_vector(unsigned(shl_ln838_54_fu_1264_p3) + unsigned(mul_ln1273_59_fu_1259_p2));
    add_ln1347_58_fu_1344_p2 <= std_logic_vector(unsigned(shl_ln838_55_fu_1337_p3) + unsigned(mul_ln1273_60_fu_1332_p2));
    add_ln1347_59_fu_1459_p2 <= std_logic_vector(unsigned(shl_ln838_56_fu_1452_p3) + unsigned(mul_ln1273_61_fu_1447_p2));
    add_ln1347_60_fu_1495_p2 <= std_logic_vector(unsigned(shl_ln838_57_fu_1488_p3) + unsigned(mul_ln1273_62_fu_1483_p2));
    add_ln1347_61_fu_1531_p2 <= std_logic_vector(unsigned(shl_ln838_58_fu_1524_p3) + unsigned(mul_ln1273_63_fu_1519_p2));
    add_ln1347_62_fu_1562_p2 <= std_logic_vector(unsigned(shl_ln838_59_fu_1555_p3) + unsigned(mul_ln1273_64_fu_1550_p2));
    add_ln1347_63_fu_1593_p2 <= std_logic_vector(unsigned(shl_ln838_60_fu_1586_p3) + unsigned(mul_ln1273_65_fu_1581_p2));
    add_ln1347_64_fu_1624_p2 <= std_logic_vector(unsigned(shl_ln838_61_fu_1617_p3) + unsigned(mul_ln1273_66_fu_1612_p2));
    add_ln1347_65_fu_1655_p2 <= std_logic_vector(unsigned(shl_ln838_62_fu_1648_p3) + unsigned(mul_ln1273_67_fu_1643_p2));
    add_ln1347_66_fu_1686_p2 <= std_logic_vector(unsigned(shl_ln838_63_fu_1679_p3) + unsigned(mul_ln1273_68_fu_1674_p2));
    add_ln1347_67_fu_1717_p2 <= std_logic_vector(unsigned(shl_ln838_64_fu_1710_p3) + unsigned(mul_ln1273_69_fu_1705_p2));
    add_ln1347_68_fu_1748_p2 <= std_logic_vector(unsigned(shl_ln838_65_fu_1741_p3) + unsigned(mul_ln1273_70_fu_1736_p2));
    add_ln1347_fu_1040_p2 <= std_logic_vector(unsigned(shl_ln2_fu_1033_p3) + unsigned(mul_ln1273_56_fu_1028_p2));
    add_ln52_fu_1475_p2 <= std_logic_vector(unsigned(i_5_reg_1879) + unsigned(ap_const_lv4_1));
    add_ln813_fu_591_p2 <= std_logic_vector(unsigned(zext_ln1273_36_fu_561_p1) + unsigned(bias));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_ARREADY, m_axi_gmem1_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem1_RVALID = ap_const_logic_0) or (m_axi_gmem1_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_ARREADY, m_axi_gmem1_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem1_RVALID = ap_const_logic_0) or (m_axi_gmem1_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem1_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0))));
    end process;


    ap_block_state10_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state10_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state11_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state11_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state12_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state12_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state13_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state13_pp0_stage12_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state14_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state14_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state15_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state15_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state15_pp0_stage14_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state16_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state16_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state16_pp0_stage15_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state17_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state17_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state17_pp0_stage16_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage0_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state18_pp0_stage0_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;


    ap_block_state19_pp0_stage1_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state19_pp0_stage1_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage2_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state20_pp0_stage2_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;


    ap_block_state21_pp0_stage3_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state21_pp0_stage3_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;


    ap_block_state22_pp0_stage4_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state22_pp0_stage4_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;


    ap_block_state23_pp0_stage5_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state23_pp0_stage5_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;


    ap_block_state24_pp0_stage6_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state24_pp0_stage6_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;


    ap_block_state25_pp0_stage7_iter1_assign_proc : process(m_axi_gmem1_RVALID)
    begin
                ap_block_state25_pp0_stage7_iter1 <= (m_axi_gmem1_RVALID = ap_const_logic_0);
    end process;

        ap_block_state26_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state2_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state3_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state4_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state5_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;

        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state6_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state7_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state8_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(m_axi_gmem1_ARREADY, icmp_ln52_reg_1890)
    begin
                ap_block_state9_io <= ((m_axi_gmem1_ARREADY = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(m_axi_gmem1_RVALID, icmp_ln52_reg_1890)
    begin
                ap_block_state9_pp0_stage8_iter0 <= ((m_axi_gmem1_RVALID = ap_const_logic_0) and (icmp_ln52_reg_1890 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage16_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, icmp_ln52_reg_1890, ap_block_pp0_stage16_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone) and (icmp_ln52_reg_1890 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage16 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage16;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_146, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i_5 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_5 <= i_fu_146;
        end if; 
    end process;


    gmem1_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, m_axi_gmem1_ARREADY, icmp_ln52_reg_1890, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln52_reg_1890 = ap_const_lv1_0)))) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, m_axi_gmem1_RVALID, icmp_ln52_reg_1890, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln52_reg_1890 = ap_const_lv1_0)))) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln52_fu_547_p2 <= "1" when (ap_sig_allocacmp_i_5 = ap_const_lv4_A) else "0";

    m_axi_gmem1_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, icmp_ln52_reg_1890, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0_11001, gmem1_addr_34_reg_1894, gmem1_addr_reg_1900, ap_block_pp0_stage1_11001, gmem1_addr_35_reg_1912, gmem1_addr_36_reg_1918, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, gmem1_addr_37_reg_1931, gmem1_addr_38_reg_1937, ap_block_pp0_stage4_11001, gmem1_addr_39_reg_1943, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, gmem1_addr_40_reg_1955, gmem1_addr_41_reg_1961, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, gmem1_addr_42_reg_1972, ap_block_pp0_stage9_11001, gmem1_addr_43_reg_1988, ap_block_pp0_stage10_11001, gmem1_addr_44_reg_2004, ap_block_pp0_stage11_11001, gmem1_addr_45_reg_2020, ap_block_pp0_stage12_11001, gmem1_addr_46_reg_2043, ap_block_pp0_stage13_11001, gmem1_addr_47_reg_2059, ap_block_pp0_stage14_11001, gmem1_addr_48_reg_2075, gmem1_addr_49_reg_2081, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_reg_1900;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_49_reg_2081;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_48_reg_2075;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_47_reg_2059;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_46_reg_2043;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_45_reg_2020;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_44_reg_2004;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_43_reg_1988;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_42_reg_1972;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_41_reg_1961;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_40_reg_1955;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_39_reg_1943;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_38_reg_1937;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_37_reg_1931;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_36_reg_1918;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_35_reg_1912;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0))) then 
            m_axi_gmem1_ARADDR <= gmem1_addr_34_reg_1894;
        else 
            m_axi_gmem1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem1_ARBURST <= ap_const_lv2_0;
    m_axi_gmem1_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem1_ARID <= ap_const_lv1_0;
    m_axi_gmem1_ARLEN <= ap_const_lv32_1;
    m_axi_gmem1_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem1_ARPROT <= ap_const_lv3_0;
    m_axi_gmem1_ARQOS <= ap_const_lv4_0;
    m_axi_gmem1_ARREGION <= ap_const_lv4_0;
    m_axi_gmem1_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem1_ARUSER <= ap_const_lv1_0;

    m_axi_gmem1_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, icmp_ln52_reg_1890, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)))) then 
            m_axi_gmem1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;

    m_axi_gmem1_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, icmp_ln52_reg_1890, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln52_reg_1890 = ap_const_lv1_0)))) then 
            m_axi_gmem1_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_WDATA <= ap_const_lv32_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    mul_ln1273_56_fu_1028_p1 <= zext_ln1271_31_cast_reg_1869(31 - 1 downto 0);
    mul_ln1273_57_fu_1105_p1 <= zext_ln1271_32_cast_reg_1864(31 - 1 downto 0);
    mul_ln1273_58_fu_1185_p1 <= zext_ln1271_33_cast_reg_1859(31 - 1 downto 0);
    mul_ln1273_59_fu_1259_p1 <= zext_ln1271_34_cast_reg_1854(31 - 1 downto 0);
    mul_ln1273_60_fu_1332_p1 <= zext_ln1271_35_cast_reg_1849(31 - 1 downto 0);
    mul_ln1273_61_fu_1447_p1 <= zext_ln1271_36_cast_reg_1844(31 - 1 downto 0);
    mul_ln1273_62_fu_1483_p1 <= zext_ln1271_37_cast_reg_1839(31 - 1 downto 0);
    mul_ln1273_63_fu_1519_p1 <= zext_ln1271_38_cast_reg_1834(31 - 1 downto 0);
    mul_ln1273_64_fu_1550_p1 <= zext_ln1271_39_cast_reg_1829(31 - 1 downto 0);
    mul_ln1273_65_fu_1581_p1 <= zext_ln1271_40_cast_reg_1824(31 - 1 downto 0);
    mul_ln1273_66_fu_1612_p1 <= zext_ln1271_41_cast_reg_1819(31 - 1 downto 0);
    mul_ln1273_67_fu_1643_p1 <= zext_ln1271_42_cast_reg_1814(31 - 1 downto 0);
    mul_ln1273_68_fu_1674_p1 <= zext_ln1271_43_cast_reg_1809(31 - 1 downto 0);
    mul_ln1273_69_fu_1705_p1 <= zext_ln1271_44_cast_reg_1804(31 - 1 downto 0);
    mul_ln1273_70_fu_1736_p1 <= zext_ln52_cast_reg_1799(31 - 1 downto 0);
    mul_ln1273_fu_968_p1 <= zext_ln1271_cast_reg_1874(31 - 1 downto 0);
    out_Dense_V_address0 <= trunc_ln58_cast6_fu_1764_p1(4 - 1 downto 0);

    out_Dense_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
            out_Dense_V_ce0 <= ap_const_logic_1;
        else 
            out_Dense_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_Dense_V_d0 <= std_logic_vector(unsigned(gmem1_addr_read_reg_2182) + unsigned(trunc_ln818_s_reg_2177));

    out_Dense_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
            out_Dense_V_we0 <= ap_const_logic_1;
        else 
            out_Dense_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln1273_100_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_38_fu_945_p4),64));

        sext_ln1273_101_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_39_fu_1005_p4),64));

        sext_ln1273_102_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_40_fu_1082_p4),64));

        sext_ln1273_103_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_41_fu_1159_p4),64));

        sext_ln1273_104_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_42_fu_1236_p4),64));

        sext_ln1273_105_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_43_fu_1309_p4),64));

        sext_ln1273_106_fu_1392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_44_fu_1382_p4),64));

        sext_ln1273_107_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_45_fu_1424_p4),64));

        sext_ln1273_122_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_fu_798_p3),8));

        sext_ln1273_128_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_71_fu_1061_p3),9));

        sext_ln1273_130_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_73_fu_1138_p3),9));

        sext_ln1273_93_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_s_fu_643_p4),64));

        sext_ln1273_94_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_32_fu_685_p4),64));

        sext_ln1273_95_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_33_fu_731_p4),64));

        sext_ln1273_96_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_34_fu_773_p4),64));

        sext_ln1273_97_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_35_fu_819_p4),64));

        sext_ln1273_98_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_36_fu_865_p4),64));

        sext_ln1273_99_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1273_37_fu_907_p4),64));

        sext_ln1273_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_571_p4),64));

        sext_ln813_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln813_2_fu_597_p4),64));

    shl_ln1273_10_fu_1407_p3 <= (add_ln1273_46_fu_1402_p2 & ap_const_lv2_0);
    shl_ln1273_1_fu_668_p3 <= (add_ln1273_34_fu_663_p2 & ap_const_lv2_0);
    shl_ln1273_2_fu_714_p3 <= (add_ln1273_35_fu_708_p2 & ap_const_lv2_0);
    shl_ln1273_3_fu_756_p3 <= (add_ln1273_36_fu_751_p2 & ap_const_lv2_0);
    shl_ln1273_4_fu_848_p3 <= (add_ln1273_38_fu_842_p2 & ap_const_lv2_0);
    shl_ln1273_5_fu_890_p3 <= (add_ln1273_39_fu_885_p2 & ap_const_lv2_0);
    shl_ln1273_6_fu_988_p3 <= (add_ln1273_40_fu_983_p2 & ap_const_lv2_0);
    shl_ln1273_7_fu_1219_p3 <= (add_ln1273_43_fu_1213_p2 & ap_const_lv2_0);
    shl_ln1273_8_fu_1292_p3 <= (add_ln1273_44_fu_1287_p2 & ap_const_lv2_0);
    shl_ln1273_9_fu_1365_p3 <= (add_ln1273_45_fu_1360_p2 & ap_const_lv2_0);
    shl_ln1273_s_fu_626_p3 <= (add_ln1273_33_fu_620_p2 & ap_const_lv2_0);
    shl_ln2_fu_1033_p3 <= (tmp_reg_1983 & ap_const_lv16_0);
    shl_ln838_53_fu_1190_p3 <= (tmp_63_reg_2015 & ap_const_lv16_0);
    shl_ln838_54_fu_1264_p3 <= (tmp_64_reg_2038 & ap_const_lv16_0);
    shl_ln838_55_fu_1337_p3 <= (tmp_66_reg_2054 & ap_const_lv16_0);
    shl_ln838_56_fu_1452_p3 <= (tmp_67_reg_2070 & ap_const_lv16_0);
    shl_ln838_57_fu_1488_p3 <= (tmp_68_reg_2092 & ap_const_lv16_0);
    shl_ln838_58_fu_1524_p3 <= (tmp_69_reg_2102 & ap_const_lv16_0);
    shl_ln838_59_fu_1555_p3 <= (tmp_70_reg_2112 & ap_const_lv16_0);
    shl_ln838_60_fu_1586_p3 <= (tmp_72_reg_2122 & ap_const_lv16_0);
    shl_ln838_61_fu_1617_p3 <= (tmp_74_reg_2132 & ap_const_lv16_0);
    shl_ln838_62_fu_1648_p3 <= (tmp_75_reg_2142 & ap_const_lv16_0);
    shl_ln838_63_fu_1679_p3 <= (tmp_76_reg_2152 & ap_const_lv16_0);
    shl_ln838_64_fu_1710_p3 <= (tmp_77_reg_2162 & ap_const_lv16_0);
    shl_ln838_65_fu_1741_p3 <= (tmp_78_reg_2172 & ap_const_lv16_0);
    shl_ln838_s_fu_1110_p3 <= (tmp_s_reg_1999 & ap_const_lv16_0);
    shl_ln_fu_553_p3 <= (ap_sig_allocacmp_i_5 & ap_const_lv2_0);
    tmp_65_fu_798_p3 <= (add_ln1273_37_fu_793_p2 & ap_const_lv2_0);
    tmp_71_fu_1061_p3 <= (add_ln1273_41_fu_1056_p2 & ap_const_lv2_0);
    tmp_73_fu_1138_p3 <= (add_ln1273_42_fu_1133_p2 & ap_const_lv2_0);
    trunc_ln1273_32_fu_685_p4 <= add_ln1273_2_fu_680_p2(63 downto 2);
    trunc_ln1273_33_fu_731_p4 <= add_ln1273_3_fu_726_p2(63 downto 2);
    trunc_ln1273_34_fu_773_p4 <= add_ln1273_4_fu_768_p2(63 downto 2);
    trunc_ln1273_35_fu_819_p4 <= add_ln1273_5_fu_814_p2(63 downto 2);
    trunc_ln1273_36_fu_865_p4 <= add_ln1273_6_fu_860_p2(63 downto 2);
    trunc_ln1273_37_fu_907_p4 <= add_ln1273_7_fu_902_p2(63 downto 2);
    trunc_ln1273_38_fu_945_p4 <= add_ln1273_8_fu_940_p2(63 downto 2);
    trunc_ln1273_39_fu_1005_p4 <= add_ln1273_9_fu_1000_p2(63 downto 2);
    trunc_ln1273_40_fu_1082_p4 <= add_ln1273_10_fu_1077_p2(63 downto 2);
    trunc_ln1273_41_fu_1159_p4 <= add_ln1273_11_fu_1154_p2(63 downto 2);
    trunc_ln1273_42_fu_1236_p4 <= add_ln1273_12_fu_1231_p2(63 downto 2);
    trunc_ln1273_43_fu_1309_p4 <= add_ln1273_13_fu_1304_p2(63 downto 2);
    trunc_ln1273_44_fu_1382_p4 <= add_ln1273_14_fu_1377_p2(63 downto 2);
    trunc_ln1273_45_fu_1424_p4 <= add_ln1273_15_fu_1419_p2(63 downto 2);
    trunc_ln1273_s_fu_643_p4 <= add_ln1273_1_fu_638_p2(63 downto 2);
    trunc_ln58_cast5_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_1879),6));
    trunc_ln58_cast6_fu_1764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_1879_pp0_iter1_reg),64));
    trunc_ln813_2_fu_597_p4 <= add_ln813_fu_591_p2(63 downto 2);
    trunc_ln_fu_571_p4 <= add_ln1273_fu_565_p2(63 downto 2);
    zext_ln1271_31_cast_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_31),48));
    zext_ln1271_32_cast_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_32),48));
    zext_ln1271_33_cast_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_33),48));
    zext_ln1271_34_cast_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_34),48));
    zext_ln1271_35_cast_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_35),48));
    zext_ln1271_36_cast_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_36),48));
    zext_ln1271_37_cast_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_37),48));
    zext_ln1271_38_cast_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_38),48));
    zext_ln1271_39_cast_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_39),48));
    zext_ln1271_40_cast_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_40),48));
    zext_ln1271_41_cast_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_41),48));
    zext_ln1271_42_cast_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_42),48));
    zext_ln1271_43_cast_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_43),48));
    zext_ln1271_44_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271_44),48));
    zext_ln1271_cast_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1271),48));
    zext_ln1273_34_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_1879),7));
    zext_ln1273_35_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_1879),5));
    zext_ln1273_36_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_553_p3),64));
    zext_ln1273_37_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_s_fu_626_p3),64));
    zext_ln1273_38_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_1_fu_668_p3),64));
    zext_ln1273_39_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_2_fu_714_p3),64));
    zext_ln1273_40_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_3_fu_756_p3),64));
    zext_ln1273_41_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1273_122_fu_806_p1),64));
    zext_ln1273_42_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_4_fu_848_p3),64));
    zext_ln1273_43_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_5_fu_890_p3),64));
    zext_ln1273_44_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1273_46_cast_fu_927_p4),64));
    zext_ln1273_45_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_6_fu_988_p3),64));
    zext_ln1273_46_cast_fu_927_p4 <= ((ap_const_lv3_5 & i_5_reg_1879) & ap_const_lv2_0);
    zext_ln1273_46_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1273_128_fu_1069_p1),64));
    zext_ln1273_47_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1273_130_fu_1146_p1),64));
    zext_ln1273_48_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_7_fu_1219_p3),64));
    zext_ln1273_49_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_8_fu_1292_p3),64));
    zext_ln1273_50_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_9_fu_1365_p3),64));
    zext_ln1273_51_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_10_fu_1407_p3),64));
    zext_ln1273_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_1879),8));
    zext_ln52_cast_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln52),48));
end behav;
