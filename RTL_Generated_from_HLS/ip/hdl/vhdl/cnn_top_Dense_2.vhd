-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_Dense_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_Dense_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_Dense_ce0 : OUT STD_LOGIC;
    input_Dense_q0 : IN STD_LOGIC_VECTOR (30 downto 0);
    input_Dense_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_Dense_ce1 : OUT STD_LOGIC;
    input_Dense_q1 : IN STD_LOGIC_VECTOR (30 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    bias : IN STD_LOGIC_VECTOR (63 downto 0);
    weight : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cnn_top_Dense_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_Dense_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal input_Dense_load_reg_397 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal input_Dense_load_1_reg_402 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_load_2_reg_417 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal input_Dense_load_3_reg_422 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_load_4_reg_437 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal input_Dense_load_5_reg_442 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_load_6_reg_457 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal input_Dense_load_7_reg_462 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_load_8_reg_477 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal input_Dense_load_9_reg_482 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_load_10_reg_497 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal input_Dense_load_11_reg_502 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_load_12_reg_517 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal input_Dense_load_13_reg_522 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal input_Dense_load_14_reg_547 : STD_LOGIC_VECTOR (30 downto 0);
    signal input_Dense_load_15_reg_552 : STD_LOGIC_VECTOR (30 downto 0);
    signal out_Dense_V_addr_reg_557 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_Dense_V_ce0 : STD_LOGIC;
    signal out_Dense_V_we0 : STD_LOGIC;
    signal out_Dense_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_Dense_V_ce1 : STD_LOGIC;
    signal out_Dense_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_done : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_idle : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_ready : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_ce0 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_we0 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_ap_done : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_ap_idle : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_ap_ready : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_ce0 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_maxindex_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_maxindex_out_ap_vld : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_done : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_idle : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_ready : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_ce0 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_p_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_p_out_ap_vld : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_din1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_start : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_done : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_idle : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_ready : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce0 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_we0 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce1 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_din1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_start : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_done : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_idle : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_ready : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_ce0 : STD_LOGIC;
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_maxindex_2_V_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_maxindex_2_V_out_ap_vld : STD_LOGIC;
    signal grp_exp_33_17_s_fu_570_ap_start : STD_LOGIC;
    signal grp_exp_33_17_s_fu_570_ap_done : STD_LOGIC;
    signal grp_exp_33_17_s_fu_570_ap_idle : STD_LOGIC;
    signal grp_exp_33_17_s_fu_570_ap_ready : STD_LOGIC;
    signal grp_exp_33_17_s_fu_570_x : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_exp_33_17_s_fu_570_ap_return : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal maxindex_loc_fu_84 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal idxprom40_fu_357_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_Dense_2_Pipeline_loop_for_a_Dense_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        weight : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln1271 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_31 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_32 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_33 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_34 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_35 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_36 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_37 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_38 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_39 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_40 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_41 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_42 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_43 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln1271_44 : IN STD_LOGIC_VECTOR (30 downto 0);
        zext_ln52 : IN STD_LOGIC_VECTOR (30 downto 0);
        bias : IN STD_LOGIC_VECTOR (63 downto 0);
        out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce0 : OUT STD_LOGIC;
        out_Dense_V_we0 : OUT STD_LOGIC;
        out_Dense_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_Dense_2_Pipeline_loop_detect IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_V : IN STD_LOGIC_VECTOR (31 downto 0);
        out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce0 : OUT STD_LOGIC;
        out_Dense_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        maxindex_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        maxindex_out_ap_vld : OUT STD_LOGIC );
    end component;


    component cnn_top_Dense_2_Pipeline_VITIS_LOOP_74_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce0 : OUT STD_LOGIC;
        out_Dense_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln813_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        grp_exp_33_17_s_fu_570_p_din1 : OUT STD_LOGIC_VECTOR (32 downto 0);
        grp_exp_33_17_s_fu_570_p_dout0 : IN STD_LOGIC_VECTOR (32 downto 0);
        grp_exp_33_17_s_fu_570_p_start : OUT STD_LOGIC;
        grp_exp_33_17_s_fu_570_p_ready : IN STD_LOGIC;
        grp_exp_33_17_s_fu_570_p_done : IN STD_LOGIC;
        grp_exp_33_17_s_fu_570_p_idle : IN STD_LOGIC );
    end component;


    component cnn_top_Dense_2_Pipeline_VITIS_LOOP_79_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce0 : OUT STD_LOGIC;
        out_Dense_V_we0 : OUT STD_LOGIC;
        out_Dense_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_Dense_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce1 : OUT STD_LOGIC;
        out_Dense_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln813_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_i : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_exp_33_17_s_fu_570_p_din1 : OUT STD_LOGIC_VECTOR (32 downto 0);
        grp_exp_33_17_s_fu_570_p_dout0 : IN STD_LOGIC_VECTOR (32 downto 0);
        grp_exp_33_17_s_fu_570_p_start : OUT STD_LOGIC;
        grp_exp_33_17_s_fu_570_p_ready : IN STD_LOGIC;
        grp_exp_33_17_s_fu_570_p_done : IN STD_LOGIC;
        grp_exp_33_17_s_fu_570_p_idle : IN STD_LOGIC );
    end component;


    component cnn_top_Dense_2_Pipeline_VITIS_LOOP_85_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_2_V : IN STD_LOGIC_VECTOR (31 downto 0);
        out_Dense_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_Dense_V_ce0 : OUT STD_LOGIC;
        out_Dense_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        maxindex_2_V_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        maxindex_2_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component cnn_top_exp_33_17_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (32 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component cnn_top_Dense_2_out_Dense_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    out_Dense_V_U : component cnn_top_Dense_2_out_Dense_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_Dense_V_address0,
        ce0 => out_Dense_V_ce0,
        we0 => out_Dense_V_we0,
        d0 => out_Dense_V_d0,
        q0 => out_Dense_V_q0,
        address1 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_address1,
        ce1 => out_Dense_V_ce1,
        q1 => out_Dense_V_q1);

    grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277 : component cnn_top_Dense_2_Pipeline_loop_for_a_Dense_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start,
        ap_done => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_done,
        ap_idle => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_idle,
        ap_ready => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_ready,
        m_axi_gmem1_AWVALID => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM => m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        weight => weight,
        zext_ln1271 => input_Dense_load_reg_397,
        zext_ln1271_31 => input_Dense_load_1_reg_402,
        zext_ln1271_32 => input_Dense_load_2_reg_417,
        zext_ln1271_33 => input_Dense_load_3_reg_422,
        zext_ln1271_34 => input_Dense_load_4_reg_437,
        zext_ln1271_35 => input_Dense_load_5_reg_442,
        zext_ln1271_36 => input_Dense_load_6_reg_457,
        zext_ln1271_37 => input_Dense_load_7_reg_462,
        zext_ln1271_38 => input_Dense_load_8_reg_477,
        zext_ln1271_39 => input_Dense_load_9_reg_482,
        zext_ln1271_40 => input_Dense_load_10_reg_497,
        zext_ln1271_41 => input_Dense_load_11_reg_502,
        zext_ln1271_42 => input_Dense_load_12_reg_517,
        zext_ln1271_43 => input_Dense_load_13_reg_522,
        zext_ln1271_44 => input_Dense_load_14_reg_547,
        zext_ln52 => input_Dense_load_15_reg_552,
        bias => bias,
        out_Dense_V_address0 => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_address0,
        out_Dense_V_ce0 => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_ce0,
        out_Dense_V_we0 => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_we0,
        out_Dense_V_d0 => grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_d0);

    grp_Dense_2_Pipeline_loop_detect_fu_306 : component cnn_top_Dense_2_Pipeline_loop_detect
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start,
        ap_done => grp_Dense_2_Pipeline_loop_detect_fu_306_ap_done,
        ap_idle => grp_Dense_2_Pipeline_loop_detect_fu_306_ap_idle,
        ap_ready => grp_Dense_2_Pipeline_loop_detect_fu_306_ap_ready,
        max_V => reg_346,
        out_Dense_V_address0 => grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_address0,
        out_Dense_V_ce0 => grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_ce0,
        out_Dense_V_q0 => out_Dense_V_q0,
        maxindex_out => grp_Dense_2_Pipeline_loop_detect_fu_306_maxindex_out,
        maxindex_out_ap_vld => grp_Dense_2_Pipeline_loop_detect_fu_306_maxindex_out_ap_vld);

    grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313 : component cnn_top_Dense_2_Pipeline_VITIS_LOOP_74_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start,
        ap_done => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_done,
        ap_idle => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_idle,
        ap_ready => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_ready,
        out_Dense_V_address0 => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_address0,
        out_Dense_V_ce0 => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_ce0,
        out_Dense_V_q0 => out_Dense_V_q0,
        sext_ln813_4 => reg_346,
        p_out => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_p_out,
        p_out_ap_vld => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_p_out_ap_vld,
        grp_exp_33_17_s_fu_570_p_din1 => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_din1,
        grp_exp_33_17_s_fu_570_p_dout0 => grp_exp_33_17_s_fu_570_ap_return,
        grp_exp_33_17_s_fu_570_p_start => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_start,
        grp_exp_33_17_s_fu_570_p_ready => grp_exp_33_17_s_fu_570_ap_ready,
        grp_exp_33_17_s_fu_570_p_done => grp_exp_33_17_s_fu_570_ap_done,
        grp_exp_33_17_s_fu_570_p_idle => grp_exp_33_17_s_fu_570_ap_idle);

    grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326 : component cnn_top_Dense_2_Pipeline_VITIS_LOOP_79_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start,
        ap_done => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_done,
        ap_idle => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_idle,
        ap_ready => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_ready,
        out_Dense_V_address0 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_address0,
        out_Dense_V_ce0 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce0,
        out_Dense_V_we0 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_we0,
        out_Dense_V_d0 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_d0,
        out_Dense_V_address1 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_address1,
        out_Dense_V_ce1 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce1,
        out_Dense_V_q1 => out_Dense_V_q1,
        sext_ln813_4 => reg_346,
        conv_i => grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_p_out,
        grp_exp_33_17_s_fu_570_p_din1 => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_din1,
        grp_exp_33_17_s_fu_570_p_dout0 => grp_exp_33_17_s_fu_570_ap_return,
        grp_exp_33_17_s_fu_570_p_start => grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_start,
        grp_exp_33_17_s_fu_570_p_ready => grp_exp_33_17_s_fu_570_ap_ready,
        grp_exp_33_17_s_fu_570_p_done => grp_exp_33_17_s_fu_570_ap_done,
        grp_exp_33_17_s_fu_570_p_idle => grp_exp_33_17_s_fu_570_ap_idle);

    grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339 : component cnn_top_Dense_2_Pipeline_VITIS_LOOP_85_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start,
        ap_done => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_done,
        ap_idle => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_idle,
        ap_ready => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_ready,
        max_2_V => reg_346,
        out_Dense_V_address0 => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_address0,
        out_Dense_V_ce0 => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_ce0,
        out_Dense_V_q0 => out_Dense_V_q0,
        maxindex_2_V_out => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_maxindex_2_V_out,
        maxindex_2_V_out_ap_vld => grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_maxindex_2_V_out_ap_vld);

    grp_exp_33_17_s_fu_570 : component cnn_top_exp_33_17_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_exp_33_17_s_fu_570_ap_start,
        ap_done => grp_exp_33_17_s_fu_570_ap_done,
        ap_idle => grp_exp_33_17_s_fu_570_ap_idle,
        ap_ready => grp_exp_33_17_s_fu_570_ap_ready,
        x => grp_exp_33_17_s_fu_570_x,
        ap_return => grp_exp_33_17_s_fu_570_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_ready = ap_const_logic_1)) then 
                    grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_ready = ap_const_logic_1)) then 
                    grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_ready = ap_const_logic_1)) then 
                    grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Dense_2_Pipeline_loop_detect_fu_306_ap_ready = ap_const_logic_1)) then 
                    grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_ready = ap_const_logic_1)) then 
                    grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                input_Dense_load_10_reg_497 <= input_Dense_q1;
                input_Dense_load_11_reg_502 <= input_Dense_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                input_Dense_load_12_reg_517 <= input_Dense_q1;
                input_Dense_load_13_reg_522 <= input_Dense_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                input_Dense_load_14_reg_547 <= input_Dense_q1;
                input_Dense_load_15_reg_552 <= input_Dense_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                input_Dense_load_1_reg_402 <= input_Dense_q0;
                input_Dense_load_reg_397 <= input_Dense_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                input_Dense_load_2_reg_417 <= input_Dense_q1;
                input_Dense_load_3_reg_422 <= input_Dense_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                input_Dense_load_4_reg_437 <= input_Dense_q1;
                input_Dense_load_5_reg_442 <= input_Dense_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                input_Dense_load_6_reg_457 <= input_Dense_q1;
                input_Dense_load_7_reg_462 <= input_Dense_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                input_Dense_load_8_reg_477 <= input_Dense_q1;
                input_Dense_load_9_reg_482 <= input_Dense_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_Dense_2_Pipeline_loop_detect_fu_306_maxindex_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                maxindex_loc_fu_84 <= grp_Dense_2_Pipeline_loop_detect_fu_306_maxindex_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_346 <= out_Dense_V_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_done, grp_Dense_2_Pipeline_loop_detect_fu_306_ap_done, grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_done, grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_done, grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_Dense_2_Pipeline_loop_detect_fu_306_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_done)
    begin
        if ((grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_Dense_2_Pipeline_loop_detect_fu_306_ap_done)
    begin
        if ((grp_Dense_2_Pipeline_loop_detect_fu_306_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_done)
    begin
        if ((grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_done)
    begin
        if ((grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_done)
    begin
        if ((grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_maxindex_2_V_out;
    grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start <= grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_ap_start_reg;
    grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_ap_start_reg;
    grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start <= grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_ap_start_reg;
    grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start <= grp_Dense_2_Pipeline_loop_detect_fu_306_ap_start_reg;
    grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_ap_start_reg;

    grp_exp_33_17_s_fu_570_ap_start_assign_proc : process(grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_start, grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_start, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_exp_33_17_s_fu_570_ap_start <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_exp_33_17_s_fu_570_ap_start <= grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_start;
        else 
            grp_exp_33_17_s_fu_570_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_exp_33_17_s_fu_570_x_assign_proc : process(grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_din1, grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_din1, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_exp_33_17_s_fu_570_x <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_grp_exp_33_17_s_fu_570_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_exp_33_17_s_fu_570_x <= grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_grp_exp_33_17_s_fu_570_p_din1;
        else 
            grp_exp_33_17_s_fu_570_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    idxprom40_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(maxindex_loc_fu_84),64));

    input_Dense_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            input_Dense_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            input_Dense_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_Dense_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_Dense_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_Dense_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_Dense_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_Dense_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            input_Dense_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            input_Dense_address0 <= "XXXX";
        end if; 
    end process;


    input_Dense_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            input_Dense_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            input_Dense_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_Dense_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_Dense_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_Dense_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_Dense_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_Dense_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            input_Dense_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            input_Dense_address1 <= "XXXX";
        end if; 
    end process;


    input_Dense_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_Dense_ce0 <= ap_const_logic_1;
        else 
            input_Dense_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_Dense_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            input_Dense_ce1 <= ap_const_logic_1;
        else 
            input_Dense_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_ARADDR <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARADDR;
    m_axi_gmem1_ARBURST <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARBURST;
    m_axi_gmem1_ARCACHE <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARCACHE;
    m_axi_gmem1_ARID <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARID;
    m_axi_gmem1_ARLEN <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARLEN;
    m_axi_gmem1_ARLOCK <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARLOCK;
    m_axi_gmem1_ARPROT <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARPROT;
    m_axi_gmem1_ARQOS <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARQOS;
    m_axi_gmem1_ARREGION <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARREGION;
    m_axi_gmem1_ARSIZE <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARSIZE;
    m_axi_gmem1_ARUSER <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARUSER;

    m_axi_gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state9, grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARVALID, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_gmem1_ARVALID <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_ARVALID;
        else 
            m_axi_gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;

    m_axi_gmem1_RREADY_assign_proc : process(ap_CS_fsm_state9, grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_RREADY, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_gmem1_RREADY <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_m_axi_gmem1_RREADY;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_WDATA <= ap_const_lv32_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    out_Dense_V_addr_reg_557 <= ap_const_lv64_0(4 - 1 downto 0);

    out_Dense_V_address0_assign_proc : process(out_Dense_V_addr_reg_557, ap_CS_fsm_state11, ap_CS_fsm_state15, grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_address0, grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_address0, grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_address0, grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_address0, grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_address0, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, idxprom40_fu_357_p1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_Dense_V_address0 <= out_Dense_V_addr_reg_557;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_Dense_V_address0 <= idxprom40_fu_357_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_Dense_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            out_Dense_V_address0 <= grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_Dense_V_address0 <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            out_Dense_V_address0 <= grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_Dense_V_address0 <= grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_Dense_V_address0 <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_address0;
        else 
            out_Dense_V_address0 <= "XXXX";
        end if; 
    end process;


    out_Dense_V_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state15, grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_ce0, grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_ce0, grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_ce0, grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce0, grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_ce0, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            out_Dense_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            out_Dense_V_ce0 <= grp_Dense_2_Pipeline_VITIS_LOOP_85_3_fu_339_out_Dense_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_Dense_V_ce0 <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            out_Dense_V_ce0 <= grp_Dense_2_Pipeline_VITIS_LOOP_74_1_fu_313_out_Dense_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_Dense_V_ce0 <= grp_Dense_2_Pipeline_loop_detect_fu_306_out_Dense_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_Dense_V_ce0 <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_ce0;
        else 
            out_Dense_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_Dense_V_ce1_assign_proc : process(grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce1, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_Dense_V_ce1 <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_ce1;
        else 
            out_Dense_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_Dense_V_d0_assign_proc : process(grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_d0, grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_d0, ap_CS_fsm_state10, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_Dense_V_d0 <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_Dense_V_d0 <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_d0;
        else 
            out_Dense_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_Dense_V_we0_assign_proc : process(grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_we0, grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_we0, ap_CS_fsm_state10, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_Dense_V_we0 <= grp_Dense_2_Pipeline_VITIS_LOOP_79_2_fu_326_out_Dense_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_Dense_V_we0 <= grp_Dense_2_Pipeline_loop_for_a_Dense_2_fu_277_out_Dense_V_we0;
        else 
            out_Dense_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
